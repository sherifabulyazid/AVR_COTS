
DIO.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00002a8a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  00800060  00002a8a  00002afe  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00001860  00000000  00000000  00002b08  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      000008f5  00000000  00000000  00004368  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000140  00000000  00000000  00004c5d  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000170  00000000  00000000  00004d9d  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c49  00000000  00000000  00004f0d  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000eeb  00000000  00000000  00006b56  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000dad  00000000  00000000  00007a41  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000160  00000000  00000000  000087f0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000028d  00000000  00000000  00008950  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007ce  00000000  00000000  00008bdd  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  000093ab  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ea e8       	ldi	r30, 0x8A	; 138
      68:	fa e2       	ldi	r31, 0x2A	; 42
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a8 36       	cpi	r26, 0x68	; 104
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 43 0a 	call	0x1486	; 0x1486 <main>
      7a:	0c 94 43 15 	jmp	0x2a86	; 0x2a86 <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 41 03 	call	0x682	; 0x682 <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 0c 15 	jmp	0x2a18	; 0x2a18 <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	a0 e6       	ldi	r26, 0x60	; 96
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 28 15 	jmp	0x2a50	; 0x2a50 <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 18 15 	jmp	0x2a30	; 0x2a30 <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 34 15 	jmp	0x2a68	; 0x2a68 <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 18 15 	jmp	0x2a30	; 0x2a30 <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 34 15 	jmp	0x2a68	; 0x2a68 <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 0c 15 	jmp	0x2a18	; 0x2a18 <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__mulsf3+0x60>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__mulsf3+0x76>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__mulsf3+0x4e>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__mulsf3+0x60>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__mulsf3+0x56>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__mulsf3+0x5c>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__mulsf3+0x76>
     484:	80 e6       	ldi	r24, 0x60	; 96
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__mulsf3+0x1e8>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__mulsf3+0x72>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__mulsf3+0x1e8>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__mulsf3+0x88>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__mulsf3+0x1e8>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__mulsf3+0xf4>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__mulsf3+0xe8>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__mulsf3+0x110>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__mulsf3+0x12a>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__mulsf3+0xb0>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__mulsf3+0x16e>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__mulsf3+0x162>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__mulsf3+0x140>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__mulsf3+0x18c>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__mulsf3+0x174>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__mulsf3+0x1ce>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__mulsf3+0x1ce>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__mulsf3+0x1ce>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__mulsf3+0x1d8>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 28 15 	jmp	0x2a50	; 0x2a50 <__epilogue_restores__>

00000622 <__gtsf2>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 18 15 	jmp	0x2a30	; 0x2a30 <__prologue_saves__+0x18>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	89 e0       	ldi	r24, 0x09	; 9
     640:	e8 2e       	mov	r14, r24
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     662:	89 85       	ldd	r24, Y+9	; 0x09
     664:	82 30       	cpi	r24, 0x02	; 2
     666:	40 f0       	brcs	.+16     	; 0x678 <__gtsf2+0x56>
     668:	89 89       	ldd	r24, Y+17	; 0x11
     66a:	82 30       	cpi	r24, 0x02	; 2
     66c:	28 f0       	brcs	.+10     	; 0x678 <__gtsf2+0x56>
     66e:	c7 01       	movw	r24, r14
     670:	b8 01       	movw	r22, r16
     672:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     676:	01 c0       	rjmp	.+2      	; 0x67a <__gtsf2+0x58>
     678:	8f ef       	ldi	r24, 0xFF	; 255
     67a:	68 96       	adiw	r28, 0x18	; 24
     67c:	e6 e0       	ldi	r30, 0x06	; 6
     67e:	0c 94 34 15 	jmp	0x2a68	; 0x2a68 <__epilogue_restores__+0x18>

00000682 <__gesf2>:
     682:	a8 e1       	ldi	r26, 0x18	; 24
     684:	b0 e0       	ldi	r27, 0x00	; 0
     686:	e7 e4       	ldi	r30, 0x47	; 71
     688:	f3 e0       	ldi	r31, 0x03	; 3
     68a:	0c 94 18 15 	jmp	0x2a30	; 0x2a30 <__prologue_saves__+0x18>
     68e:	69 83       	std	Y+1, r22	; 0x01
     690:	7a 83       	std	Y+2, r23	; 0x02
     692:	8b 83       	std	Y+3, r24	; 0x03
     694:	9c 83       	std	Y+4, r25	; 0x04
     696:	2d 83       	std	Y+5, r18	; 0x05
     698:	3e 83       	std	Y+6, r19	; 0x06
     69a:	4f 83       	std	Y+7, r20	; 0x07
     69c:	58 87       	std	Y+8, r21	; 0x08
     69e:	89 e0       	ldi	r24, 0x09	; 9
     6a0:	e8 2e       	mov	r14, r24
     6a2:	f1 2c       	mov	r15, r1
     6a4:	ec 0e       	add	r14, r28
     6a6:	fd 1e       	adc	r15, r29
     6a8:	ce 01       	movw	r24, r28
     6aa:	01 96       	adiw	r24, 0x01	; 1
     6ac:	b7 01       	movw	r22, r14
     6ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6b2:	8e 01       	movw	r16, r28
     6b4:	0f 5e       	subi	r16, 0xEF	; 239
     6b6:	1f 4f       	sbci	r17, 0xFF	; 255
     6b8:	ce 01       	movw	r24, r28
     6ba:	05 96       	adiw	r24, 0x05	; 5
     6bc:	b8 01       	movw	r22, r16
     6be:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6c2:	89 85       	ldd	r24, Y+9	; 0x09
     6c4:	82 30       	cpi	r24, 0x02	; 2
     6c6:	40 f0       	brcs	.+16     	; 0x6d8 <__gesf2+0x56>
     6c8:	89 89       	ldd	r24, Y+17	; 0x11
     6ca:	82 30       	cpi	r24, 0x02	; 2
     6cc:	28 f0       	brcs	.+10     	; 0x6d8 <__gesf2+0x56>
     6ce:	c7 01       	movw	r24, r14
     6d0:	b8 01       	movw	r22, r16
     6d2:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     6d6:	01 c0       	rjmp	.+2      	; 0x6da <__gesf2+0x58>
     6d8:	8f ef       	ldi	r24, 0xFF	; 255
     6da:	68 96       	adiw	r28, 0x18	; 24
     6dc:	e6 e0       	ldi	r30, 0x06	; 6
     6de:	0c 94 34 15 	jmp	0x2a68	; 0x2a68 <__epilogue_restores__+0x18>

000006e2 <__ltsf2>:
     6e2:	a8 e1       	ldi	r26, 0x18	; 24
     6e4:	b0 e0       	ldi	r27, 0x00	; 0
     6e6:	e7 e7       	ldi	r30, 0x77	; 119
     6e8:	f3 e0       	ldi	r31, 0x03	; 3
     6ea:	0c 94 18 15 	jmp	0x2a30	; 0x2a30 <__prologue_saves__+0x18>
     6ee:	69 83       	std	Y+1, r22	; 0x01
     6f0:	7a 83       	std	Y+2, r23	; 0x02
     6f2:	8b 83       	std	Y+3, r24	; 0x03
     6f4:	9c 83       	std	Y+4, r25	; 0x04
     6f6:	2d 83       	std	Y+5, r18	; 0x05
     6f8:	3e 83       	std	Y+6, r19	; 0x06
     6fa:	4f 83       	std	Y+7, r20	; 0x07
     6fc:	58 87       	std	Y+8, r21	; 0x08
     6fe:	89 e0       	ldi	r24, 0x09	; 9
     700:	e8 2e       	mov	r14, r24
     702:	f1 2c       	mov	r15, r1
     704:	ec 0e       	add	r14, r28
     706:	fd 1e       	adc	r15, r29
     708:	ce 01       	movw	r24, r28
     70a:	01 96       	adiw	r24, 0x01	; 1
     70c:	b7 01       	movw	r22, r14
     70e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     712:	8e 01       	movw	r16, r28
     714:	0f 5e       	subi	r16, 0xEF	; 239
     716:	1f 4f       	sbci	r17, 0xFF	; 255
     718:	ce 01       	movw	r24, r28
     71a:	05 96       	adiw	r24, 0x05	; 5
     71c:	b8 01       	movw	r22, r16
     71e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     722:	89 85       	ldd	r24, Y+9	; 0x09
     724:	82 30       	cpi	r24, 0x02	; 2
     726:	40 f0       	brcs	.+16     	; 0x738 <__ltsf2+0x56>
     728:	89 89       	ldd	r24, Y+17	; 0x11
     72a:	82 30       	cpi	r24, 0x02	; 2
     72c:	28 f0       	brcs	.+10     	; 0x738 <__ltsf2+0x56>
     72e:	c7 01       	movw	r24, r14
     730:	b8 01       	movw	r22, r16
     732:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     736:	01 c0       	rjmp	.+2      	; 0x73a <__ltsf2+0x58>
     738:	81 e0       	ldi	r24, 0x01	; 1
     73a:	68 96       	adiw	r28, 0x18	; 24
     73c:	e6 e0       	ldi	r30, 0x06	; 6
     73e:	0c 94 34 15 	jmp	0x2a68	; 0x2a68 <__epilogue_restores__+0x18>

00000742 <__fixsfsi>:
     742:	ac e0       	ldi	r26, 0x0C	; 12
     744:	b0 e0       	ldi	r27, 0x00	; 0
     746:	e7 ea       	ldi	r30, 0xA7	; 167
     748:	f3 e0       	ldi	r31, 0x03	; 3
     74a:	0c 94 1c 15 	jmp	0x2a38	; 0x2a38 <__prologue_saves__+0x20>
     74e:	69 83       	std	Y+1, r22	; 0x01
     750:	7a 83       	std	Y+2, r23	; 0x02
     752:	8b 83       	std	Y+3, r24	; 0x03
     754:	9c 83       	std	Y+4, r25	; 0x04
     756:	ce 01       	movw	r24, r28
     758:	01 96       	adiw	r24, 0x01	; 1
     75a:	be 01       	movw	r22, r28
     75c:	6b 5f       	subi	r22, 0xFB	; 251
     75e:	7f 4f       	sbci	r23, 0xFF	; 255
     760:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     764:	8d 81       	ldd	r24, Y+5	; 0x05
     766:	82 30       	cpi	r24, 0x02	; 2
     768:	61 f1       	breq	.+88     	; 0x7c2 <__fixsfsi+0x80>
     76a:	82 30       	cpi	r24, 0x02	; 2
     76c:	50 f1       	brcs	.+84     	; 0x7c2 <__fixsfsi+0x80>
     76e:	84 30       	cpi	r24, 0x04	; 4
     770:	21 f4       	brne	.+8      	; 0x77a <__fixsfsi+0x38>
     772:	8e 81       	ldd	r24, Y+6	; 0x06
     774:	88 23       	and	r24, r24
     776:	51 f1       	breq	.+84     	; 0x7cc <__fixsfsi+0x8a>
     778:	2e c0       	rjmp	.+92     	; 0x7d6 <__fixsfsi+0x94>
     77a:	2f 81       	ldd	r18, Y+7	; 0x07
     77c:	38 85       	ldd	r19, Y+8	; 0x08
     77e:	37 fd       	sbrc	r19, 7
     780:	20 c0       	rjmp	.+64     	; 0x7c2 <__fixsfsi+0x80>
     782:	6e 81       	ldd	r22, Y+6	; 0x06
     784:	2f 31       	cpi	r18, 0x1F	; 31
     786:	31 05       	cpc	r19, r1
     788:	1c f0       	brlt	.+6      	; 0x790 <__fixsfsi+0x4e>
     78a:	66 23       	and	r22, r22
     78c:	f9 f0       	breq	.+62     	; 0x7cc <__fixsfsi+0x8a>
     78e:	23 c0       	rjmp	.+70     	; 0x7d6 <__fixsfsi+0x94>
     790:	8e e1       	ldi	r24, 0x1E	; 30
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	82 1b       	sub	r24, r18
     796:	93 0b       	sbc	r25, r19
     798:	29 85       	ldd	r18, Y+9	; 0x09
     79a:	3a 85       	ldd	r19, Y+10	; 0x0a
     79c:	4b 85       	ldd	r20, Y+11	; 0x0b
     79e:	5c 85       	ldd	r21, Y+12	; 0x0c
     7a0:	04 c0       	rjmp	.+8      	; 0x7aa <__fixsfsi+0x68>
     7a2:	56 95       	lsr	r21
     7a4:	47 95       	ror	r20
     7a6:	37 95       	ror	r19
     7a8:	27 95       	ror	r18
     7aa:	8a 95       	dec	r24
     7ac:	d2 f7       	brpl	.-12     	; 0x7a2 <__fixsfsi+0x60>
     7ae:	66 23       	and	r22, r22
     7b0:	b1 f0       	breq	.+44     	; 0x7de <__fixsfsi+0x9c>
     7b2:	50 95       	com	r21
     7b4:	40 95       	com	r20
     7b6:	30 95       	com	r19
     7b8:	21 95       	neg	r18
     7ba:	3f 4f       	sbci	r19, 0xFF	; 255
     7bc:	4f 4f       	sbci	r20, 0xFF	; 255
     7be:	5f 4f       	sbci	r21, 0xFF	; 255
     7c0:	0e c0       	rjmp	.+28     	; 0x7de <__fixsfsi+0x9c>
     7c2:	20 e0       	ldi	r18, 0x00	; 0
     7c4:	30 e0       	ldi	r19, 0x00	; 0
     7c6:	40 e0       	ldi	r20, 0x00	; 0
     7c8:	50 e0       	ldi	r21, 0x00	; 0
     7ca:	09 c0       	rjmp	.+18     	; 0x7de <__fixsfsi+0x9c>
     7cc:	2f ef       	ldi	r18, 0xFF	; 255
     7ce:	3f ef       	ldi	r19, 0xFF	; 255
     7d0:	4f ef       	ldi	r20, 0xFF	; 255
     7d2:	5f e7       	ldi	r21, 0x7F	; 127
     7d4:	04 c0       	rjmp	.+8      	; 0x7de <__fixsfsi+0x9c>
     7d6:	20 e0       	ldi	r18, 0x00	; 0
     7d8:	30 e0       	ldi	r19, 0x00	; 0
     7da:	40 e0       	ldi	r20, 0x00	; 0
     7dc:	50 e8       	ldi	r21, 0x80	; 128
     7de:	b9 01       	movw	r22, r18
     7e0:	ca 01       	movw	r24, r20
     7e2:	2c 96       	adiw	r28, 0x0c	; 12
     7e4:	e2 e0       	ldi	r30, 0x02	; 2
     7e6:	0c 94 38 15 	jmp	0x2a70	; 0x2a70 <__epilogue_restores__+0x20>

000007ea <__pack_f>:
     7ea:	df 92       	push	r13
     7ec:	ef 92       	push	r14
     7ee:	ff 92       	push	r15
     7f0:	0f 93       	push	r16
     7f2:	1f 93       	push	r17
     7f4:	fc 01       	movw	r30, r24
     7f6:	e4 80       	ldd	r14, Z+4	; 0x04
     7f8:	f5 80       	ldd	r15, Z+5	; 0x05
     7fa:	06 81       	ldd	r16, Z+6	; 0x06
     7fc:	17 81       	ldd	r17, Z+7	; 0x07
     7fe:	d1 80       	ldd	r13, Z+1	; 0x01
     800:	80 81       	ld	r24, Z
     802:	82 30       	cpi	r24, 0x02	; 2
     804:	48 f4       	brcc	.+18     	; 0x818 <__pack_f+0x2e>
     806:	80 e0       	ldi	r24, 0x00	; 0
     808:	90 e0       	ldi	r25, 0x00	; 0
     80a:	a0 e1       	ldi	r26, 0x10	; 16
     80c:	b0 e0       	ldi	r27, 0x00	; 0
     80e:	e8 2a       	or	r14, r24
     810:	f9 2a       	or	r15, r25
     812:	0a 2b       	or	r16, r26
     814:	1b 2b       	or	r17, r27
     816:	a5 c0       	rjmp	.+330    	; 0x962 <__stack+0x103>
     818:	84 30       	cpi	r24, 0x04	; 4
     81a:	09 f4       	brne	.+2      	; 0x81e <__pack_f+0x34>
     81c:	9f c0       	rjmp	.+318    	; 0x95c <__stack+0xfd>
     81e:	82 30       	cpi	r24, 0x02	; 2
     820:	21 f4       	brne	.+8      	; 0x82a <__pack_f+0x40>
     822:	ee 24       	eor	r14, r14
     824:	ff 24       	eor	r15, r15
     826:	87 01       	movw	r16, r14
     828:	05 c0       	rjmp	.+10     	; 0x834 <__pack_f+0x4a>
     82a:	e1 14       	cp	r14, r1
     82c:	f1 04       	cpc	r15, r1
     82e:	01 05       	cpc	r16, r1
     830:	11 05       	cpc	r17, r1
     832:	19 f4       	brne	.+6      	; 0x83a <__pack_f+0x50>
     834:	e0 e0       	ldi	r30, 0x00	; 0
     836:	f0 e0       	ldi	r31, 0x00	; 0
     838:	96 c0       	rjmp	.+300    	; 0x966 <__stack+0x107>
     83a:	62 81       	ldd	r22, Z+2	; 0x02
     83c:	73 81       	ldd	r23, Z+3	; 0x03
     83e:	9f ef       	ldi	r25, 0xFF	; 255
     840:	62 38       	cpi	r22, 0x82	; 130
     842:	79 07       	cpc	r23, r25
     844:	0c f0       	brlt	.+2      	; 0x848 <__pack_f+0x5e>
     846:	5b c0       	rjmp	.+182    	; 0x8fe <__stack+0x9f>
     848:	22 e8       	ldi	r18, 0x82	; 130
     84a:	3f ef       	ldi	r19, 0xFF	; 255
     84c:	26 1b       	sub	r18, r22
     84e:	37 0b       	sbc	r19, r23
     850:	2a 31       	cpi	r18, 0x1A	; 26
     852:	31 05       	cpc	r19, r1
     854:	2c f0       	brlt	.+10     	; 0x860 <__stack+0x1>
     856:	20 e0       	ldi	r18, 0x00	; 0
     858:	30 e0       	ldi	r19, 0x00	; 0
     85a:	40 e0       	ldi	r20, 0x00	; 0
     85c:	50 e0       	ldi	r21, 0x00	; 0
     85e:	2a c0       	rjmp	.+84     	; 0x8b4 <__stack+0x55>
     860:	b8 01       	movw	r22, r16
     862:	a7 01       	movw	r20, r14
     864:	02 2e       	mov	r0, r18
     866:	04 c0       	rjmp	.+8      	; 0x870 <__stack+0x11>
     868:	76 95       	lsr	r23
     86a:	67 95       	ror	r22
     86c:	57 95       	ror	r21
     86e:	47 95       	ror	r20
     870:	0a 94       	dec	r0
     872:	d2 f7       	brpl	.-12     	; 0x868 <__stack+0x9>
     874:	81 e0       	ldi	r24, 0x01	; 1
     876:	90 e0       	ldi	r25, 0x00	; 0
     878:	a0 e0       	ldi	r26, 0x00	; 0
     87a:	b0 e0       	ldi	r27, 0x00	; 0
     87c:	04 c0       	rjmp	.+8      	; 0x886 <__stack+0x27>
     87e:	88 0f       	add	r24, r24
     880:	99 1f       	adc	r25, r25
     882:	aa 1f       	adc	r26, r26
     884:	bb 1f       	adc	r27, r27
     886:	2a 95       	dec	r18
     888:	d2 f7       	brpl	.-12     	; 0x87e <__stack+0x1f>
     88a:	01 97       	sbiw	r24, 0x01	; 1
     88c:	a1 09       	sbc	r26, r1
     88e:	b1 09       	sbc	r27, r1
     890:	8e 21       	and	r24, r14
     892:	9f 21       	and	r25, r15
     894:	a0 23       	and	r26, r16
     896:	b1 23       	and	r27, r17
     898:	00 97       	sbiw	r24, 0x00	; 0
     89a:	a1 05       	cpc	r26, r1
     89c:	b1 05       	cpc	r27, r1
     89e:	21 f0       	breq	.+8      	; 0x8a8 <__stack+0x49>
     8a0:	81 e0       	ldi	r24, 0x01	; 1
     8a2:	90 e0       	ldi	r25, 0x00	; 0
     8a4:	a0 e0       	ldi	r26, 0x00	; 0
     8a6:	b0 e0       	ldi	r27, 0x00	; 0
     8a8:	9a 01       	movw	r18, r20
     8aa:	ab 01       	movw	r20, r22
     8ac:	28 2b       	or	r18, r24
     8ae:	39 2b       	or	r19, r25
     8b0:	4a 2b       	or	r20, r26
     8b2:	5b 2b       	or	r21, r27
     8b4:	da 01       	movw	r26, r20
     8b6:	c9 01       	movw	r24, r18
     8b8:	8f 77       	andi	r24, 0x7F	; 127
     8ba:	90 70       	andi	r25, 0x00	; 0
     8bc:	a0 70       	andi	r26, 0x00	; 0
     8be:	b0 70       	andi	r27, 0x00	; 0
     8c0:	80 34       	cpi	r24, 0x40	; 64
     8c2:	91 05       	cpc	r25, r1
     8c4:	a1 05       	cpc	r26, r1
     8c6:	b1 05       	cpc	r27, r1
     8c8:	39 f4       	brne	.+14     	; 0x8d8 <__stack+0x79>
     8ca:	27 ff       	sbrs	r18, 7
     8cc:	09 c0       	rjmp	.+18     	; 0x8e0 <__stack+0x81>
     8ce:	20 5c       	subi	r18, 0xC0	; 192
     8d0:	3f 4f       	sbci	r19, 0xFF	; 255
     8d2:	4f 4f       	sbci	r20, 0xFF	; 255
     8d4:	5f 4f       	sbci	r21, 0xFF	; 255
     8d6:	04 c0       	rjmp	.+8      	; 0x8e0 <__stack+0x81>
     8d8:	21 5c       	subi	r18, 0xC1	; 193
     8da:	3f 4f       	sbci	r19, 0xFF	; 255
     8dc:	4f 4f       	sbci	r20, 0xFF	; 255
     8de:	5f 4f       	sbci	r21, 0xFF	; 255
     8e0:	e0 e0       	ldi	r30, 0x00	; 0
     8e2:	f0 e0       	ldi	r31, 0x00	; 0
     8e4:	20 30       	cpi	r18, 0x00	; 0
     8e6:	a0 e0       	ldi	r26, 0x00	; 0
     8e8:	3a 07       	cpc	r19, r26
     8ea:	a0 e0       	ldi	r26, 0x00	; 0
     8ec:	4a 07       	cpc	r20, r26
     8ee:	a0 e4       	ldi	r26, 0x40	; 64
     8f0:	5a 07       	cpc	r21, r26
     8f2:	10 f0       	brcs	.+4      	; 0x8f8 <__stack+0x99>
     8f4:	e1 e0       	ldi	r30, 0x01	; 1
     8f6:	f0 e0       	ldi	r31, 0x00	; 0
     8f8:	79 01       	movw	r14, r18
     8fa:	8a 01       	movw	r16, r20
     8fc:	27 c0       	rjmp	.+78     	; 0x94c <__stack+0xed>
     8fe:	60 38       	cpi	r22, 0x80	; 128
     900:	71 05       	cpc	r23, r1
     902:	64 f5       	brge	.+88     	; 0x95c <__stack+0xfd>
     904:	fb 01       	movw	r30, r22
     906:	e1 58       	subi	r30, 0x81	; 129
     908:	ff 4f       	sbci	r31, 0xFF	; 255
     90a:	d8 01       	movw	r26, r16
     90c:	c7 01       	movw	r24, r14
     90e:	8f 77       	andi	r24, 0x7F	; 127
     910:	90 70       	andi	r25, 0x00	; 0
     912:	a0 70       	andi	r26, 0x00	; 0
     914:	b0 70       	andi	r27, 0x00	; 0
     916:	80 34       	cpi	r24, 0x40	; 64
     918:	91 05       	cpc	r25, r1
     91a:	a1 05       	cpc	r26, r1
     91c:	b1 05       	cpc	r27, r1
     91e:	39 f4       	brne	.+14     	; 0x92e <__stack+0xcf>
     920:	e7 fe       	sbrs	r14, 7
     922:	0d c0       	rjmp	.+26     	; 0x93e <__stack+0xdf>
     924:	80 e4       	ldi	r24, 0x40	; 64
     926:	90 e0       	ldi	r25, 0x00	; 0
     928:	a0 e0       	ldi	r26, 0x00	; 0
     92a:	b0 e0       	ldi	r27, 0x00	; 0
     92c:	04 c0       	rjmp	.+8      	; 0x936 <__stack+0xd7>
     92e:	8f e3       	ldi	r24, 0x3F	; 63
     930:	90 e0       	ldi	r25, 0x00	; 0
     932:	a0 e0       	ldi	r26, 0x00	; 0
     934:	b0 e0       	ldi	r27, 0x00	; 0
     936:	e8 0e       	add	r14, r24
     938:	f9 1e       	adc	r15, r25
     93a:	0a 1f       	adc	r16, r26
     93c:	1b 1f       	adc	r17, r27
     93e:	17 ff       	sbrs	r17, 7
     940:	05 c0       	rjmp	.+10     	; 0x94c <__stack+0xed>
     942:	16 95       	lsr	r17
     944:	07 95       	ror	r16
     946:	f7 94       	ror	r15
     948:	e7 94       	ror	r14
     94a:	31 96       	adiw	r30, 0x01	; 1
     94c:	87 e0       	ldi	r24, 0x07	; 7
     94e:	16 95       	lsr	r17
     950:	07 95       	ror	r16
     952:	f7 94       	ror	r15
     954:	e7 94       	ror	r14
     956:	8a 95       	dec	r24
     958:	d1 f7       	brne	.-12     	; 0x94e <__stack+0xef>
     95a:	05 c0       	rjmp	.+10     	; 0x966 <__stack+0x107>
     95c:	ee 24       	eor	r14, r14
     95e:	ff 24       	eor	r15, r15
     960:	87 01       	movw	r16, r14
     962:	ef ef       	ldi	r30, 0xFF	; 255
     964:	f0 e0       	ldi	r31, 0x00	; 0
     966:	6e 2f       	mov	r22, r30
     968:	67 95       	ror	r22
     96a:	66 27       	eor	r22, r22
     96c:	67 95       	ror	r22
     96e:	90 2f       	mov	r25, r16
     970:	9f 77       	andi	r25, 0x7F	; 127
     972:	d7 94       	ror	r13
     974:	dd 24       	eor	r13, r13
     976:	d7 94       	ror	r13
     978:	8e 2f       	mov	r24, r30
     97a:	86 95       	lsr	r24
     97c:	49 2f       	mov	r20, r25
     97e:	46 2b       	or	r20, r22
     980:	58 2f       	mov	r21, r24
     982:	5d 29       	or	r21, r13
     984:	b7 01       	movw	r22, r14
     986:	ca 01       	movw	r24, r20
     988:	1f 91       	pop	r17
     98a:	0f 91       	pop	r16
     98c:	ff 90       	pop	r15
     98e:	ef 90       	pop	r14
     990:	df 90       	pop	r13
     992:	08 95       	ret

00000994 <__unpack_f>:
     994:	fc 01       	movw	r30, r24
     996:	db 01       	movw	r26, r22
     998:	40 81       	ld	r20, Z
     99a:	51 81       	ldd	r21, Z+1	; 0x01
     99c:	22 81       	ldd	r18, Z+2	; 0x02
     99e:	62 2f       	mov	r22, r18
     9a0:	6f 77       	andi	r22, 0x7F	; 127
     9a2:	70 e0       	ldi	r23, 0x00	; 0
     9a4:	22 1f       	adc	r18, r18
     9a6:	22 27       	eor	r18, r18
     9a8:	22 1f       	adc	r18, r18
     9aa:	93 81       	ldd	r25, Z+3	; 0x03
     9ac:	89 2f       	mov	r24, r25
     9ae:	88 0f       	add	r24, r24
     9b0:	82 2b       	or	r24, r18
     9b2:	28 2f       	mov	r18, r24
     9b4:	30 e0       	ldi	r19, 0x00	; 0
     9b6:	99 1f       	adc	r25, r25
     9b8:	99 27       	eor	r25, r25
     9ba:	99 1f       	adc	r25, r25
     9bc:	11 96       	adiw	r26, 0x01	; 1
     9be:	9c 93       	st	X, r25
     9c0:	11 97       	sbiw	r26, 0x01	; 1
     9c2:	21 15       	cp	r18, r1
     9c4:	31 05       	cpc	r19, r1
     9c6:	a9 f5       	brne	.+106    	; 0xa32 <__unpack_f+0x9e>
     9c8:	41 15       	cp	r20, r1
     9ca:	51 05       	cpc	r21, r1
     9cc:	61 05       	cpc	r22, r1
     9ce:	71 05       	cpc	r23, r1
     9d0:	11 f4       	brne	.+4      	; 0x9d6 <__unpack_f+0x42>
     9d2:	82 e0       	ldi	r24, 0x02	; 2
     9d4:	37 c0       	rjmp	.+110    	; 0xa44 <__unpack_f+0xb0>
     9d6:	82 e8       	ldi	r24, 0x82	; 130
     9d8:	9f ef       	ldi	r25, 0xFF	; 255
     9da:	13 96       	adiw	r26, 0x03	; 3
     9dc:	9c 93       	st	X, r25
     9de:	8e 93       	st	-X, r24
     9e0:	12 97       	sbiw	r26, 0x02	; 2
     9e2:	9a 01       	movw	r18, r20
     9e4:	ab 01       	movw	r20, r22
     9e6:	67 e0       	ldi	r22, 0x07	; 7
     9e8:	22 0f       	add	r18, r18
     9ea:	33 1f       	adc	r19, r19
     9ec:	44 1f       	adc	r20, r20
     9ee:	55 1f       	adc	r21, r21
     9f0:	6a 95       	dec	r22
     9f2:	d1 f7       	brne	.-12     	; 0x9e8 <__unpack_f+0x54>
     9f4:	83 e0       	ldi	r24, 0x03	; 3
     9f6:	8c 93       	st	X, r24
     9f8:	0d c0       	rjmp	.+26     	; 0xa14 <__unpack_f+0x80>
     9fa:	22 0f       	add	r18, r18
     9fc:	33 1f       	adc	r19, r19
     9fe:	44 1f       	adc	r20, r20
     a00:	55 1f       	adc	r21, r21
     a02:	12 96       	adiw	r26, 0x02	; 2
     a04:	8d 91       	ld	r24, X+
     a06:	9c 91       	ld	r25, X
     a08:	13 97       	sbiw	r26, 0x03	; 3
     a0a:	01 97       	sbiw	r24, 0x01	; 1
     a0c:	13 96       	adiw	r26, 0x03	; 3
     a0e:	9c 93       	st	X, r25
     a10:	8e 93       	st	-X, r24
     a12:	12 97       	sbiw	r26, 0x02	; 2
     a14:	20 30       	cpi	r18, 0x00	; 0
     a16:	80 e0       	ldi	r24, 0x00	; 0
     a18:	38 07       	cpc	r19, r24
     a1a:	80 e0       	ldi	r24, 0x00	; 0
     a1c:	48 07       	cpc	r20, r24
     a1e:	80 e4       	ldi	r24, 0x40	; 64
     a20:	58 07       	cpc	r21, r24
     a22:	58 f3       	brcs	.-42     	; 0x9fa <__unpack_f+0x66>
     a24:	14 96       	adiw	r26, 0x04	; 4
     a26:	2d 93       	st	X+, r18
     a28:	3d 93       	st	X+, r19
     a2a:	4d 93       	st	X+, r20
     a2c:	5c 93       	st	X, r21
     a2e:	17 97       	sbiw	r26, 0x07	; 7
     a30:	08 95       	ret
     a32:	2f 3f       	cpi	r18, 0xFF	; 255
     a34:	31 05       	cpc	r19, r1
     a36:	79 f4       	brne	.+30     	; 0xa56 <__unpack_f+0xc2>
     a38:	41 15       	cp	r20, r1
     a3a:	51 05       	cpc	r21, r1
     a3c:	61 05       	cpc	r22, r1
     a3e:	71 05       	cpc	r23, r1
     a40:	19 f4       	brne	.+6      	; 0xa48 <__unpack_f+0xb4>
     a42:	84 e0       	ldi	r24, 0x04	; 4
     a44:	8c 93       	st	X, r24
     a46:	08 95       	ret
     a48:	64 ff       	sbrs	r22, 4
     a4a:	03 c0       	rjmp	.+6      	; 0xa52 <__unpack_f+0xbe>
     a4c:	81 e0       	ldi	r24, 0x01	; 1
     a4e:	8c 93       	st	X, r24
     a50:	12 c0       	rjmp	.+36     	; 0xa76 <__unpack_f+0xe2>
     a52:	1c 92       	st	X, r1
     a54:	10 c0       	rjmp	.+32     	; 0xa76 <__unpack_f+0xe2>
     a56:	2f 57       	subi	r18, 0x7F	; 127
     a58:	30 40       	sbci	r19, 0x00	; 0
     a5a:	13 96       	adiw	r26, 0x03	; 3
     a5c:	3c 93       	st	X, r19
     a5e:	2e 93       	st	-X, r18
     a60:	12 97       	sbiw	r26, 0x02	; 2
     a62:	83 e0       	ldi	r24, 0x03	; 3
     a64:	8c 93       	st	X, r24
     a66:	87 e0       	ldi	r24, 0x07	; 7
     a68:	44 0f       	add	r20, r20
     a6a:	55 1f       	adc	r21, r21
     a6c:	66 1f       	adc	r22, r22
     a6e:	77 1f       	adc	r23, r23
     a70:	8a 95       	dec	r24
     a72:	d1 f7       	brne	.-12     	; 0xa68 <__unpack_f+0xd4>
     a74:	70 64       	ori	r23, 0x40	; 64
     a76:	14 96       	adiw	r26, 0x04	; 4
     a78:	4d 93       	st	X+, r20
     a7a:	5d 93       	st	X+, r21
     a7c:	6d 93       	st	X+, r22
     a7e:	7c 93       	st	X, r23
     a80:	17 97       	sbiw	r26, 0x07	; 7
     a82:	08 95       	ret

00000a84 <__fpcmp_parts_f>:
     a84:	1f 93       	push	r17
     a86:	dc 01       	movw	r26, r24
     a88:	fb 01       	movw	r30, r22
     a8a:	9c 91       	ld	r25, X
     a8c:	92 30       	cpi	r25, 0x02	; 2
     a8e:	08 f4       	brcc	.+2      	; 0xa92 <__fpcmp_parts_f+0xe>
     a90:	47 c0       	rjmp	.+142    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a92:	80 81       	ld	r24, Z
     a94:	82 30       	cpi	r24, 0x02	; 2
     a96:	08 f4       	brcc	.+2      	; 0xa9a <__fpcmp_parts_f+0x16>
     a98:	43 c0       	rjmp	.+134    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a9a:	94 30       	cpi	r25, 0x04	; 4
     a9c:	51 f4       	brne	.+20     	; 0xab2 <__fpcmp_parts_f+0x2e>
     a9e:	11 96       	adiw	r26, 0x01	; 1
     aa0:	1c 91       	ld	r17, X
     aa2:	84 30       	cpi	r24, 0x04	; 4
     aa4:	99 f5       	brne	.+102    	; 0xb0c <__fpcmp_parts_f+0x88>
     aa6:	81 81       	ldd	r24, Z+1	; 0x01
     aa8:	68 2f       	mov	r22, r24
     aaa:	70 e0       	ldi	r23, 0x00	; 0
     aac:	61 1b       	sub	r22, r17
     aae:	71 09       	sbc	r23, r1
     ab0:	3f c0       	rjmp	.+126    	; 0xb30 <__fpcmp_parts_f+0xac>
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	21 f0       	breq	.+8      	; 0xabe <__fpcmp_parts_f+0x3a>
     ab6:	92 30       	cpi	r25, 0x02	; 2
     ab8:	31 f4       	brne	.+12     	; 0xac6 <__fpcmp_parts_f+0x42>
     aba:	82 30       	cpi	r24, 0x02	; 2
     abc:	b9 f1       	breq	.+110    	; 0xb2c <__fpcmp_parts_f+0xa8>
     abe:	81 81       	ldd	r24, Z+1	; 0x01
     ac0:	88 23       	and	r24, r24
     ac2:	89 f1       	breq	.+98     	; 0xb26 <__fpcmp_parts_f+0xa2>
     ac4:	2d c0       	rjmp	.+90     	; 0xb20 <__fpcmp_parts_f+0x9c>
     ac6:	11 96       	adiw	r26, 0x01	; 1
     ac8:	1c 91       	ld	r17, X
     aca:	11 97       	sbiw	r26, 0x01	; 1
     acc:	82 30       	cpi	r24, 0x02	; 2
     ace:	f1 f0       	breq	.+60     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad0:	81 81       	ldd	r24, Z+1	; 0x01
     ad2:	18 17       	cp	r17, r24
     ad4:	d9 f4       	brne	.+54     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad6:	12 96       	adiw	r26, 0x02	; 2
     ad8:	2d 91       	ld	r18, X+
     ada:	3c 91       	ld	r19, X
     adc:	13 97       	sbiw	r26, 0x03	; 3
     ade:	82 81       	ldd	r24, Z+2	; 0x02
     ae0:	93 81       	ldd	r25, Z+3	; 0x03
     ae2:	82 17       	cp	r24, r18
     ae4:	93 07       	cpc	r25, r19
     ae6:	94 f0       	brlt	.+36     	; 0xb0c <__fpcmp_parts_f+0x88>
     ae8:	28 17       	cp	r18, r24
     aea:	39 07       	cpc	r19, r25
     aec:	bc f0       	brlt	.+46     	; 0xb1c <__fpcmp_parts_f+0x98>
     aee:	14 96       	adiw	r26, 0x04	; 4
     af0:	8d 91       	ld	r24, X+
     af2:	9d 91       	ld	r25, X+
     af4:	0d 90       	ld	r0, X+
     af6:	bc 91       	ld	r27, X
     af8:	a0 2d       	mov	r26, r0
     afa:	24 81       	ldd	r18, Z+4	; 0x04
     afc:	35 81       	ldd	r19, Z+5	; 0x05
     afe:	46 81       	ldd	r20, Z+6	; 0x06
     b00:	57 81       	ldd	r21, Z+7	; 0x07
     b02:	28 17       	cp	r18, r24
     b04:	39 07       	cpc	r19, r25
     b06:	4a 07       	cpc	r20, r26
     b08:	5b 07       	cpc	r21, r27
     b0a:	18 f4       	brcc	.+6      	; 0xb12 <__fpcmp_parts_f+0x8e>
     b0c:	11 23       	and	r17, r17
     b0e:	41 f0       	breq	.+16     	; 0xb20 <__fpcmp_parts_f+0x9c>
     b10:	0a c0       	rjmp	.+20     	; 0xb26 <__fpcmp_parts_f+0xa2>
     b12:	82 17       	cp	r24, r18
     b14:	93 07       	cpc	r25, r19
     b16:	a4 07       	cpc	r26, r20
     b18:	b5 07       	cpc	r27, r21
     b1a:	40 f4       	brcc	.+16     	; 0xb2c <__fpcmp_parts_f+0xa8>
     b1c:	11 23       	and	r17, r17
     b1e:	19 f0       	breq	.+6      	; 0xb26 <__fpcmp_parts_f+0xa2>
     b20:	61 e0       	ldi	r22, 0x01	; 1
     b22:	70 e0       	ldi	r23, 0x00	; 0
     b24:	05 c0       	rjmp	.+10     	; 0xb30 <__fpcmp_parts_f+0xac>
     b26:	6f ef       	ldi	r22, 0xFF	; 255
     b28:	7f ef       	ldi	r23, 0xFF	; 255
     b2a:	02 c0       	rjmp	.+4      	; 0xb30 <__fpcmp_parts_f+0xac>
     b2c:	60 e0       	ldi	r22, 0x00	; 0
     b2e:	70 e0       	ldi	r23, 0x00	; 0
     b30:	cb 01       	movw	r24, r22
     b32:	1f 91       	pop	r17
     b34:	08 95       	ret

00000b36 <setPinDirection>:
#include "DIO_Interface.h"
#include "DIO_Private.h"
#include "DIO_Register.h"

uint8 setPinDirection(uint8  Copy_Port ,  uint8 Copy_Pin ,  uint8 Copy_Direction)
{
     b36:	df 93       	push	r29
     b38:	cf 93       	push	r28
     b3a:	cd b7       	in	r28, 0x3d	; 61
     b3c:	de b7       	in	r29, 0x3e	; 62
     b3e:	28 97       	sbiw	r28, 0x08	; 8
     b40:	0f b6       	in	r0, 0x3f	; 63
     b42:	f8 94       	cli
     b44:	de bf       	out	0x3e, r29	; 62
     b46:	0f be       	out	0x3f, r0	; 63
     b48:	cd bf       	out	0x3d, r28	; 61
     b4a:	8a 83       	std	Y+2, r24	; 0x02
     b4c:	6b 83       	std	Y+3, r22	; 0x03
     b4e:	4c 83       	std	Y+4, r20	; 0x04
	uint8 local_ErrorStatus=0;
     b50:	19 82       	std	Y+1, r1	; 0x01
	if (Copy_Pin <= 7)
     b52:	8b 81       	ldd	r24, Y+3	; 0x03
     b54:	88 30       	cpi	r24, 0x08	; 8
     b56:	08 f0       	brcs	.+2      	; 0xb5a <setPinDirection+0x24>
     b58:	f3 c0       	rjmp	.+486    	; 0xd40 <setPinDirection+0x20a>
	{
		if(Copy_Direction == OUTPUT)
     b5a:	8c 81       	ldd	r24, Y+4	; 0x04
     b5c:	81 30       	cpi	r24, 0x01	; 1
     b5e:	09 f0       	breq	.+2      	; 0xb62 <setPinDirection+0x2c>
     b60:	72 c0       	rjmp	.+228    	; 0xc46 <setPinDirection+0x110>
		{
			switch(Copy_Port)
     b62:	8a 81       	ldd	r24, Y+2	; 0x02
     b64:	28 2f       	mov	r18, r24
     b66:	30 e0       	ldi	r19, 0x00	; 0
     b68:	38 87       	std	Y+8, r19	; 0x08
     b6a:	2f 83       	std	Y+7, r18	; 0x07
     b6c:	8f 81       	ldd	r24, Y+7	; 0x07
     b6e:	98 85       	ldd	r25, Y+8	; 0x08
     b70:	81 30       	cpi	r24, 0x01	; 1
     b72:	91 05       	cpc	r25, r1
     b74:	49 f1       	breq	.+82     	; 0xbc8 <setPinDirection+0x92>
     b76:	2f 81       	ldd	r18, Y+7	; 0x07
     b78:	38 85       	ldd	r19, Y+8	; 0x08
     b7a:	22 30       	cpi	r18, 0x02	; 2
     b7c:	31 05       	cpc	r19, r1
     b7e:	2c f4       	brge	.+10     	; 0xb8a <setPinDirection+0x54>
     b80:	8f 81       	ldd	r24, Y+7	; 0x07
     b82:	98 85       	ldd	r25, Y+8	; 0x08
     b84:	00 97       	sbiw	r24, 0x00	; 0
     b86:	61 f0       	breq	.+24     	; 0xba0 <setPinDirection+0x6a>
     b88:	5b c0       	rjmp	.+182    	; 0xc40 <setPinDirection+0x10a>
     b8a:	2f 81       	ldd	r18, Y+7	; 0x07
     b8c:	38 85       	ldd	r19, Y+8	; 0x08
     b8e:	22 30       	cpi	r18, 0x02	; 2
     b90:	31 05       	cpc	r19, r1
     b92:	71 f1       	breq	.+92     	; 0xbf0 <setPinDirection+0xba>
     b94:	8f 81       	ldd	r24, Y+7	; 0x07
     b96:	98 85       	ldd	r25, Y+8	; 0x08
     b98:	83 30       	cpi	r24, 0x03	; 3
     b9a:	91 05       	cpc	r25, r1
     b9c:	e9 f1       	breq	.+122    	; 0xc18 <setPinDirection+0xe2>
     b9e:	50 c0       	rjmp	.+160    	; 0xc40 <setPinDirection+0x10a>
			{
				case DIO_PORTA:
					SETBIT(DDRA,Copy_Pin);
     ba0:	aa e3       	ldi	r26, 0x3A	; 58
     ba2:	b0 e0       	ldi	r27, 0x00	; 0
     ba4:	ea e3       	ldi	r30, 0x3A	; 58
     ba6:	f0 e0       	ldi	r31, 0x00	; 0
     ba8:	80 81       	ld	r24, Z
     baa:	48 2f       	mov	r20, r24
     bac:	8b 81       	ldd	r24, Y+3	; 0x03
     bae:	28 2f       	mov	r18, r24
     bb0:	30 e0       	ldi	r19, 0x00	; 0
     bb2:	81 e0       	ldi	r24, 0x01	; 1
     bb4:	90 e0       	ldi	r25, 0x00	; 0
     bb6:	02 2e       	mov	r0, r18
     bb8:	02 c0       	rjmp	.+4      	; 0xbbe <setPinDirection+0x88>
     bba:	88 0f       	add	r24, r24
     bbc:	99 1f       	adc	r25, r25
     bbe:	0a 94       	dec	r0
     bc0:	e2 f7       	brpl	.-8      	; 0xbba <setPinDirection+0x84>
     bc2:	84 2b       	or	r24, r20
     bc4:	8c 93       	st	X, r24
     bc6:	bc c0       	rjmp	.+376    	; 0xd40 <setPinDirection+0x20a>
					break;
				case DIO_PORTB:
					SETBIT(DDRB,Copy_Pin);
     bc8:	a7 e3       	ldi	r26, 0x37	; 55
     bca:	b0 e0       	ldi	r27, 0x00	; 0
     bcc:	e7 e3       	ldi	r30, 0x37	; 55
     bce:	f0 e0       	ldi	r31, 0x00	; 0
     bd0:	80 81       	ld	r24, Z
     bd2:	48 2f       	mov	r20, r24
     bd4:	8b 81       	ldd	r24, Y+3	; 0x03
     bd6:	28 2f       	mov	r18, r24
     bd8:	30 e0       	ldi	r19, 0x00	; 0
     bda:	81 e0       	ldi	r24, 0x01	; 1
     bdc:	90 e0       	ldi	r25, 0x00	; 0
     bde:	02 2e       	mov	r0, r18
     be0:	02 c0       	rjmp	.+4      	; 0xbe6 <setPinDirection+0xb0>
     be2:	88 0f       	add	r24, r24
     be4:	99 1f       	adc	r25, r25
     be6:	0a 94       	dec	r0
     be8:	e2 f7       	brpl	.-8      	; 0xbe2 <setPinDirection+0xac>
     bea:	84 2b       	or	r24, r20
     bec:	8c 93       	st	X, r24
     bee:	a8 c0       	rjmp	.+336    	; 0xd40 <setPinDirection+0x20a>
					break;
				case DIO_PORTC:
					SETBIT(DDRC,Copy_Pin);
     bf0:	a4 e3       	ldi	r26, 0x34	; 52
     bf2:	b0 e0       	ldi	r27, 0x00	; 0
     bf4:	e4 e3       	ldi	r30, 0x34	; 52
     bf6:	f0 e0       	ldi	r31, 0x00	; 0
     bf8:	80 81       	ld	r24, Z
     bfa:	48 2f       	mov	r20, r24
     bfc:	8b 81       	ldd	r24, Y+3	; 0x03
     bfe:	28 2f       	mov	r18, r24
     c00:	30 e0       	ldi	r19, 0x00	; 0
     c02:	81 e0       	ldi	r24, 0x01	; 1
     c04:	90 e0       	ldi	r25, 0x00	; 0
     c06:	02 2e       	mov	r0, r18
     c08:	02 c0       	rjmp	.+4      	; 0xc0e <setPinDirection+0xd8>
     c0a:	88 0f       	add	r24, r24
     c0c:	99 1f       	adc	r25, r25
     c0e:	0a 94       	dec	r0
     c10:	e2 f7       	brpl	.-8      	; 0xc0a <setPinDirection+0xd4>
     c12:	84 2b       	or	r24, r20
     c14:	8c 93       	st	X, r24
     c16:	94 c0       	rjmp	.+296    	; 0xd40 <setPinDirection+0x20a>
						break;
				case DIO_PORTD:
					SETBIT(DDRD,Copy_Pin);
     c18:	a1 e3       	ldi	r26, 0x31	; 49
     c1a:	b0 e0       	ldi	r27, 0x00	; 0
     c1c:	e1 e3       	ldi	r30, 0x31	; 49
     c1e:	f0 e0       	ldi	r31, 0x00	; 0
     c20:	80 81       	ld	r24, Z
     c22:	48 2f       	mov	r20, r24
     c24:	8b 81       	ldd	r24, Y+3	; 0x03
     c26:	28 2f       	mov	r18, r24
     c28:	30 e0       	ldi	r19, 0x00	; 0
     c2a:	81 e0       	ldi	r24, 0x01	; 1
     c2c:	90 e0       	ldi	r25, 0x00	; 0
     c2e:	02 2e       	mov	r0, r18
     c30:	02 c0       	rjmp	.+4      	; 0xc36 <setPinDirection+0x100>
     c32:	88 0f       	add	r24, r24
     c34:	99 1f       	adc	r25, r25
     c36:	0a 94       	dec	r0
     c38:	e2 f7       	brpl	.-8      	; 0xc32 <setPinDirection+0xfc>
     c3a:	84 2b       	or	r24, r20
     c3c:	8c 93       	st	X, r24
     c3e:	80 c0       	rjmp	.+256    	; 0xd40 <setPinDirection+0x20a>
					break;
				default:
					local_ErrorStatus=1;
     c40:	81 e0       	ldi	r24, 0x01	; 1
     c42:	89 83       	std	Y+1, r24	; 0x01
     c44:	7d c0       	rjmp	.+250    	; 0xd40 <setPinDirection+0x20a>
					break;
			}
		}
		else if (Copy_Direction == INPUT)
     c46:	8c 81       	ldd	r24, Y+4	; 0x04
     c48:	88 23       	and	r24, r24
     c4a:	09 f0       	breq	.+2      	; 0xc4e <setPinDirection+0x118>
     c4c:	77 c0       	rjmp	.+238    	; 0xd3c <setPinDirection+0x206>
		{
			switch(Copy_Port)
     c4e:	8a 81       	ldd	r24, Y+2	; 0x02
     c50:	28 2f       	mov	r18, r24
     c52:	30 e0       	ldi	r19, 0x00	; 0
     c54:	3e 83       	std	Y+6, r19	; 0x06
     c56:	2d 83       	std	Y+5, r18	; 0x05
     c58:	8d 81       	ldd	r24, Y+5	; 0x05
     c5a:	9e 81       	ldd	r25, Y+6	; 0x06
     c5c:	81 30       	cpi	r24, 0x01	; 1
     c5e:	91 05       	cpc	r25, r1
     c60:	59 f1       	breq	.+86     	; 0xcb8 <setPinDirection+0x182>
     c62:	2d 81       	ldd	r18, Y+5	; 0x05
     c64:	3e 81       	ldd	r19, Y+6	; 0x06
     c66:	22 30       	cpi	r18, 0x02	; 2
     c68:	31 05       	cpc	r19, r1
     c6a:	2c f4       	brge	.+10     	; 0xc76 <setPinDirection+0x140>
     c6c:	8d 81       	ldd	r24, Y+5	; 0x05
     c6e:	9e 81       	ldd	r25, Y+6	; 0x06
     c70:	00 97       	sbiw	r24, 0x00	; 0
     c72:	69 f0       	breq	.+26     	; 0xc8e <setPinDirection+0x158>
     c74:	60 c0       	rjmp	.+192    	; 0xd36 <setPinDirection+0x200>
     c76:	2d 81       	ldd	r18, Y+5	; 0x05
     c78:	3e 81       	ldd	r19, Y+6	; 0x06
     c7a:	22 30       	cpi	r18, 0x02	; 2
     c7c:	31 05       	cpc	r19, r1
     c7e:	89 f1       	breq	.+98     	; 0xce2 <setPinDirection+0x1ac>
     c80:	8d 81       	ldd	r24, Y+5	; 0x05
     c82:	9e 81       	ldd	r25, Y+6	; 0x06
     c84:	83 30       	cpi	r24, 0x03	; 3
     c86:	91 05       	cpc	r25, r1
     c88:	09 f4       	brne	.+2      	; 0xc8c <setPinDirection+0x156>
     c8a:	40 c0       	rjmp	.+128    	; 0xd0c <setPinDirection+0x1d6>
     c8c:	54 c0       	rjmp	.+168    	; 0xd36 <setPinDirection+0x200>
			{
				case DIO_PORTA:
					CLEARBIT(DDRA,Copy_Pin);
     c8e:	aa e3       	ldi	r26, 0x3A	; 58
     c90:	b0 e0       	ldi	r27, 0x00	; 0
     c92:	ea e3       	ldi	r30, 0x3A	; 58
     c94:	f0 e0       	ldi	r31, 0x00	; 0
     c96:	80 81       	ld	r24, Z
     c98:	48 2f       	mov	r20, r24
     c9a:	8b 81       	ldd	r24, Y+3	; 0x03
     c9c:	28 2f       	mov	r18, r24
     c9e:	30 e0       	ldi	r19, 0x00	; 0
     ca0:	81 e0       	ldi	r24, 0x01	; 1
     ca2:	90 e0       	ldi	r25, 0x00	; 0
     ca4:	02 2e       	mov	r0, r18
     ca6:	02 c0       	rjmp	.+4      	; 0xcac <setPinDirection+0x176>
     ca8:	88 0f       	add	r24, r24
     caa:	99 1f       	adc	r25, r25
     cac:	0a 94       	dec	r0
     cae:	e2 f7       	brpl	.-8      	; 0xca8 <setPinDirection+0x172>
     cb0:	80 95       	com	r24
     cb2:	84 23       	and	r24, r20
     cb4:	8c 93       	st	X, r24
     cb6:	44 c0       	rjmp	.+136    	; 0xd40 <setPinDirection+0x20a>
					break;
				case DIO_PORTB:
					CLEARBIT(DDRB,Copy_Pin);
     cb8:	a7 e3       	ldi	r26, 0x37	; 55
     cba:	b0 e0       	ldi	r27, 0x00	; 0
     cbc:	e7 e3       	ldi	r30, 0x37	; 55
     cbe:	f0 e0       	ldi	r31, 0x00	; 0
     cc0:	80 81       	ld	r24, Z
     cc2:	48 2f       	mov	r20, r24
     cc4:	8b 81       	ldd	r24, Y+3	; 0x03
     cc6:	28 2f       	mov	r18, r24
     cc8:	30 e0       	ldi	r19, 0x00	; 0
     cca:	81 e0       	ldi	r24, 0x01	; 1
     ccc:	90 e0       	ldi	r25, 0x00	; 0
     cce:	02 2e       	mov	r0, r18
     cd0:	02 c0       	rjmp	.+4      	; 0xcd6 <setPinDirection+0x1a0>
     cd2:	88 0f       	add	r24, r24
     cd4:	99 1f       	adc	r25, r25
     cd6:	0a 94       	dec	r0
     cd8:	e2 f7       	brpl	.-8      	; 0xcd2 <setPinDirection+0x19c>
     cda:	80 95       	com	r24
     cdc:	84 23       	and	r24, r20
     cde:	8c 93       	st	X, r24
     ce0:	2f c0       	rjmp	.+94     	; 0xd40 <setPinDirection+0x20a>
					break;
				case DIO_PORTC:
					CLEARBIT(DDRC,Copy_Pin);
     ce2:	a4 e3       	ldi	r26, 0x34	; 52
     ce4:	b0 e0       	ldi	r27, 0x00	; 0
     ce6:	e4 e3       	ldi	r30, 0x34	; 52
     ce8:	f0 e0       	ldi	r31, 0x00	; 0
     cea:	80 81       	ld	r24, Z
     cec:	48 2f       	mov	r20, r24
     cee:	8b 81       	ldd	r24, Y+3	; 0x03
     cf0:	28 2f       	mov	r18, r24
     cf2:	30 e0       	ldi	r19, 0x00	; 0
     cf4:	81 e0       	ldi	r24, 0x01	; 1
     cf6:	90 e0       	ldi	r25, 0x00	; 0
     cf8:	02 2e       	mov	r0, r18
     cfa:	02 c0       	rjmp	.+4      	; 0xd00 <setPinDirection+0x1ca>
     cfc:	88 0f       	add	r24, r24
     cfe:	99 1f       	adc	r25, r25
     d00:	0a 94       	dec	r0
     d02:	e2 f7       	brpl	.-8      	; 0xcfc <setPinDirection+0x1c6>
     d04:	80 95       	com	r24
     d06:	84 23       	and	r24, r20
     d08:	8c 93       	st	X, r24
     d0a:	1a c0       	rjmp	.+52     	; 0xd40 <setPinDirection+0x20a>
						break;
				case DIO_PORTD:
					CLEARBIT(DDRD,Copy_Pin);
     d0c:	a1 e3       	ldi	r26, 0x31	; 49
     d0e:	b0 e0       	ldi	r27, 0x00	; 0
     d10:	e1 e3       	ldi	r30, 0x31	; 49
     d12:	f0 e0       	ldi	r31, 0x00	; 0
     d14:	80 81       	ld	r24, Z
     d16:	48 2f       	mov	r20, r24
     d18:	8b 81       	ldd	r24, Y+3	; 0x03
     d1a:	28 2f       	mov	r18, r24
     d1c:	30 e0       	ldi	r19, 0x00	; 0
     d1e:	81 e0       	ldi	r24, 0x01	; 1
     d20:	90 e0       	ldi	r25, 0x00	; 0
     d22:	02 2e       	mov	r0, r18
     d24:	02 c0       	rjmp	.+4      	; 0xd2a <setPinDirection+0x1f4>
     d26:	88 0f       	add	r24, r24
     d28:	99 1f       	adc	r25, r25
     d2a:	0a 94       	dec	r0
     d2c:	e2 f7       	brpl	.-8      	; 0xd26 <setPinDirection+0x1f0>
     d2e:	80 95       	com	r24
     d30:	84 23       	and	r24, r20
     d32:	8c 93       	st	X, r24
     d34:	05 c0       	rjmp	.+10     	; 0xd40 <setPinDirection+0x20a>
					break;
				default:
					local_ErrorStatus=1;
     d36:	81 e0       	ldi	r24, 0x01	; 1
     d38:	89 83       	std	Y+1, r24	; 0x01
     d3a:	02 c0       	rjmp	.+4      	; 0xd40 <setPinDirection+0x20a>
			}
		}

		else
		{
			local_ErrorStatus=1;
     d3c:	81 e0       	ldi	r24, 0x01	; 1
     d3e:	89 83       	std	Y+1, r24	; 0x01
		}
	}
	return local_ErrorStatus;
     d40:	89 81       	ldd	r24, Y+1	; 0x01
}
     d42:	28 96       	adiw	r28, 0x08	; 8
     d44:	0f b6       	in	r0, 0x3f	; 63
     d46:	f8 94       	cli
     d48:	de bf       	out	0x3e, r29	; 62
     d4a:	0f be       	out	0x3f, r0	; 63
     d4c:	cd bf       	out	0x3d, r28	; 61
     d4e:	cf 91       	pop	r28
     d50:	df 91       	pop	r29
     d52:	08 95       	ret

00000d54 <setPinVAlue>:

uint8 setPinVAlue(uint8  Copy_Port ,  uint8 Copy_Pin ,  uint8 Copy_Status)
{
     d54:	df 93       	push	r29
     d56:	cf 93       	push	r28
     d58:	cd b7       	in	r28, 0x3d	; 61
     d5a:	de b7       	in	r29, 0x3e	; 62
     d5c:	28 97       	sbiw	r28, 0x08	; 8
     d5e:	0f b6       	in	r0, 0x3f	; 63
     d60:	f8 94       	cli
     d62:	de bf       	out	0x3e, r29	; 62
     d64:	0f be       	out	0x3f, r0	; 63
     d66:	cd bf       	out	0x3d, r28	; 61
     d68:	8a 83       	std	Y+2, r24	; 0x02
     d6a:	6b 83       	std	Y+3, r22	; 0x03
     d6c:	4c 83       	std	Y+4, r20	; 0x04
	uint8 local_ErrorStatus=0;
     d6e:	19 82       	std	Y+1, r1	; 0x01
	if (Copy_Pin <= 7)
     d70:	8b 81       	ldd	r24, Y+3	; 0x03
     d72:	88 30       	cpi	r24, 0x08	; 8
     d74:	08 f0       	brcs	.+2      	; 0xd78 <setPinVAlue+0x24>
     d76:	f3 c0       	rjmp	.+486    	; 0xf5e <setPinVAlue+0x20a>
	{
		if(Copy_Status == OUTPUT_HIGH)
     d78:	8c 81       	ldd	r24, Y+4	; 0x04
     d7a:	81 30       	cpi	r24, 0x01	; 1
     d7c:	09 f0       	breq	.+2      	; 0xd80 <setPinVAlue+0x2c>
     d7e:	72 c0       	rjmp	.+228    	; 0xe64 <setPinVAlue+0x110>
		{
			switch(Copy_Port)
     d80:	8a 81       	ldd	r24, Y+2	; 0x02
     d82:	28 2f       	mov	r18, r24
     d84:	30 e0       	ldi	r19, 0x00	; 0
     d86:	38 87       	std	Y+8, r19	; 0x08
     d88:	2f 83       	std	Y+7, r18	; 0x07
     d8a:	8f 81       	ldd	r24, Y+7	; 0x07
     d8c:	98 85       	ldd	r25, Y+8	; 0x08
     d8e:	81 30       	cpi	r24, 0x01	; 1
     d90:	91 05       	cpc	r25, r1
     d92:	49 f1       	breq	.+82     	; 0xde6 <setPinVAlue+0x92>
     d94:	2f 81       	ldd	r18, Y+7	; 0x07
     d96:	38 85       	ldd	r19, Y+8	; 0x08
     d98:	22 30       	cpi	r18, 0x02	; 2
     d9a:	31 05       	cpc	r19, r1
     d9c:	2c f4       	brge	.+10     	; 0xda8 <setPinVAlue+0x54>
     d9e:	8f 81       	ldd	r24, Y+7	; 0x07
     da0:	98 85       	ldd	r25, Y+8	; 0x08
     da2:	00 97       	sbiw	r24, 0x00	; 0
     da4:	61 f0       	breq	.+24     	; 0xdbe <setPinVAlue+0x6a>
     da6:	5b c0       	rjmp	.+182    	; 0xe5e <setPinVAlue+0x10a>
     da8:	2f 81       	ldd	r18, Y+7	; 0x07
     daa:	38 85       	ldd	r19, Y+8	; 0x08
     dac:	22 30       	cpi	r18, 0x02	; 2
     dae:	31 05       	cpc	r19, r1
     db0:	71 f1       	breq	.+92     	; 0xe0e <setPinVAlue+0xba>
     db2:	8f 81       	ldd	r24, Y+7	; 0x07
     db4:	98 85       	ldd	r25, Y+8	; 0x08
     db6:	83 30       	cpi	r24, 0x03	; 3
     db8:	91 05       	cpc	r25, r1
     dba:	e9 f1       	breq	.+122    	; 0xe36 <setPinVAlue+0xe2>
     dbc:	50 c0       	rjmp	.+160    	; 0xe5e <setPinVAlue+0x10a>
			{
				case DIO_PORTA:
					SETBIT(PORTA,Copy_Pin);
     dbe:	ab e3       	ldi	r26, 0x3B	; 59
     dc0:	b0 e0       	ldi	r27, 0x00	; 0
     dc2:	eb e3       	ldi	r30, 0x3B	; 59
     dc4:	f0 e0       	ldi	r31, 0x00	; 0
     dc6:	80 81       	ld	r24, Z
     dc8:	48 2f       	mov	r20, r24
     dca:	8b 81       	ldd	r24, Y+3	; 0x03
     dcc:	28 2f       	mov	r18, r24
     dce:	30 e0       	ldi	r19, 0x00	; 0
     dd0:	81 e0       	ldi	r24, 0x01	; 1
     dd2:	90 e0       	ldi	r25, 0x00	; 0
     dd4:	02 2e       	mov	r0, r18
     dd6:	02 c0       	rjmp	.+4      	; 0xddc <setPinVAlue+0x88>
     dd8:	88 0f       	add	r24, r24
     dda:	99 1f       	adc	r25, r25
     ddc:	0a 94       	dec	r0
     dde:	e2 f7       	brpl	.-8      	; 0xdd8 <setPinVAlue+0x84>
     de0:	84 2b       	or	r24, r20
     de2:	8c 93       	st	X, r24
     de4:	bc c0       	rjmp	.+376    	; 0xf5e <setPinVAlue+0x20a>
					break;
				case DIO_PORTB:
					SETBIT(PORTB,Copy_Pin);
     de6:	a8 e3       	ldi	r26, 0x38	; 56
     de8:	b0 e0       	ldi	r27, 0x00	; 0
     dea:	e8 e3       	ldi	r30, 0x38	; 56
     dec:	f0 e0       	ldi	r31, 0x00	; 0
     dee:	80 81       	ld	r24, Z
     df0:	48 2f       	mov	r20, r24
     df2:	8b 81       	ldd	r24, Y+3	; 0x03
     df4:	28 2f       	mov	r18, r24
     df6:	30 e0       	ldi	r19, 0x00	; 0
     df8:	81 e0       	ldi	r24, 0x01	; 1
     dfa:	90 e0       	ldi	r25, 0x00	; 0
     dfc:	02 2e       	mov	r0, r18
     dfe:	02 c0       	rjmp	.+4      	; 0xe04 <setPinVAlue+0xb0>
     e00:	88 0f       	add	r24, r24
     e02:	99 1f       	adc	r25, r25
     e04:	0a 94       	dec	r0
     e06:	e2 f7       	brpl	.-8      	; 0xe00 <setPinVAlue+0xac>
     e08:	84 2b       	or	r24, r20
     e0a:	8c 93       	st	X, r24
     e0c:	a8 c0       	rjmp	.+336    	; 0xf5e <setPinVAlue+0x20a>
					break;
				case DIO_PORTC:
					SETBIT(PORTC,Copy_Pin);
     e0e:	a5 e3       	ldi	r26, 0x35	; 53
     e10:	b0 e0       	ldi	r27, 0x00	; 0
     e12:	e5 e3       	ldi	r30, 0x35	; 53
     e14:	f0 e0       	ldi	r31, 0x00	; 0
     e16:	80 81       	ld	r24, Z
     e18:	48 2f       	mov	r20, r24
     e1a:	8b 81       	ldd	r24, Y+3	; 0x03
     e1c:	28 2f       	mov	r18, r24
     e1e:	30 e0       	ldi	r19, 0x00	; 0
     e20:	81 e0       	ldi	r24, 0x01	; 1
     e22:	90 e0       	ldi	r25, 0x00	; 0
     e24:	02 2e       	mov	r0, r18
     e26:	02 c0       	rjmp	.+4      	; 0xe2c <setPinVAlue+0xd8>
     e28:	88 0f       	add	r24, r24
     e2a:	99 1f       	adc	r25, r25
     e2c:	0a 94       	dec	r0
     e2e:	e2 f7       	brpl	.-8      	; 0xe28 <setPinVAlue+0xd4>
     e30:	84 2b       	or	r24, r20
     e32:	8c 93       	st	X, r24
     e34:	94 c0       	rjmp	.+296    	; 0xf5e <setPinVAlue+0x20a>
						break;
				case DIO_PORTD:
					SETBIT(PORTD,Copy_Pin);
     e36:	a2 e3       	ldi	r26, 0x32	; 50
     e38:	b0 e0       	ldi	r27, 0x00	; 0
     e3a:	e2 e3       	ldi	r30, 0x32	; 50
     e3c:	f0 e0       	ldi	r31, 0x00	; 0
     e3e:	80 81       	ld	r24, Z
     e40:	48 2f       	mov	r20, r24
     e42:	8b 81       	ldd	r24, Y+3	; 0x03
     e44:	28 2f       	mov	r18, r24
     e46:	30 e0       	ldi	r19, 0x00	; 0
     e48:	81 e0       	ldi	r24, 0x01	; 1
     e4a:	90 e0       	ldi	r25, 0x00	; 0
     e4c:	02 2e       	mov	r0, r18
     e4e:	02 c0       	rjmp	.+4      	; 0xe54 <setPinVAlue+0x100>
     e50:	88 0f       	add	r24, r24
     e52:	99 1f       	adc	r25, r25
     e54:	0a 94       	dec	r0
     e56:	e2 f7       	brpl	.-8      	; 0xe50 <setPinVAlue+0xfc>
     e58:	84 2b       	or	r24, r20
     e5a:	8c 93       	st	X, r24
     e5c:	80 c0       	rjmp	.+256    	; 0xf5e <setPinVAlue+0x20a>
					break;
				default:
					local_ErrorStatus=1;
     e5e:	81 e0       	ldi	r24, 0x01	; 1
     e60:	89 83       	std	Y+1, r24	; 0x01
     e62:	7d c0       	rjmp	.+250    	; 0xf5e <setPinVAlue+0x20a>
					break;
			}
		}
		else if (Copy_Status == OUTPUT_LOW)
     e64:	8c 81       	ldd	r24, Y+4	; 0x04
     e66:	88 23       	and	r24, r24
     e68:	09 f0       	breq	.+2      	; 0xe6c <setPinVAlue+0x118>
     e6a:	77 c0       	rjmp	.+238    	; 0xf5a <setPinVAlue+0x206>
		{
			switch(Copy_Port)
     e6c:	8a 81       	ldd	r24, Y+2	; 0x02
     e6e:	28 2f       	mov	r18, r24
     e70:	30 e0       	ldi	r19, 0x00	; 0
     e72:	3e 83       	std	Y+6, r19	; 0x06
     e74:	2d 83       	std	Y+5, r18	; 0x05
     e76:	8d 81       	ldd	r24, Y+5	; 0x05
     e78:	9e 81       	ldd	r25, Y+6	; 0x06
     e7a:	81 30       	cpi	r24, 0x01	; 1
     e7c:	91 05       	cpc	r25, r1
     e7e:	59 f1       	breq	.+86     	; 0xed6 <setPinVAlue+0x182>
     e80:	2d 81       	ldd	r18, Y+5	; 0x05
     e82:	3e 81       	ldd	r19, Y+6	; 0x06
     e84:	22 30       	cpi	r18, 0x02	; 2
     e86:	31 05       	cpc	r19, r1
     e88:	2c f4       	brge	.+10     	; 0xe94 <setPinVAlue+0x140>
     e8a:	8d 81       	ldd	r24, Y+5	; 0x05
     e8c:	9e 81       	ldd	r25, Y+6	; 0x06
     e8e:	00 97       	sbiw	r24, 0x00	; 0
     e90:	69 f0       	breq	.+26     	; 0xeac <setPinVAlue+0x158>
     e92:	60 c0       	rjmp	.+192    	; 0xf54 <setPinVAlue+0x200>
     e94:	2d 81       	ldd	r18, Y+5	; 0x05
     e96:	3e 81       	ldd	r19, Y+6	; 0x06
     e98:	22 30       	cpi	r18, 0x02	; 2
     e9a:	31 05       	cpc	r19, r1
     e9c:	89 f1       	breq	.+98     	; 0xf00 <setPinVAlue+0x1ac>
     e9e:	8d 81       	ldd	r24, Y+5	; 0x05
     ea0:	9e 81       	ldd	r25, Y+6	; 0x06
     ea2:	83 30       	cpi	r24, 0x03	; 3
     ea4:	91 05       	cpc	r25, r1
     ea6:	09 f4       	brne	.+2      	; 0xeaa <setPinVAlue+0x156>
     ea8:	40 c0       	rjmp	.+128    	; 0xf2a <setPinVAlue+0x1d6>
     eaa:	54 c0       	rjmp	.+168    	; 0xf54 <setPinVAlue+0x200>
			{
				case DIO_PORTA:
					CLEARBIT(PORTA,Copy_Pin);
     eac:	ab e3       	ldi	r26, 0x3B	; 59
     eae:	b0 e0       	ldi	r27, 0x00	; 0
     eb0:	eb e3       	ldi	r30, 0x3B	; 59
     eb2:	f0 e0       	ldi	r31, 0x00	; 0
     eb4:	80 81       	ld	r24, Z
     eb6:	48 2f       	mov	r20, r24
     eb8:	8b 81       	ldd	r24, Y+3	; 0x03
     eba:	28 2f       	mov	r18, r24
     ebc:	30 e0       	ldi	r19, 0x00	; 0
     ebe:	81 e0       	ldi	r24, 0x01	; 1
     ec0:	90 e0       	ldi	r25, 0x00	; 0
     ec2:	02 2e       	mov	r0, r18
     ec4:	02 c0       	rjmp	.+4      	; 0xeca <setPinVAlue+0x176>
     ec6:	88 0f       	add	r24, r24
     ec8:	99 1f       	adc	r25, r25
     eca:	0a 94       	dec	r0
     ecc:	e2 f7       	brpl	.-8      	; 0xec6 <setPinVAlue+0x172>
     ece:	80 95       	com	r24
     ed0:	84 23       	and	r24, r20
     ed2:	8c 93       	st	X, r24
     ed4:	44 c0       	rjmp	.+136    	; 0xf5e <setPinVAlue+0x20a>
					break;
				case DIO_PORTB:
					CLEARBIT(PORTB,Copy_Pin);
     ed6:	a8 e3       	ldi	r26, 0x38	; 56
     ed8:	b0 e0       	ldi	r27, 0x00	; 0
     eda:	e8 e3       	ldi	r30, 0x38	; 56
     edc:	f0 e0       	ldi	r31, 0x00	; 0
     ede:	80 81       	ld	r24, Z
     ee0:	48 2f       	mov	r20, r24
     ee2:	8b 81       	ldd	r24, Y+3	; 0x03
     ee4:	28 2f       	mov	r18, r24
     ee6:	30 e0       	ldi	r19, 0x00	; 0
     ee8:	81 e0       	ldi	r24, 0x01	; 1
     eea:	90 e0       	ldi	r25, 0x00	; 0
     eec:	02 2e       	mov	r0, r18
     eee:	02 c0       	rjmp	.+4      	; 0xef4 <setPinVAlue+0x1a0>
     ef0:	88 0f       	add	r24, r24
     ef2:	99 1f       	adc	r25, r25
     ef4:	0a 94       	dec	r0
     ef6:	e2 f7       	brpl	.-8      	; 0xef0 <setPinVAlue+0x19c>
     ef8:	80 95       	com	r24
     efa:	84 23       	and	r24, r20
     efc:	8c 93       	st	X, r24
     efe:	2f c0       	rjmp	.+94     	; 0xf5e <setPinVAlue+0x20a>
					break;
				case DIO_PORTC:
					CLEARBIT(PORTC,Copy_Pin);
     f00:	a5 e3       	ldi	r26, 0x35	; 53
     f02:	b0 e0       	ldi	r27, 0x00	; 0
     f04:	e5 e3       	ldi	r30, 0x35	; 53
     f06:	f0 e0       	ldi	r31, 0x00	; 0
     f08:	80 81       	ld	r24, Z
     f0a:	48 2f       	mov	r20, r24
     f0c:	8b 81       	ldd	r24, Y+3	; 0x03
     f0e:	28 2f       	mov	r18, r24
     f10:	30 e0       	ldi	r19, 0x00	; 0
     f12:	81 e0       	ldi	r24, 0x01	; 1
     f14:	90 e0       	ldi	r25, 0x00	; 0
     f16:	02 2e       	mov	r0, r18
     f18:	02 c0       	rjmp	.+4      	; 0xf1e <setPinVAlue+0x1ca>
     f1a:	88 0f       	add	r24, r24
     f1c:	99 1f       	adc	r25, r25
     f1e:	0a 94       	dec	r0
     f20:	e2 f7       	brpl	.-8      	; 0xf1a <setPinVAlue+0x1c6>
     f22:	80 95       	com	r24
     f24:	84 23       	and	r24, r20
     f26:	8c 93       	st	X, r24
     f28:	1a c0       	rjmp	.+52     	; 0xf5e <setPinVAlue+0x20a>
						break;
				case DIO_PORTD:
					CLEARBIT(PORTD,Copy_Pin);
     f2a:	a2 e3       	ldi	r26, 0x32	; 50
     f2c:	b0 e0       	ldi	r27, 0x00	; 0
     f2e:	e2 e3       	ldi	r30, 0x32	; 50
     f30:	f0 e0       	ldi	r31, 0x00	; 0
     f32:	80 81       	ld	r24, Z
     f34:	48 2f       	mov	r20, r24
     f36:	8b 81       	ldd	r24, Y+3	; 0x03
     f38:	28 2f       	mov	r18, r24
     f3a:	30 e0       	ldi	r19, 0x00	; 0
     f3c:	81 e0       	ldi	r24, 0x01	; 1
     f3e:	90 e0       	ldi	r25, 0x00	; 0
     f40:	02 2e       	mov	r0, r18
     f42:	02 c0       	rjmp	.+4      	; 0xf48 <setPinVAlue+0x1f4>
     f44:	88 0f       	add	r24, r24
     f46:	99 1f       	adc	r25, r25
     f48:	0a 94       	dec	r0
     f4a:	e2 f7       	brpl	.-8      	; 0xf44 <setPinVAlue+0x1f0>
     f4c:	80 95       	com	r24
     f4e:	84 23       	and	r24, r20
     f50:	8c 93       	st	X, r24
     f52:	05 c0       	rjmp	.+10     	; 0xf5e <setPinVAlue+0x20a>
					break;
				default:
					local_ErrorStatus=1;
     f54:	81 e0       	ldi	r24, 0x01	; 1
     f56:	89 83       	std	Y+1, r24	; 0x01
     f58:	02 c0       	rjmp	.+4      	; 0xf5e <setPinVAlue+0x20a>
			}
		}

		else
		{
			local_ErrorStatus=1;
     f5a:	81 e0       	ldi	r24, 0x01	; 1
     f5c:	89 83       	std	Y+1, r24	; 0x01
		}
	}
	return local_ErrorStatus;
     f5e:	89 81       	ldd	r24, Y+1	; 0x01
}
     f60:	28 96       	adiw	r28, 0x08	; 8
     f62:	0f b6       	in	r0, 0x3f	; 63
     f64:	f8 94       	cli
     f66:	de bf       	out	0x3e, r29	; 62
     f68:	0f be       	out	0x3f, r0	; 63
     f6a:	cd bf       	out	0x3d, r28	; 61
     f6c:	cf 91       	pop	r28
     f6e:	df 91       	pop	r29
     f70:	08 95       	ret

00000f72 <DIO_SetPortDirection>:

uint8 DIO_SetPortDirection (uint8 Copy_Port, uint8 Copy_Direction )
{
     f72:	df 93       	push	r29
     f74:	cf 93       	push	r28
     f76:	00 d0       	rcall	.+0      	; 0xf78 <DIO_SetPortDirection+0x6>
     f78:	00 d0       	rcall	.+0      	; 0xf7a <DIO_SetPortDirection+0x8>
     f7a:	0f 92       	push	r0
     f7c:	cd b7       	in	r28, 0x3d	; 61
     f7e:	de b7       	in	r29, 0x3e	; 62
     f80:	8a 83       	std	Y+2, r24	; 0x02
     f82:	6b 83       	std	Y+3, r22	; 0x03
	uint8 local_ErrorStatus=0;
     f84:	19 82       	std	Y+1, r1	; 0x01
		switch(Copy_Port)
     f86:	8a 81       	ldd	r24, Y+2	; 0x02
     f88:	28 2f       	mov	r18, r24
     f8a:	30 e0       	ldi	r19, 0x00	; 0
     f8c:	3d 83       	std	Y+5, r19	; 0x05
     f8e:	2c 83       	std	Y+4, r18	; 0x04
     f90:	8c 81       	ldd	r24, Y+4	; 0x04
     f92:	9d 81       	ldd	r25, Y+5	; 0x05
     f94:	81 30       	cpi	r24, 0x01	; 1
     f96:	91 05       	cpc	r25, r1
     f98:	d1 f0       	breq	.+52     	; 0xfce <DIO_SetPortDirection+0x5c>
     f9a:	2c 81       	ldd	r18, Y+4	; 0x04
     f9c:	3d 81       	ldd	r19, Y+5	; 0x05
     f9e:	22 30       	cpi	r18, 0x02	; 2
     fa0:	31 05       	cpc	r19, r1
     fa2:	2c f4       	brge	.+10     	; 0xfae <DIO_SetPortDirection+0x3c>
     fa4:	8c 81       	ldd	r24, Y+4	; 0x04
     fa6:	9d 81       	ldd	r25, Y+5	; 0x05
     fa8:	00 97       	sbiw	r24, 0x00	; 0
     faa:	61 f0       	breq	.+24     	; 0xfc4 <DIO_SetPortDirection+0x52>
     fac:	1f c0       	rjmp	.+62     	; 0xfec <DIO_SetPortDirection+0x7a>
     fae:	2c 81       	ldd	r18, Y+4	; 0x04
     fb0:	3d 81       	ldd	r19, Y+5	; 0x05
     fb2:	22 30       	cpi	r18, 0x02	; 2
     fb4:	31 05       	cpc	r19, r1
     fb6:	81 f0       	breq	.+32     	; 0xfd8 <DIO_SetPortDirection+0x66>
     fb8:	8c 81       	ldd	r24, Y+4	; 0x04
     fba:	9d 81       	ldd	r25, Y+5	; 0x05
     fbc:	83 30       	cpi	r24, 0x03	; 3
     fbe:	91 05       	cpc	r25, r1
     fc0:	81 f0       	breq	.+32     	; 0xfe2 <DIO_SetPortDirection+0x70>
     fc2:	14 c0       	rjmp	.+40     	; 0xfec <DIO_SetPortDirection+0x7a>
					{
						case DIO_PORTA:
							DDRA= Copy_Direction;
     fc4:	ea e3       	ldi	r30, 0x3A	; 58
     fc6:	f0 e0       	ldi	r31, 0x00	; 0
     fc8:	8b 81       	ldd	r24, Y+3	; 0x03
     fca:	80 83       	st	Z, r24
     fcc:	11 c0       	rjmp	.+34     	; 0xff0 <DIO_SetPortDirection+0x7e>
							break;
						case DIO_PORTB:
							DDRB=Copy_Direction;
     fce:	e7 e3       	ldi	r30, 0x37	; 55
     fd0:	f0 e0       	ldi	r31, 0x00	; 0
     fd2:	8b 81       	ldd	r24, Y+3	; 0x03
     fd4:	80 83       	st	Z, r24
     fd6:	0c c0       	rjmp	.+24     	; 0xff0 <DIO_SetPortDirection+0x7e>
							break;
						case DIO_PORTC:
							DDRC=Copy_Direction;
     fd8:	e4 e3       	ldi	r30, 0x34	; 52
     fda:	f0 e0       	ldi	r31, 0x00	; 0
     fdc:	8b 81       	ldd	r24, Y+3	; 0x03
     fde:	80 83       	st	Z, r24
     fe0:	07 c0       	rjmp	.+14     	; 0xff0 <DIO_SetPortDirection+0x7e>
								break;
						case DIO_PORTD:
							DDRD=Copy_Direction;
     fe2:	e1 e3       	ldi	r30, 0x31	; 49
     fe4:	f0 e0       	ldi	r31, 0x00	; 0
     fe6:	8b 81       	ldd	r24, Y+3	; 0x03
     fe8:	80 83       	st	Z, r24
     fea:	02 c0       	rjmp	.+4      	; 0xff0 <DIO_SetPortDirection+0x7e>
							break;
						default:
							local_ErrorStatus=1;
     fec:	81 e0       	ldi	r24, 0x01	; 1
     fee:	89 83       	std	Y+1, r24	; 0x01
							break;
					}

		return local_ErrorStatus;
     ff0:	89 81       	ldd	r24, Y+1	; 0x01
}
     ff2:	0f 90       	pop	r0
     ff4:	0f 90       	pop	r0
     ff6:	0f 90       	pop	r0
     ff8:	0f 90       	pop	r0
     ffa:	0f 90       	pop	r0
     ffc:	cf 91       	pop	r28
     ffe:	df 91       	pop	r29
    1000:	08 95       	ret

00001002 <DIO_SetPortValue>:


uint8 DIO_SetPortValue  (uint8 Copy_Port ,   uint8 Copy_Value )

{
    1002:	df 93       	push	r29
    1004:	cf 93       	push	r28
    1006:	00 d0       	rcall	.+0      	; 0x1008 <DIO_SetPortValue+0x6>
    1008:	00 d0       	rcall	.+0      	; 0x100a <DIO_SetPortValue+0x8>
    100a:	0f 92       	push	r0
    100c:	cd b7       	in	r28, 0x3d	; 61
    100e:	de b7       	in	r29, 0x3e	; 62
    1010:	8a 83       	std	Y+2, r24	; 0x02
    1012:	6b 83       	std	Y+3, r22	; 0x03
	uint8 local_ErrorStatus=0;
    1014:	19 82       	std	Y+1, r1	; 0x01
		switch(Copy_Port)
    1016:	8a 81       	ldd	r24, Y+2	; 0x02
    1018:	28 2f       	mov	r18, r24
    101a:	30 e0       	ldi	r19, 0x00	; 0
    101c:	3d 83       	std	Y+5, r19	; 0x05
    101e:	2c 83       	std	Y+4, r18	; 0x04
    1020:	8c 81       	ldd	r24, Y+4	; 0x04
    1022:	9d 81       	ldd	r25, Y+5	; 0x05
    1024:	81 30       	cpi	r24, 0x01	; 1
    1026:	91 05       	cpc	r25, r1
    1028:	d1 f0       	breq	.+52     	; 0x105e <DIO_SetPortValue+0x5c>
    102a:	2c 81       	ldd	r18, Y+4	; 0x04
    102c:	3d 81       	ldd	r19, Y+5	; 0x05
    102e:	22 30       	cpi	r18, 0x02	; 2
    1030:	31 05       	cpc	r19, r1
    1032:	2c f4       	brge	.+10     	; 0x103e <DIO_SetPortValue+0x3c>
    1034:	8c 81       	ldd	r24, Y+4	; 0x04
    1036:	9d 81       	ldd	r25, Y+5	; 0x05
    1038:	00 97       	sbiw	r24, 0x00	; 0
    103a:	61 f0       	breq	.+24     	; 0x1054 <DIO_SetPortValue+0x52>
    103c:	1f c0       	rjmp	.+62     	; 0x107c <DIO_SetPortValue+0x7a>
    103e:	2c 81       	ldd	r18, Y+4	; 0x04
    1040:	3d 81       	ldd	r19, Y+5	; 0x05
    1042:	22 30       	cpi	r18, 0x02	; 2
    1044:	31 05       	cpc	r19, r1
    1046:	81 f0       	breq	.+32     	; 0x1068 <DIO_SetPortValue+0x66>
    1048:	8c 81       	ldd	r24, Y+4	; 0x04
    104a:	9d 81       	ldd	r25, Y+5	; 0x05
    104c:	83 30       	cpi	r24, 0x03	; 3
    104e:	91 05       	cpc	r25, r1
    1050:	81 f0       	breq	.+32     	; 0x1072 <DIO_SetPortValue+0x70>
    1052:	14 c0       	rjmp	.+40     	; 0x107c <DIO_SetPortValue+0x7a>
					{
						case DIO_PORTA:
							PORTA=Copy_Value;
    1054:	eb e3       	ldi	r30, 0x3B	; 59
    1056:	f0 e0       	ldi	r31, 0x00	; 0
    1058:	8b 81       	ldd	r24, Y+3	; 0x03
    105a:	80 83       	st	Z, r24
    105c:	11 c0       	rjmp	.+34     	; 0x1080 <DIO_SetPortValue+0x7e>
							break;
						case DIO_PORTB:
							PORTB=Copy_Value;
    105e:	e8 e3       	ldi	r30, 0x38	; 56
    1060:	f0 e0       	ldi	r31, 0x00	; 0
    1062:	8b 81       	ldd	r24, Y+3	; 0x03
    1064:	80 83       	st	Z, r24
    1066:	0c c0       	rjmp	.+24     	; 0x1080 <DIO_SetPortValue+0x7e>
							break;
						case DIO_PORTC:
							PORTC=Copy_Value;
    1068:	e5 e3       	ldi	r30, 0x35	; 53
    106a:	f0 e0       	ldi	r31, 0x00	; 0
    106c:	8b 81       	ldd	r24, Y+3	; 0x03
    106e:	80 83       	st	Z, r24
    1070:	07 c0       	rjmp	.+14     	; 0x1080 <DIO_SetPortValue+0x7e>
								break;
						case DIO_PORTD:
							PORTD=Copy_Value;
    1072:	e2 e3       	ldi	r30, 0x32	; 50
    1074:	f0 e0       	ldi	r31, 0x00	; 0
    1076:	8b 81       	ldd	r24, Y+3	; 0x03
    1078:	80 83       	st	Z, r24
    107a:	02 c0       	rjmp	.+4      	; 0x1080 <DIO_SetPortValue+0x7e>
							break;
						default:
							local_ErrorStatus=1;
    107c:	81 e0       	ldi	r24, 0x01	; 1
    107e:	89 83       	std	Y+1, r24	; 0x01
							break;
					}


	return local_ErrorStatus;
    1080:	89 81       	ldd	r24, Y+1	; 0x01
}
    1082:	0f 90       	pop	r0
    1084:	0f 90       	pop	r0
    1086:	0f 90       	pop	r0
    1088:	0f 90       	pop	r0
    108a:	0f 90       	pop	r0
    108c:	cf 91       	pop	r28
    108e:	df 91       	pop	r29
    1090:	08 95       	ret

00001092 <DIO_GetPinValue>:

uint8 DIO_GetPinValue (uint8 Copy_uint8_Port , uint8 Copy_uint8_Pin , uint8* Copy_uint8_Value)
{
    1092:	df 93       	push	r29
    1094:	cf 93       	push	r28
    1096:	cd b7       	in	r28, 0x3d	; 61
    1098:	de b7       	in	r29, 0x3e	; 62
    109a:	27 97       	sbiw	r28, 0x07	; 7
    109c:	0f b6       	in	r0, 0x3f	; 63
    109e:	f8 94       	cli
    10a0:	de bf       	out	0x3e, r29	; 62
    10a2:	0f be       	out	0x3f, r0	; 63
    10a4:	cd bf       	out	0x3d, r28	; 61
    10a6:	8a 83       	std	Y+2, r24	; 0x02
    10a8:	6b 83       	std	Y+3, r22	; 0x03
    10aa:	5d 83       	std	Y+5, r21	; 0x05
    10ac:	4c 83       	std	Y+4, r20	; 0x04
	uint8 local_ErrorStatus=0;
    10ae:	19 82       	std	Y+1, r1	; 0x01
	if(Copy_uint8_Value!=NULL &&Copy_uint8_Pin <=7 )
    10b0:	8c 81       	ldd	r24, Y+4	; 0x04
    10b2:	9d 81       	ldd	r25, Y+5	; 0x05
    10b4:	00 97       	sbiw	r24, 0x00	; 0
    10b6:	09 f4       	brne	.+2      	; 0x10ba <DIO_GetPinValue+0x28>
    10b8:	78 c0       	rjmp	.+240    	; 0x11aa <DIO_GetPinValue+0x118>
    10ba:	8b 81       	ldd	r24, Y+3	; 0x03
    10bc:	88 30       	cpi	r24, 0x08	; 8
    10be:	08 f0       	brcs	.+2      	; 0x10c2 <DIO_GetPinValue+0x30>
    10c0:	74 c0       	rjmp	.+232    	; 0x11aa <DIO_GetPinValue+0x118>
	{

		switch(Copy_uint8_Port)
    10c2:	8a 81       	ldd	r24, Y+2	; 0x02
    10c4:	28 2f       	mov	r18, r24
    10c6:	30 e0       	ldi	r19, 0x00	; 0
    10c8:	3f 83       	std	Y+7, r19	; 0x07
    10ca:	2e 83       	std	Y+6, r18	; 0x06
    10cc:	4e 81       	ldd	r20, Y+6	; 0x06
    10ce:	5f 81       	ldd	r21, Y+7	; 0x07
    10d0:	41 30       	cpi	r20, 0x01	; 1
    10d2:	51 05       	cpc	r21, r1
    10d4:	59 f1       	breq	.+86     	; 0x112c <DIO_GetPinValue+0x9a>
    10d6:	8e 81       	ldd	r24, Y+6	; 0x06
    10d8:	9f 81       	ldd	r25, Y+7	; 0x07
    10da:	82 30       	cpi	r24, 0x02	; 2
    10dc:	91 05       	cpc	r25, r1
    10de:	34 f4       	brge	.+12     	; 0x10ec <DIO_GetPinValue+0x5a>
    10e0:	2e 81       	ldd	r18, Y+6	; 0x06
    10e2:	3f 81       	ldd	r19, Y+7	; 0x07
    10e4:	21 15       	cp	r18, r1
    10e6:	31 05       	cpc	r19, r1
    10e8:	69 f0       	breq	.+26     	; 0x1104 <DIO_GetPinValue+0x72>
    10ea:	5c c0       	rjmp	.+184    	; 0x11a4 <DIO_GetPinValue+0x112>
    10ec:	4e 81       	ldd	r20, Y+6	; 0x06
    10ee:	5f 81       	ldd	r21, Y+7	; 0x07
    10f0:	42 30       	cpi	r20, 0x02	; 2
    10f2:	51 05       	cpc	r21, r1
    10f4:	79 f1       	breq	.+94     	; 0x1154 <DIO_GetPinValue+0xc2>
    10f6:	8e 81       	ldd	r24, Y+6	; 0x06
    10f8:	9f 81       	ldd	r25, Y+7	; 0x07
    10fa:	83 30       	cpi	r24, 0x03	; 3
    10fc:	91 05       	cpc	r25, r1
    10fe:	09 f4       	brne	.+2      	; 0x1102 <DIO_GetPinValue+0x70>
    1100:	3d c0       	rjmp	.+122    	; 0x117c <DIO_GetPinValue+0xea>
    1102:	50 c0       	rjmp	.+160    	; 0x11a4 <DIO_GetPinValue+0x112>
		{
			case DIO_PORTA:
				*Copy_uint8_Value = GETBIT(PINA , Copy_uint8_Pin);
    1104:	e9 e3       	ldi	r30, 0x39	; 57
    1106:	f0 e0       	ldi	r31, 0x00	; 0
    1108:	80 81       	ld	r24, Z
    110a:	28 2f       	mov	r18, r24
    110c:	30 e0       	ldi	r19, 0x00	; 0
    110e:	8b 81       	ldd	r24, Y+3	; 0x03
    1110:	88 2f       	mov	r24, r24
    1112:	90 e0       	ldi	r25, 0x00	; 0
    1114:	a9 01       	movw	r20, r18
    1116:	02 c0       	rjmp	.+4      	; 0x111c <DIO_GetPinValue+0x8a>
    1118:	55 95       	asr	r21
    111a:	47 95       	ror	r20
    111c:	8a 95       	dec	r24
    111e:	e2 f7       	brpl	.-8      	; 0x1118 <DIO_GetPinValue+0x86>
    1120:	ca 01       	movw	r24, r20
    1122:	81 70       	andi	r24, 0x01	; 1
    1124:	ec 81       	ldd	r30, Y+4	; 0x04
    1126:	fd 81       	ldd	r31, Y+5	; 0x05
    1128:	80 83       	st	Z, r24
    112a:	41 c0       	rjmp	.+130    	; 0x11ae <DIO_GetPinValue+0x11c>
				break;
			case DIO_PORTB:
				*Copy_uint8_Value = GETBIT(PINB , Copy_uint8_Pin);
    112c:	e6 e3       	ldi	r30, 0x36	; 54
    112e:	f0 e0       	ldi	r31, 0x00	; 0
    1130:	80 81       	ld	r24, Z
    1132:	28 2f       	mov	r18, r24
    1134:	30 e0       	ldi	r19, 0x00	; 0
    1136:	8b 81       	ldd	r24, Y+3	; 0x03
    1138:	88 2f       	mov	r24, r24
    113a:	90 e0       	ldi	r25, 0x00	; 0
    113c:	a9 01       	movw	r20, r18
    113e:	02 c0       	rjmp	.+4      	; 0x1144 <DIO_GetPinValue+0xb2>
    1140:	55 95       	asr	r21
    1142:	47 95       	ror	r20
    1144:	8a 95       	dec	r24
    1146:	e2 f7       	brpl	.-8      	; 0x1140 <DIO_GetPinValue+0xae>
    1148:	ca 01       	movw	r24, r20
    114a:	81 70       	andi	r24, 0x01	; 1
    114c:	ec 81       	ldd	r30, Y+4	; 0x04
    114e:	fd 81       	ldd	r31, Y+5	; 0x05
    1150:	80 83       	st	Z, r24
    1152:	2d c0       	rjmp	.+90     	; 0x11ae <DIO_GetPinValue+0x11c>
				break;
			case DIO_PORTC:
				*Copy_uint8_Value = GETBIT(PINC , Copy_uint8_Pin);
    1154:	e3 e3       	ldi	r30, 0x33	; 51
    1156:	f0 e0       	ldi	r31, 0x00	; 0
    1158:	80 81       	ld	r24, Z
    115a:	28 2f       	mov	r18, r24
    115c:	30 e0       	ldi	r19, 0x00	; 0
    115e:	8b 81       	ldd	r24, Y+3	; 0x03
    1160:	88 2f       	mov	r24, r24
    1162:	90 e0       	ldi	r25, 0x00	; 0
    1164:	a9 01       	movw	r20, r18
    1166:	02 c0       	rjmp	.+4      	; 0x116c <DIO_GetPinValue+0xda>
    1168:	55 95       	asr	r21
    116a:	47 95       	ror	r20
    116c:	8a 95       	dec	r24
    116e:	e2 f7       	brpl	.-8      	; 0x1168 <DIO_GetPinValue+0xd6>
    1170:	ca 01       	movw	r24, r20
    1172:	81 70       	andi	r24, 0x01	; 1
    1174:	ec 81       	ldd	r30, Y+4	; 0x04
    1176:	fd 81       	ldd	r31, Y+5	; 0x05
    1178:	80 83       	st	Z, r24
    117a:	19 c0       	rjmp	.+50     	; 0x11ae <DIO_GetPinValue+0x11c>
				break;
			case DIO_PORTD:
				*Copy_uint8_Value = GETBIT(PIND , Copy_uint8_Pin);
    117c:	e0 e3       	ldi	r30, 0x30	; 48
    117e:	f0 e0       	ldi	r31, 0x00	; 0
    1180:	80 81       	ld	r24, Z
    1182:	28 2f       	mov	r18, r24
    1184:	30 e0       	ldi	r19, 0x00	; 0
    1186:	8b 81       	ldd	r24, Y+3	; 0x03
    1188:	88 2f       	mov	r24, r24
    118a:	90 e0       	ldi	r25, 0x00	; 0
    118c:	a9 01       	movw	r20, r18
    118e:	02 c0       	rjmp	.+4      	; 0x1194 <DIO_GetPinValue+0x102>
    1190:	55 95       	asr	r21
    1192:	47 95       	ror	r20
    1194:	8a 95       	dec	r24
    1196:	e2 f7       	brpl	.-8      	; 0x1190 <DIO_GetPinValue+0xfe>
    1198:	ca 01       	movw	r24, r20
    119a:	81 70       	andi	r24, 0x01	; 1
    119c:	ec 81       	ldd	r30, Y+4	; 0x04
    119e:	fd 81       	ldd	r31, Y+5	; 0x05
    11a0:	80 83       	st	Z, r24
    11a2:	05 c0       	rjmp	.+10     	; 0x11ae <DIO_GetPinValue+0x11c>
				break;
			default:
				local_ErrorStatus=1;
    11a4:	81 e0       	ldi	r24, 0x01	; 1
    11a6:	89 83       	std	Y+1, r24	; 0x01
    11a8:	02 c0       	rjmp	.+4      	; 0x11ae <DIO_GetPinValue+0x11c>
				break;
		}
	}
	else
	{
		local_ErrorStatus=1;
    11aa:	81 e0       	ldi	r24, 0x01	; 1
    11ac:	89 83       	std	Y+1, r24	; 0x01
	}
	return local_ErrorStatus;
    11ae:	89 81       	ldd	r24, Y+1	; 0x01
}
    11b0:	27 96       	adiw	r28, 0x07	; 7
    11b2:	0f b6       	in	r0, 0x3f	; 63
    11b4:	f8 94       	cli
    11b6:	de bf       	out	0x3e, r29	; 62
    11b8:	0f be       	out	0x3f, r0	; 63
    11ba:	cd bf       	out	0x3d, r28	; 61
    11bc:	cf 91       	pop	r28
    11be:	df 91       	pop	r29
    11c0:	08 95       	ret

000011c2 <DIO_setInternalPullUp>:

uint8 DIO_setInternalPullUp(uint8  Copy_Port ,  uint8 Copy_Pin)
{
    11c2:	df 93       	push	r29
    11c4:	cf 93       	push	r28
    11c6:	00 d0       	rcall	.+0      	; 0x11c8 <DIO_setInternalPullUp+0x6>
    11c8:	00 d0       	rcall	.+0      	; 0x11ca <DIO_setInternalPullUp+0x8>
    11ca:	0f 92       	push	r0
    11cc:	cd b7       	in	r28, 0x3d	; 61
    11ce:	de b7       	in	r29, 0x3e	; 62
    11d0:	8a 83       	std	Y+2, r24	; 0x02
    11d2:	6b 83       	std	Y+3, r22	; 0x03
	uint8 local_ErrorStatus=0;
    11d4:	19 82       	std	Y+1, r1	; 0x01
	if (Copy_Pin <= 7)
    11d6:	8b 81       	ldd	r24, Y+3	; 0x03
    11d8:	88 30       	cpi	r24, 0x08	; 8
    11da:	08 f0       	brcs	.+2      	; 0x11de <DIO_setInternalPullUp+0x1c>
    11dc:	c0 c0       	rjmp	.+384    	; 0x135e <DIO_setInternalPullUp+0x19c>
	{
			switch(Copy_Port)
    11de:	8a 81       	ldd	r24, Y+2	; 0x02
    11e0:	28 2f       	mov	r18, r24
    11e2:	30 e0       	ldi	r19, 0x00	; 0
    11e4:	3d 83       	std	Y+5, r19	; 0x05
    11e6:	2c 83       	std	Y+4, r18	; 0x04
    11e8:	8c 81       	ldd	r24, Y+4	; 0x04
    11ea:	9d 81       	ldd	r25, Y+5	; 0x05
    11ec:	81 30       	cpi	r24, 0x01	; 1
    11ee:	91 05       	cpc	r25, r1
    11f0:	09 f4       	brne	.+2      	; 0x11f4 <DIO_setInternalPullUp+0x32>
    11f2:	3e c0       	rjmp	.+124    	; 0x1270 <DIO_setInternalPullUp+0xae>
    11f4:	2c 81       	ldd	r18, Y+4	; 0x04
    11f6:	3d 81       	ldd	r19, Y+5	; 0x05
    11f8:	22 30       	cpi	r18, 0x02	; 2
    11fa:	31 05       	cpc	r19, r1
    11fc:	2c f4       	brge	.+10     	; 0x1208 <DIO_setInternalPullUp+0x46>
    11fe:	8c 81       	ldd	r24, Y+4	; 0x04
    1200:	9d 81       	ldd	r25, Y+5	; 0x05
    1202:	00 97       	sbiw	r24, 0x00	; 0
    1204:	71 f0       	breq	.+28     	; 0x1222 <DIO_setInternalPullUp+0x60>
    1206:	a9 c0       	rjmp	.+338    	; 0x135a <DIO_setInternalPullUp+0x198>
    1208:	2c 81       	ldd	r18, Y+4	; 0x04
    120a:	3d 81       	ldd	r19, Y+5	; 0x05
    120c:	22 30       	cpi	r18, 0x02	; 2
    120e:	31 05       	cpc	r19, r1
    1210:	09 f4       	brne	.+2      	; 0x1214 <DIO_setInternalPullUp+0x52>
    1212:	55 c0       	rjmp	.+170    	; 0x12be <DIO_setInternalPullUp+0xfc>
    1214:	8c 81       	ldd	r24, Y+4	; 0x04
    1216:	9d 81       	ldd	r25, Y+5	; 0x05
    1218:	83 30       	cpi	r24, 0x03	; 3
    121a:	91 05       	cpc	r25, r1
    121c:	09 f4       	brne	.+2      	; 0x1220 <DIO_setInternalPullUp+0x5e>
    121e:	76 c0       	rjmp	.+236    	; 0x130c <DIO_setInternalPullUp+0x14a>
    1220:	9c c0       	rjmp	.+312    	; 0x135a <DIO_setInternalPullUp+0x198>
			{
				case DIO_PORTA:
					CLEARBIT(DDRA, Copy_Pin);
    1222:	aa e3       	ldi	r26, 0x3A	; 58
    1224:	b0 e0       	ldi	r27, 0x00	; 0
    1226:	ea e3       	ldi	r30, 0x3A	; 58
    1228:	f0 e0       	ldi	r31, 0x00	; 0
    122a:	80 81       	ld	r24, Z
    122c:	48 2f       	mov	r20, r24
    122e:	8b 81       	ldd	r24, Y+3	; 0x03
    1230:	28 2f       	mov	r18, r24
    1232:	30 e0       	ldi	r19, 0x00	; 0
    1234:	81 e0       	ldi	r24, 0x01	; 1
    1236:	90 e0       	ldi	r25, 0x00	; 0
    1238:	02 c0       	rjmp	.+4      	; 0x123e <DIO_setInternalPullUp+0x7c>
    123a:	88 0f       	add	r24, r24
    123c:	99 1f       	adc	r25, r25
    123e:	2a 95       	dec	r18
    1240:	e2 f7       	brpl	.-8      	; 0x123a <DIO_setInternalPullUp+0x78>
    1242:	80 95       	com	r24
    1244:	84 23       	and	r24, r20
    1246:	8c 93       	st	X, r24
					SETBIT(PORTA, Copy_Pin);
    1248:	ab e3       	ldi	r26, 0x3B	; 59
    124a:	b0 e0       	ldi	r27, 0x00	; 0
    124c:	eb e3       	ldi	r30, 0x3B	; 59
    124e:	f0 e0       	ldi	r31, 0x00	; 0
    1250:	80 81       	ld	r24, Z
    1252:	48 2f       	mov	r20, r24
    1254:	8b 81       	ldd	r24, Y+3	; 0x03
    1256:	28 2f       	mov	r18, r24
    1258:	30 e0       	ldi	r19, 0x00	; 0
    125a:	81 e0       	ldi	r24, 0x01	; 1
    125c:	90 e0       	ldi	r25, 0x00	; 0
    125e:	02 2e       	mov	r0, r18
    1260:	02 c0       	rjmp	.+4      	; 0x1266 <DIO_setInternalPullUp+0xa4>
    1262:	88 0f       	add	r24, r24
    1264:	99 1f       	adc	r25, r25
    1266:	0a 94       	dec	r0
    1268:	e2 f7       	brpl	.-8      	; 0x1262 <DIO_setInternalPullUp+0xa0>
    126a:	84 2b       	or	r24, r20
    126c:	8c 93       	st	X, r24
    126e:	77 c0       	rjmp	.+238    	; 0x135e <DIO_setInternalPullUp+0x19c>
					break;
				case DIO_PORTB:
					CLEARBIT(DDRB,Copy_Pin);
    1270:	a7 e3       	ldi	r26, 0x37	; 55
    1272:	b0 e0       	ldi	r27, 0x00	; 0
    1274:	e7 e3       	ldi	r30, 0x37	; 55
    1276:	f0 e0       	ldi	r31, 0x00	; 0
    1278:	80 81       	ld	r24, Z
    127a:	48 2f       	mov	r20, r24
    127c:	8b 81       	ldd	r24, Y+3	; 0x03
    127e:	28 2f       	mov	r18, r24
    1280:	30 e0       	ldi	r19, 0x00	; 0
    1282:	81 e0       	ldi	r24, 0x01	; 1
    1284:	90 e0       	ldi	r25, 0x00	; 0
    1286:	02 c0       	rjmp	.+4      	; 0x128c <DIO_setInternalPullUp+0xca>
    1288:	88 0f       	add	r24, r24
    128a:	99 1f       	adc	r25, r25
    128c:	2a 95       	dec	r18
    128e:	e2 f7       	brpl	.-8      	; 0x1288 <DIO_setInternalPullUp+0xc6>
    1290:	80 95       	com	r24
    1292:	84 23       	and	r24, r20
    1294:	8c 93       	st	X, r24
					SETBIT(PORTB, Copy_Pin);
    1296:	a8 e3       	ldi	r26, 0x38	; 56
    1298:	b0 e0       	ldi	r27, 0x00	; 0
    129a:	e8 e3       	ldi	r30, 0x38	; 56
    129c:	f0 e0       	ldi	r31, 0x00	; 0
    129e:	80 81       	ld	r24, Z
    12a0:	48 2f       	mov	r20, r24
    12a2:	8b 81       	ldd	r24, Y+3	; 0x03
    12a4:	28 2f       	mov	r18, r24
    12a6:	30 e0       	ldi	r19, 0x00	; 0
    12a8:	81 e0       	ldi	r24, 0x01	; 1
    12aa:	90 e0       	ldi	r25, 0x00	; 0
    12ac:	02 2e       	mov	r0, r18
    12ae:	02 c0       	rjmp	.+4      	; 0x12b4 <DIO_setInternalPullUp+0xf2>
    12b0:	88 0f       	add	r24, r24
    12b2:	99 1f       	adc	r25, r25
    12b4:	0a 94       	dec	r0
    12b6:	e2 f7       	brpl	.-8      	; 0x12b0 <DIO_setInternalPullUp+0xee>
    12b8:	84 2b       	or	r24, r20
    12ba:	8c 93       	st	X, r24
    12bc:	50 c0       	rjmp	.+160    	; 0x135e <DIO_setInternalPullUp+0x19c>
					break;
				case DIO_PORTC:
					CLEARBIT(DDRC,Copy_Pin);
    12be:	a4 e3       	ldi	r26, 0x34	; 52
    12c0:	b0 e0       	ldi	r27, 0x00	; 0
    12c2:	e4 e3       	ldi	r30, 0x34	; 52
    12c4:	f0 e0       	ldi	r31, 0x00	; 0
    12c6:	80 81       	ld	r24, Z
    12c8:	48 2f       	mov	r20, r24
    12ca:	8b 81       	ldd	r24, Y+3	; 0x03
    12cc:	28 2f       	mov	r18, r24
    12ce:	30 e0       	ldi	r19, 0x00	; 0
    12d0:	81 e0       	ldi	r24, 0x01	; 1
    12d2:	90 e0       	ldi	r25, 0x00	; 0
    12d4:	02 c0       	rjmp	.+4      	; 0x12da <DIO_setInternalPullUp+0x118>
    12d6:	88 0f       	add	r24, r24
    12d8:	99 1f       	adc	r25, r25
    12da:	2a 95       	dec	r18
    12dc:	e2 f7       	brpl	.-8      	; 0x12d6 <DIO_setInternalPullUp+0x114>
    12de:	80 95       	com	r24
    12e0:	84 23       	and	r24, r20
    12e2:	8c 93       	st	X, r24
					SETBIT(PORTC, Copy_Pin);
    12e4:	a5 e3       	ldi	r26, 0x35	; 53
    12e6:	b0 e0       	ldi	r27, 0x00	; 0
    12e8:	e5 e3       	ldi	r30, 0x35	; 53
    12ea:	f0 e0       	ldi	r31, 0x00	; 0
    12ec:	80 81       	ld	r24, Z
    12ee:	48 2f       	mov	r20, r24
    12f0:	8b 81       	ldd	r24, Y+3	; 0x03
    12f2:	28 2f       	mov	r18, r24
    12f4:	30 e0       	ldi	r19, 0x00	; 0
    12f6:	81 e0       	ldi	r24, 0x01	; 1
    12f8:	90 e0       	ldi	r25, 0x00	; 0
    12fa:	02 2e       	mov	r0, r18
    12fc:	02 c0       	rjmp	.+4      	; 0x1302 <DIO_setInternalPullUp+0x140>
    12fe:	88 0f       	add	r24, r24
    1300:	99 1f       	adc	r25, r25
    1302:	0a 94       	dec	r0
    1304:	e2 f7       	brpl	.-8      	; 0x12fe <DIO_setInternalPullUp+0x13c>
    1306:	84 2b       	or	r24, r20
    1308:	8c 93       	st	X, r24
    130a:	29 c0       	rjmp	.+82     	; 0x135e <DIO_setInternalPullUp+0x19c>
						break;
				case DIO_PORTD:
					CLEARBIT(DDRD,Copy_Pin);
    130c:	a1 e3       	ldi	r26, 0x31	; 49
    130e:	b0 e0       	ldi	r27, 0x00	; 0
    1310:	e1 e3       	ldi	r30, 0x31	; 49
    1312:	f0 e0       	ldi	r31, 0x00	; 0
    1314:	80 81       	ld	r24, Z
    1316:	48 2f       	mov	r20, r24
    1318:	8b 81       	ldd	r24, Y+3	; 0x03
    131a:	28 2f       	mov	r18, r24
    131c:	30 e0       	ldi	r19, 0x00	; 0
    131e:	81 e0       	ldi	r24, 0x01	; 1
    1320:	90 e0       	ldi	r25, 0x00	; 0
    1322:	02 c0       	rjmp	.+4      	; 0x1328 <DIO_setInternalPullUp+0x166>
    1324:	88 0f       	add	r24, r24
    1326:	99 1f       	adc	r25, r25
    1328:	2a 95       	dec	r18
    132a:	e2 f7       	brpl	.-8      	; 0x1324 <DIO_setInternalPullUp+0x162>
    132c:	80 95       	com	r24
    132e:	84 23       	and	r24, r20
    1330:	8c 93       	st	X, r24
					SETBIT(PORTD, Copy_Pin);
    1332:	a2 e3       	ldi	r26, 0x32	; 50
    1334:	b0 e0       	ldi	r27, 0x00	; 0
    1336:	e2 e3       	ldi	r30, 0x32	; 50
    1338:	f0 e0       	ldi	r31, 0x00	; 0
    133a:	80 81       	ld	r24, Z
    133c:	48 2f       	mov	r20, r24
    133e:	8b 81       	ldd	r24, Y+3	; 0x03
    1340:	28 2f       	mov	r18, r24
    1342:	30 e0       	ldi	r19, 0x00	; 0
    1344:	81 e0       	ldi	r24, 0x01	; 1
    1346:	90 e0       	ldi	r25, 0x00	; 0
    1348:	02 2e       	mov	r0, r18
    134a:	02 c0       	rjmp	.+4      	; 0x1350 <DIO_setInternalPullUp+0x18e>
    134c:	88 0f       	add	r24, r24
    134e:	99 1f       	adc	r25, r25
    1350:	0a 94       	dec	r0
    1352:	e2 f7       	brpl	.-8      	; 0x134c <DIO_setInternalPullUp+0x18a>
    1354:	84 2b       	or	r24, r20
    1356:	8c 93       	st	X, r24
    1358:	02 c0       	rjmp	.+4      	; 0x135e <DIO_setInternalPullUp+0x19c>
					break;
				default:
					local_ErrorStatus=1;
    135a:	81 e0       	ldi	r24, 0x01	; 1
    135c:	89 83       	std	Y+1, r24	; 0x01
					break;
			}
	}

	return local_ErrorStatus;
    135e:	89 81       	ldd	r24, Y+1	; 0x01
}
    1360:	0f 90       	pop	r0
    1362:	0f 90       	pop	r0
    1364:	0f 90       	pop	r0
    1366:	0f 90       	pop	r0
    1368:	0f 90       	pop	r0
    136a:	cf 91       	pop	r28
    136c:	df 91       	pop	r29
    136e:	08 95       	ret

00001370 <DIO_Toggle_PIN>:
uint8 DIO_Toggle_PIN (uint8 Copy_Port , uint8 Copy_Pin)
{
    1370:	df 93       	push	r29
    1372:	cf 93       	push	r28
    1374:	00 d0       	rcall	.+0      	; 0x1376 <DIO_Toggle_PIN+0x6>
    1376:	00 d0       	rcall	.+0      	; 0x1378 <DIO_Toggle_PIN+0x8>
    1378:	0f 92       	push	r0
    137a:	cd b7       	in	r28, 0x3d	; 61
    137c:	de b7       	in	r29, 0x3e	; 62
    137e:	8a 83       	std	Y+2, r24	; 0x02
    1380:	6b 83       	std	Y+3, r22	; 0x03
	uint8 local_ErrorStatus=0;
    1382:	19 82       	std	Y+1, r1	; 0x01
	if (Copy_Pin <= 7)
    1384:	8b 81       	ldd	r24, Y+3	; 0x03
    1386:	88 30       	cpi	r24, 0x08	; 8
    1388:	08 f0       	brcs	.+2      	; 0x138c <DIO_Toggle_PIN+0x1c>
    138a:	72 c0       	rjmp	.+228    	; 0x1470 <DIO_Toggle_PIN+0x100>
	{
		switch(Copy_Port)
    138c:	8a 81       	ldd	r24, Y+2	; 0x02
    138e:	28 2f       	mov	r18, r24
    1390:	30 e0       	ldi	r19, 0x00	; 0
    1392:	3d 83       	std	Y+5, r19	; 0x05
    1394:	2c 83       	std	Y+4, r18	; 0x04
    1396:	8c 81       	ldd	r24, Y+4	; 0x04
    1398:	9d 81       	ldd	r25, Y+5	; 0x05
    139a:	81 30       	cpi	r24, 0x01	; 1
    139c:	91 05       	cpc	r25, r1
    139e:	49 f1       	breq	.+82     	; 0x13f2 <DIO_Toggle_PIN+0x82>
    13a0:	2c 81       	ldd	r18, Y+4	; 0x04
    13a2:	3d 81       	ldd	r19, Y+5	; 0x05
    13a4:	22 30       	cpi	r18, 0x02	; 2
    13a6:	31 05       	cpc	r19, r1
    13a8:	2c f4       	brge	.+10     	; 0x13b4 <DIO_Toggle_PIN+0x44>
    13aa:	8c 81       	ldd	r24, Y+4	; 0x04
    13ac:	9d 81       	ldd	r25, Y+5	; 0x05
    13ae:	00 97       	sbiw	r24, 0x00	; 0
    13b0:	61 f0       	breq	.+24     	; 0x13ca <DIO_Toggle_PIN+0x5a>
    13b2:	5b c0       	rjmp	.+182    	; 0x146a <DIO_Toggle_PIN+0xfa>
    13b4:	2c 81       	ldd	r18, Y+4	; 0x04
    13b6:	3d 81       	ldd	r19, Y+5	; 0x05
    13b8:	22 30       	cpi	r18, 0x02	; 2
    13ba:	31 05       	cpc	r19, r1
    13bc:	71 f1       	breq	.+92     	; 0x141a <DIO_Toggle_PIN+0xaa>
    13be:	8c 81       	ldd	r24, Y+4	; 0x04
    13c0:	9d 81       	ldd	r25, Y+5	; 0x05
    13c2:	83 30       	cpi	r24, 0x03	; 3
    13c4:	91 05       	cpc	r25, r1
    13c6:	e9 f1       	breq	.+122    	; 0x1442 <DIO_Toggle_PIN+0xd2>
    13c8:	50 c0       	rjmp	.+160    	; 0x146a <DIO_Toggle_PIN+0xfa>
		{
			case DIO_PORTA:
				TOGGLEBIT(PORTA,Copy_Pin);
    13ca:	ab e3       	ldi	r26, 0x3B	; 59
    13cc:	b0 e0       	ldi	r27, 0x00	; 0
    13ce:	eb e3       	ldi	r30, 0x3B	; 59
    13d0:	f0 e0       	ldi	r31, 0x00	; 0
    13d2:	80 81       	ld	r24, Z
    13d4:	48 2f       	mov	r20, r24
    13d6:	8b 81       	ldd	r24, Y+3	; 0x03
    13d8:	28 2f       	mov	r18, r24
    13da:	30 e0       	ldi	r19, 0x00	; 0
    13dc:	81 e0       	ldi	r24, 0x01	; 1
    13de:	90 e0       	ldi	r25, 0x00	; 0
    13e0:	02 2e       	mov	r0, r18
    13e2:	02 c0       	rjmp	.+4      	; 0x13e8 <DIO_Toggle_PIN+0x78>
    13e4:	88 0f       	add	r24, r24
    13e6:	99 1f       	adc	r25, r25
    13e8:	0a 94       	dec	r0
    13ea:	e2 f7       	brpl	.-8      	; 0x13e4 <DIO_Toggle_PIN+0x74>
    13ec:	84 27       	eor	r24, r20
    13ee:	8c 93       	st	X, r24
    13f0:	41 c0       	rjmp	.+130    	; 0x1474 <DIO_Toggle_PIN+0x104>
				break;
			case DIO_PORTB:
				TOGGLEBIT(PORTB,Copy_Pin);
    13f2:	a8 e3       	ldi	r26, 0x38	; 56
    13f4:	b0 e0       	ldi	r27, 0x00	; 0
    13f6:	e8 e3       	ldi	r30, 0x38	; 56
    13f8:	f0 e0       	ldi	r31, 0x00	; 0
    13fa:	80 81       	ld	r24, Z
    13fc:	48 2f       	mov	r20, r24
    13fe:	8b 81       	ldd	r24, Y+3	; 0x03
    1400:	28 2f       	mov	r18, r24
    1402:	30 e0       	ldi	r19, 0x00	; 0
    1404:	81 e0       	ldi	r24, 0x01	; 1
    1406:	90 e0       	ldi	r25, 0x00	; 0
    1408:	02 2e       	mov	r0, r18
    140a:	02 c0       	rjmp	.+4      	; 0x1410 <DIO_Toggle_PIN+0xa0>
    140c:	88 0f       	add	r24, r24
    140e:	99 1f       	adc	r25, r25
    1410:	0a 94       	dec	r0
    1412:	e2 f7       	brpl	.-8      	; 0x140c <DIO_Toggle_PIN+0x9c>
    1414:	84 27       	eor	r24, r20
    1416:	8c 93       	st	X, r24
    1418:	2d c0       	rjmp	.+90     	; 0x1474 <DIO_Toggle_PIN+0x104>
				break;
			case DIO_PORTC:
				TOGGLEBIT(PORTC,Copy_Pin);
    141a:	a5 e3       	ldi	r26, 0x35	; 53
    141c:	b0 e0       	ldi	r27, 0x00	; 0
    141e:	e5 e3       	ldi	r30, 0x35	; 53
    1420:	f0 e0       	ldi	r31, 0x00	; 0
    1422:	80 81       	ld	r24, Z
    1424:	48 2f       	mov	r20, r24
    1426:	8b 81       	ldd	r24, Y+3	; 0x03
    1428:	28 2f       	mov	r18, r24
    142a:	30 e0       	ldi	r19, 0x00	; 0
    142c:	81 e0       	ldi	r24, 0x01	; 1
    142e:	90 e0       	ldi	r25, 0x00	; 0
    1430:	02 2e       	mov	r0, r18
    1432:	02 c0       	rjmp	.+4      	; 0x1438 <DIO_Toggle_PIN+0xc8>
    1434:	88 0f       	add	r24, r24
    1436:	99 1f       	adc	r25, r25
    1438:	0a 94       	dec	r0
    143a:	e2 f7       	brpl	.-8      	; 0x1434 <DIO_Toggle_PIN+0xc4>
    143c:	84 27       	eor	r24, r20
    143e:	8c 93       	st	X, r24
    1440:	19 c0       	rjmp	.+50     	; 0x1474 <DIO_Toggle_PIN+0x104>
					break;
			case DIO_PORTD:
				TOGGLEBIT(PORTD,Copy_Pin);
    1442:	a2 e3       	ldi	r26, 0x32	; 50
    1444:	b0 e0       	ldi	r27, 0x00	; 0
    1446:	e2 e3       	ldi	r30, 0x32	; 50
    1448:	f0 e0       	ldi	r31, 0x00	; 0
    144a:	80 81       	ld	r24, Z
    144c:	48 2f       	mov	r20, r24
    144e:	8b 81       	ldd	r24, Y+3	; 0x03
    1450:	28 2f       	mov	r18, r24
    1452:	30 e0       	ldi	r19, 0x00	; 0
    1454:	81 e0       	ldi	r24, 0x01	; 1
    1456:	90 e0       	ldi	r25, 0x00	; 0
    1458:	02 2e       	mov	r0, r18
    145a:	02 c0       	rjmp	.+4      	; 0x1460 <DIO_Toggle_PIN+0xf0>
    145c:	88 0f       	add	r24, r24
    145e:	99 1f       	adc	r25, r25
    1460:	0a 94       	dec	r0
    1462:	e2 f7       	brpl	.-8      	; 0x145c <DIO_Toggle_PIN+0xec>
    1464:	84 27       	eor	r24, r20
    1466:	8c 93       	st	X, r24
    1468:	05 c0       	rjmp	.+10     	; 0x1474 <DIO_Toggle_PIN+0x104>
				break;
			default:
				local_ErrorStatus=1;
    146a:	81 e0       	ldi	r24, 0x01	; 1
    146c:	89 83       	std	Y+1, r24	; 0x01
    146e:	02 c0       	rjmp	.+4      	; 0x1474 <DIO_Toggle_PIN+0x104>
				break;
		}
		}
	else
	{
		local_ErrorStatus=1;
    1470:	81 e0       	ldi	r24, 0x01	; 1
    1472:	89 83       	std	Y+1, r24	; 0x01
	}
		return local_ErrorStatus;
    1474:	89 81       	ldd	r24, Y+1	; 0x01
}
    1476:	0f 90       	pop	r0
    1478:	0f 90       	pop	r0
    147a:	0f 90       	pop	r0
    147c:	0f 90       	pop	r0
    147e:	0f 90       	pop	r0
    1480:	cf 91       	pop	r28
    1482:	df 91       	pop	r29
    1484:	08 95       	ret

00001486 <main>:
#include "DIO_Interface.h"
#include "DIO_Private.h"
#include "DIO_Register.h"

int main(void)
{
    1486:	0f 93       	push	r16
    1488:	1f 93       	push	r17
    148a:	df 93       	push	r29
    148c:	cf 93       	push	r28
    148e:	cd b7       	in	r28, 0x3d	; 61
    1490:	de b7       	in	r29, 0x3e	; 62
    1492:	c6 5d       	subi	r28, 0xD6	; 214
    1494:	d0 40       	sbci	r29, 0x00	; 0
    1496:	0f b6       	in	r0, 0x3f	; 63
    1498:	f8 94       	cli
    149a:	de bf       	out	0x3e, r29	; 62
    149c:	0f be       	out	0x3f, r0	; 63
    149e:	cd bf       	out	0x3d, r28	; 61

	 }

*/

	setPinDirection(DIO_PORTB, PIN0, INPUT); // button 0
    14a0:	81 e0       	ldi	r24, 0x01	; 1
    14a2:	60 e0       	ldi	r22, 0x00	; 0
    14a4:	40 e0       	ldi	r20, 0x00	; 0
    14a6:	0e 94 9b 05 	call	0xb36	; 0xb36 <setPinDirection>
	setPinDirection(DIO_PORTD, PIN6, INPUT); // button 1
    14aa:	83 e0       	ldi	r24, 0x03	; 3
    14ac:	66 e0       	ldi	r22, 0x06	; 6
    14ae:	40 e0       	ldi	r20, 0x00	; 0
    14b0:	0e 94 9b 05 	call	0xb36	; 0xb36 <setPinDirection>
	setPinDirection(DIO_PORTD, PIN2, INPUT); // button 2
    14b4:	83 e0       	ldi	r24, 0x03	; 3
    14b6:	62 e0       	ldi	r22, 0x02	; 2
    14b8:	40 e0       	ldi	r20, 0x00	; 0
    14ba:	0e 94 9b 05 	call	0xb36	; 0xb36 <setPinDirection>

	setPinDirection(DIO_PORTC,PIN2,OUTPUT); // LED 0
    14be:	82 e0       	ldi	r24, 0x02	; 2
    14c0:	62 e0       	ldi	r22, 0x02	; 2
    14c2:	41 e0       	ldi	r20, 0x01	; 1
    14c4:	0e 94 9b 05 	call	0xb36	; 0xb36 <setPinDirection>
	setPinDirection(DIO_PORTC,PIN7,OUTPUT); // LED 1
    14c8:	82 e0       	ldi	r24, 0x02	; 2
    14ca:	67 e0       	ldi	r22, 0x07	; 7
    14cc:	41 e0       	ldi	r20, 0x01	; 1
    14ce:	0e 94 9b 05 	call	0xb36	; 0xb36 <setPinDirection>
	setPinDirection(DIO_PORTD,PIN3,OUTPUT); // LED 2
    14d2:	83 e0       	ldi	r24, 0x03	; 3
    14d4:	63 e0       	ldi	r22, 0x03	; 3
    14d6:	41 e0       	ldi	r20, 0x01	; 1
    14d8:	0e 94 9b 05 	call	0xb36	; 0xb36 <setPinDirection>
	setPinDirection(DIO_PORTA,PIN3,OUTPUT); // BUZZER
    14dc:	80 e0       	ldi	r24, 0x00	; 0
    14de:	63 e0       	ldi	r22, 0x03	; 3
    14e0:	41 e0       	ldi	r20, 0x01	; 1
    14e2:	0e 94 9b 05 	call	0xb36	; 0xb36 <setPinDirection>

	uint8 Button1_Value=0;
    14e6:	fe 01       	movw	r30, r28
    14e8:	ec 52       	subi	r30, 0x2C	; 44
    14ea:	ff 4f       	sbci	r31, 0xFF	; 255
    14ec:	10 82       	st	Z, r1
	uint8 Button2_Value=0;
    14ee:	fe 01       	movw	r30, r28
    14f0:	eb 52       	subi	r30, 0x2B	; 43
    14f2:	ff 4f       	sbci	r31, 0xFF	; 255
    14f4:	10 82       	st	Z, r1
	uint8 Button3_Value=0;
    14f6:	fe 01       	movw	r30, r28
    14f8:	ea 52       	subi	r30, 0x2A	; 42
    14fa:	ff 4f       	sbci	r31, 0xFF	; 255
    14fc:	10 82       	st	Z, r1
	uint8 i=0;
    14fe:	fe 01       	movw	r30, r28
    1500:	ed 52       	subi	r30, 0x2D	; 45
    1502:	ff 4f       	sbci	r31, 0xFF	; 255
    1504:	10 82       	st	Z, r1

	while(1)
	{
		DIO_GetPinValue(DIO_PORTB, PIN0, &Button1_Value);
    1506:	9e 01       	movw	r18, r28
    1508:	2c 52       	subi	r18, 0x2C	; 44
    150a:	3f 4f       	sbci	r19, 0xFF	; 255
    150c:	81 e0       	ldi	r24, 0x01	; 1
    150e:	60 e0       	ldi	r22, 0x00	; 0
    1510:	a9 01       	movw	r20, r18
    1512:	0e 94 49 08 	call	0x1092	; 0x1092 <DIO_GetPinValue>
    1516:	fe 01       	movw	r30, r28
    1518:	e1 53       	subi	r30, 0x31	; 49
    151a:	ff 4f       	sbci	r31, 0xFF	; 255
    151c:	80 e0       	ldi	r24, 0x00	; 0
    151e:	90 e0       	ldi	r25, 0x00	; 0
    1520:	a8 e4       	ldi	r26, 0x48	; 72
    1522:	b2 e4       	ldi	r27, 0x42	; 66
    1524:	80 83       	st	Z, r24
    1526:	91 83       	std	Z+1, r25	; 0x01
    1528:	a2 83       	std	Z+2, r26	; 0x02
    152a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    152c:	8e 01       	movw	r16, r28
    152e:	05 53       	subi	r16, 0x35	; 53
    1530:	1f 4f       	sbci	r17, 0xFF	; 255
    1532:	fe 01       	movw	r30, r28
    1534:	e1 53       	subi	r30, 0x31	; 49
    1536:	ff 4f       	sbci	r31, 0xFF	; 255
    1538:	60 81       	ld	r22, Z
    153a:	71 81       	ldd	r23, Z+1	; 0x01
    153c:	82 81       	ldd	r24, Z+2	; 0x02
    153e:	93 81       	ldd	r25, Z+3	; 0x03
    1540:	20 e0       	ldi	r18, 0x00	; 0
    1542:	30 e0       	ldi	r19, 0x00	; 0
    1544:	4a e7       	ldi	r20, 0x7A	; 122
    1546:	55 e4       	ldi	r21, 0x45	; 69
    1548:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    154c:	dc 01       	movw	r26, r24
    154e:	cb 01       	movw	r24, r22
    1550:	f8 01       	movw	r30, r16
    1552:	80 83       	st	Z, r24
    1554:	91 83       	std	Z+1, r25	; 0x01
    1556:	a2 83       	std	Z+2, r26	; 0x02
    1558:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    155a:	fe 01       	movw	r30, r28
    155c:	e5 53       	subi	r30, 0x35	; 53
    155e:	ff 4f       	sbci	r31, 0xFF	; 255
    1560:	60 81       	ld	r22, Z
    1562:	71 81       	ldd	r23, Z+1	; 0x01
    1564:	82 81       	ldd	r24, Z+2	; 0x02
    1566:	93 81       	ldd	r25, Z+3	; 0x03
    1568:	20 e0       	ldi	r18, 0x00	; 0
    156a:	30 e0       	ldi	r19, 0x00	; 0
    156c:	40 e8       	ldi	r20, 0x80	; 128
    156e:	5f e3       	ldi	r21, 0x3F	; 63
    1570:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1574:	88 23       	and	r24, r24
    1576:	44 f4       	brge	.+16     	; 0x1588 <main+0x102>
		__ticks = 1;
    1578:	fe 01       	movw	r30, r28
    157a:	e7 53       	subi	r30, 0x37	; 55
    157c:	ff 4f       	sbci	r31, 0xFF	; 255
    157e:	81 e0       	ldi	r24, 0x01	; 1
    1580:	90 e0       	ldi	r25, 0x00	; 0
    1582:	91 83       	std	Z+1, r25	; 0x01
    1584:	80 83       	st	Z, r24
    1586:	64 c0       	rjmp	.+200    	; 0x1650 <main+0x1ca>
	else if (__tmp > 65535)
    1588:	fe 01       	movw	r30, r28
    158a:	e5 53       	subi	r30, 0x35	; 53
    158c:	ff 4f       	sbci	r31, 0xFF	; 255
    158e:	60 81       	ld	r22, Z
    1590:	71 81       	ldd	r23, Z+1	; 0x01
    1592:	82 81       	ldd	r24, Z+2	; 0x02
    1594:	93 81       	ldd	r25, Z+3	; 0x03
    1596:	20 e0       	ldi	r18, 0x00	; 0
    1598:	3f ef       	ldi	r19, 0xFF	; 255
    159a:	4f e7       	ldi	r20, 0x7F	; 127
    159c:	57 e4       	ldi	r21, 0x47	; 71
    159e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    15a2:	18 16       	cp	r1, r24
    15a4:	0c f0       	brlt	.+2      	; 0x15a8 <main+0x122>
    15a6:	43 c0       	rjmp	.+134    	; 0x162e <main+0x1a8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    15a8:	fe 01       	movw	r30, r28
    15aa:	e1 53       	subi	r30, 0x31	; 49
    15ac:	ff 4f       	sbci	r31, 0xFF	; 255
    15ae:	60 81       	ld	r22, Z
    15b0:	71 81       	ldd	r23, Z+1	; 0x01
    15b2:	82 81       	ldd	r24, Z+2	; 0x02
    15b4:	93 81       	ldd	r25, Z+3	; 0x03
    15b6:	20 e0       	ldi	r18, 0x00	; 0
    15b8:	30 e0       	ldi	r19, 0x00	; 0
    15ba:	40 e2       	ldi	r20, 0x20	; 32
    15bc:	51 e4       	ldi	r21, 0x41	; 65
    15be:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    15c2:	dc 01       	movw	r26, r24
    15c4:	cb 01       	movw	r24, r22
    15c6:	8e 01       	movw	r16, r28
    15c8:	07 53       	subi	r16, 0x37	; 55
    15ca:	1f 4f       	sbci	r17, 0xFF	; 255
    15cc:	bc 01       	movw	r22, r24
    15ce:	cd 01       	movw	r24, r26
    15d0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    15d4:	dc 01       	movw	r26, r24
    15d6:	cb 01       	movw	r24, r22
    15d8:	f8 01       	movw	r30, r16
    15da:	91 83       	std	Z+1, r25	; 0x01
    15dc:	80 83       	st	Z, r24
    15de:	1f c0       	rjmp	.+62     	; 0x161e <main+0x198>
    15e0:	fe 01       	movw	r30, r28
    15e2:	e9 53       	subi	r30, 0x39	; 57
    15e4:	ff 4f       	sbci	r31, 0xFF	; 255
    15e6:	80 e9       	ldi	r24, 0x90	; 144
    15e8:	91 e0       	ldi	r25, 0x01	; 1
    15ea:	91 83       	std	Z+1, r25	; 0x01
    15ec:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    15ee:	fe 01       	movw	r30, r28
    15f0:	e9 53       	subi	r30, 0x39	; 57
    15f2:	ff 4f       	sbci	r31, 0xFF	; 255
    15f4:	80 81       	ld	r24, Z
    15f6:	91 81       	ldd	r25, Z+1	; 0x01
    15f8:	01 97       	sbiw	r24, 0x01	; 1
    15fa:	f1 f7       	brne	.-4      	; 0x15f8 <main+0x172>
    15fc:	fe 01       	movw	r30, r28
    15fe:	e9 53       	subi	r30, 0x39	; 57
    1600:	ff 4f       	sbci	r31, 0xFF	; 255
    1602:	91 83       	std	Z+1, r25	; 0x01
    1604:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1606:	de 01       	movw	r26, r28
    1608:	a7 53       	subi	r26, 0x37	; 55
    160a:	bf 4f       	sbci	r27, 0xFF	; 255
    160c:	fe 01       	movw	r30, r28
    160e:	e7 53       	subi	r30, 0x37	; 55
    1610:	ff 4f       	sbci	r31, 0xFF	; 255
    1612:	80 81       	ld	r24, Z
    1614:	91 81       	ldd	r25, Z+1	; 0x01
    1616:	01 97       	sbiw	r24, 0x01	; 1
    1618:	11 96       	adiw	r26, 0x01	; 1
    161a:	9c 93       	st	X, r25
    161c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    161e:	fe 01       	movw	r30, r28
    1620:	e7 53       	subi	r30, 0x37	; 55
    1622:	ff 4f       	sbci	r31, 0xFF	; 255
    1624:	80 81       	ld	r24, Z
    1626:	91 81       	ldd	r25, Z+1	; 0x01
    1628:	00 97       	sbiw	r24, 0x00	; 0
    162a:	d1 f6       	brne	.-76     	; 0x15e0 <main+0x15a>
    162c:	27 c0       	rjmp	.+78     	; 0x167c <main+0x1f6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    162e:	8e 01       	movw	r16, r28
    1630:	07 53       	subi	r16, 0x37	; 55
    1632:	1f 4f       	sbci	r17, 0xFF	; 255
    1634:	fe 01       	movw	r30, r28
    1636:	e5 53       	subi	r30, 0x35	; 53
    1638:	ff 4f       	sbci	r31, 0xFF	; 255
    163a:	60 81       	ld	r22, Z
    163c:	71 81       	ldd	r23, Z+1	; 0x01
    163e:	82 81       	ldd	r24, Z+2	; 0x02
    1640:	93 81       	ldd	r25, Z+3	; 0x03
    1642:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1646:	dc 01       	movw	r26, r24
    1648:	cb 01       	movw	r24, r22
    164a:	f8 01       	movw	r30, r16
    164c:	91 83       	std	Z+1, r25	; 0x01
    164e:	80 83       	st	Z, r24
    1650:	de 01       	movw	r26, r28
    1652:	ab 53       	subi	r26, 0x3B	; 59
    1654:	bf 4f       	sbci	r27, 0xFF	; 255
    1656:	fe 01       	movw	r30, r28
    1658:	e7 53       	subi	r30, 0x37	; 55
    165a:	ff 4f       	sbci	r31, 0xFF	; 255
    165c:	80 81       	ld	r24, Z
    165e:	91 81       	ldd	r25, Z+1	; 0x01
    1660:	8d 93       	st	X+, r24
    1662:	9c 93       	st	X, r25
    1664:	fe 01       	movw	r30, r28
    1666:	eb 53       	subi	r30, 0x3B	; 59
    1668:	ff 4f       	sbci	r31, 0xFF	; 255
    166a:	80 81       	ld	r24, Z
    166c:	91 81       	ldd	r25, Z+1	; 0x01
    166e:	01 97       	sbiw	r24, 0x01	; 1
    1670:	f1 f7       	brne	.-4      	; 0x166e <main+0x1e8>
    1672:	fe 01       	movw	r30, r28
    1674:	eb 53       	subi	r30, 0x3B	; 59
    1676:	ff 4f       	sbci	r31, 0xFF	; 255
    1678:	91 83       	std	Z+1, r25	; 0x01
    167a:	80 83       	st	Z, r24
		_delay_ms(50);
		DIO_GetPinValue(DIO_PORTD, PIN6, &Button2_Value);
    167c:	9e 01       	movw	r18, r28
    167e:	2b 52       	subi	r18, 0x2B	; 43
    1680:	3f 4f       	sbci	r19, 0xFF	; 255
    1682:	83 e0       	ldi	r24, 0x03	; 3
    1684:	66 e0       	ldi	r22, 0x06	; 6
    1686:	a9 01       	movw	r20, r18
    1688:	0e 94 49 08 	call	0x1092	; 0x1092 <DIO_GetPinValue>
    168c:	fe 01       	movw	r30, r28
    168e:	ef 53       	subi	r30, 0x3F	; 63
    1690:	ff 4f       	sbci	r31, 0xFF	; 255
    1692:	80 e0       	ldi	r24, 0x00	; 0
    1694:	90 e0       	ldi	r25, 0x00	; 0
    1696:	a8 e4       	ldi	r26, 0x48	; 72
    1698:	b2 e4       	ldi	r27, 0x42	; 66
    169a:	80 83       	st	Z, r24
    169c:	91 83       	std	Z+1, r25	; 0x01
    169e:	a2 83       	std	Z+2, r26	; 0x02
    16a0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    16a2:	8e 01       	movw	r16, r28
    16a4:	03 54       	subi	r16, 0x43	; 67
    16a6:	1f 4f       	sbci	r17, 0xFF	; 255
    16a8:	fe 01       	movw	r30, r28
    16aa:	ef 53       	subi	r30, 0x3F	; 63
    16ac:	ff 4f       	sbci	r31, 0xFF	; 255
    16ae:	60 81       	ld	r22, Z
    16b0:	71 81       	ldd	r23, Z+1	; 0x01
    16b2:	82 81       	ldd	r24, Z+2	; 0x02
    16b4:	93 81       	ldd	r25, Z+3	; 0x03
    16b6:	20 e0       	ldi	r18, 0x00	; 0
    16b8:	30 e0       	ldi	r19, 0x00	; 0
    16ba:	4a e7       	ldi	r20, 0x7A	; 122
    16bc:	55 e4       	ldi	r21, 0x45	; 69
    16be:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    16c2:	dc 01       	movw	r26, r24
    16c4:	cb 01       	movw	r24, r22
    16c6:	f8 01       	movw	r30, r16
    16c8:	80 83       	st	Z, r24
    16ca:	91 83       	std	Z+1, r25	; 0x01
    16cc:	a2 83       	std	Z+2, r26	; 0x02
    16ce:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    16d0:	fe 01       	movw	r30, r28
    16d2:	e3 54       	subi	r30, 0x43	; 67
    16d4:	ff 4f       	sbci	r31, 0xFF	; 255
    16d6:	60 81       	ld	r22, Z
    16d8:	71 81       	ldd	r23, Z+1	; 0x01
    16da:	82 81       	ldd	r24, Z+2	; 0x02
    16dc:	93 81       	ldd	r25, Z+3	; 0x03
    16de:	20 e0       	ldi	r18, 0x00	; 0
    16e0:	30 e0       	ldi	r19, 0x00	; 0
    16e2:	40 e8       	ldi	r20, 0x80	; 128
    16e4:	5f e3       	ldi	r21, 0x3F	; 63
    16e6:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    16ea:	88 23       	and	r24, r24
    16ec:	44 f4       	brge	.+16     	; 0x16fe <main+0x278>
		__ticks = 1;
    16ee:	fe 01       	movw	r30, r28
    16f0:	e5 54       	subi	r30, 0x45	; 69
    16f2:	ff 4f       	sbci	r31, 0xFF	; 255
    16f4:	81 e0       	ldi	r24, 0x01	; 1
    16f6:	90 e0       	ldi	r25, 0x00	; 0
    16f8:	91 83       	std	Z+1, r25	; 0x01
    16fa:	80 83       	st	Z, r24
    16fc:	64 c0       	rjmp	.+200    	; 0x17c6 <main+0x340>
	else if (__tmp > 65535)
    16fe:	fe 01       	movw	r30, r28
    1700:	e3 54       	subi	r30, 0x43	; 67
    1702:	ff 4f       	sbci	r31, 0xFF	; 255
    1704:	60 81       	ld	r22, Z
    1706:	71 81       	ldd	r23, Z+1	; 0x01
    1708:	82 81       	ldd	r24, Z+2	; 0x02
    170a:	93 81       	ldd	r25, Z+3	; 0x03
    170c:	20 e0       	ldi	r18, 0x00	; 0
    170e:	3f ef       	ldi	r19, 0xFF	; 255
    1710:	4f e7       	ldi	r20, 0x7F	; 127
    1712:	57 e4       	ldi	r21, 0x47	; 71
    1714:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1718:	18 16       	cp	r1, r24
    171a:	0c f0       	brlt	.+2      	; 0x171e <main+0x298>
    171c:	43 c0       	rjmp	.+134    	; 0x17a4 <main+0x31e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    171e:	fe 01       	movw	r30, r28
    1720:	ef 53       	subi	r30, 0x3F	; 63
    1722:	ff 4f       	sbci	r31, 0xFF	; 255
    1724:	60 81       	ld	r22, Z
    1726:	71 81       	ldd	r23, Z+1	; 0x01
    1728:	82 81       	ldd	r24, Z+2	; 0x02
    172a:	93 81       	ldd	r25, Z+3	; 0x03
    172c:	20 e0       	ldi	r18, 0x00	; 0
    172e:	30 e0       	ldi	r19, 0x00	; 0
    1730:	40 e2       	ldi	r20, 0x20	; 32
    1732:	51 e4       	ldi	r21, 0x41	; 65
    1734:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1738:	dc 01       	movw	r26, r24
    173a:	cb 01       	movw	r24, r22
    173c:	8e 01       	movw	r16, r28
    173e:	05 54       	subi	r16, 0x45	; 69
    1740:	1f 4f       	sbci	r17, 0xFF	; 255
    1742:	bc 01       	movw	r22, r24
    1744:	cd 01       	movw	r24, r26
    1746:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    174a:	dc 01       	movw	r26, r24
    174c:	cb 01       	movw	r24, r22
    174e:	f8 01       	movw	r30, r16
    1750:	91 83       	std	Z+1, r25	; 0x01
    1752:	80 83       	st	Z, r24
    1754:	1f c0       	rjmp	.+62     	; 0x1794 <main+0x30e>
    1756:	fe 01       	movw	r30, r28
    1758:	e7 54       	subi	r30, 0x47	; 71
    175a:	ff 4f       	sbci	r31, 0xFF	; 255
    175c:	80 e9       	ldi	r24, 0x90	; 144
    175e:	91 e0       	ldi	r25, 0x01	; 1
    1760:	91 83       	std	Z+1, r25	; 0x01
    1762:	80 83       	st	Z, r24
    1764:	fe 01       	movw	r30, r28
    1766:	e7 54       	subi	r30, 0x47	; 71
    1768:	ff 4f       	sbci	r31, 0xFF	; 255
    176a:	80 81       	ld	r24, Z
    176c:	91 81       	ldd	r25, Z+1	; 0x01
    176e:	01 97       	sbiw	r24, 0x01	; 1
    1770:	f1 f7       	brne	.-4      	; 0x176e <main+0x2e8>
    1772:	fe 01       	movw	r30, r28
    1774:	e7 54       	subi	r30, 0x47	; 71
    1776:	ff 4f       	sbci	r31, 0xFF	; 255
    1778:	91 83       	std	Z+1, r25	; 0x01
    177a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    177c:	de 01       	movw	r26, r28
    177e:	a5 54       	subi	r26, 0x45	; 69
    1780:	bf 4f       	sbci	r27, 0xFF	; 255
    1782:	fe 01       	movw	r30, r28
    1784:	e5 54       	subi	r30, 0x45	; 69
    1786:	ff 4f       	sbci	r31, 0xFF	; 255
    1788:	80 81       	ld	r24, Z
    178a:	91 81       	ldd	r25, Z+1	; 0x01
    178c:	01 97       	sbiw	r24, 0x01	; 1
    178e:	11 96       	adiw	r26, 0x01	; 1
    1790:	9c 93       	st	X, r25
    1792:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1794:	fe 01       	movw	r30, r28
    1796:	e5 54       	subi	r30, 0x45	; 69
    1798:	ff 4f       	sbci	r31, 0xFF	; 255
    179a:	80 81       	ld	r24, Z
    179c:	91 81       	ldd	r25, Z+1	; 0x01
    179e:	00 97       	sbiw	r24, 0x00	; 0
    17a0:	d1 f6       	brne	.-76     	; 0x1756 <main+0x2d0>
    17a2:	27 c0       	rjmp	.+78     	; 0x17f2 <main+0x36c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    17a4:	8e 01       	movw	r16, r28
    17a6:	05 54       	subi	r16, 0x45	; 69
    17a8:	1f 4f       	sbci	r17, 0xFF	; 255
    17aa:	fe 01       	movw	r30, r28
    17ac:	e3 54       	subi	r30, 0x43	; 67
    17ae:	ff 4f       	sbci	r31, 0xFF	; 255
    17b0:	60 81       	ld	r22, Z
    17b2:	71 81       	ldd	r23, Z+1	; 0x01
    17b4:	82 81       	ldd	r24, Z+2	; 0x02
    17b6:	93 81       	ldd	r25, Z+3	; 0x03
    17b8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    17bc:	dc 01       	movw	r26, r24
    17be:	cb 01       	movw	r24, r22
    17c0:	f8 01       	movw	r30, r16
    17c2:	91 83       	std	Z+1, r25	; 0x01
    17c4:	80 83       	st	Z, r24
    17c6:	de 01       	movw	r26, r28
    17c8:	a9 54       	subi	r26, 0x49	; 73
    17ca:	bf 4f       	sbci	r27, 0xFF	; 255
    17cc:	fe 01       	movw	r30, r28
    17ce:	e5 54       	subi	r30, 0x45	; 69
    17d0:	ff 4f       	sbci	r31, 0xFF	; 255
    17d2:	80 81       	ld	r24, Z
    17d4:	91 81       	ldd	r25, Z+1	; 0x01
    17d6:	8d 93       	st	X+, r24
    17d8:	9c 93       	st	X, r25
    17da:	fe 01       	movw	r30, r28
    17dc:	e9 54       	subi	r30, 0x49	; 73
    17de:	ff 4f       	sbci	r31, 0xFF	; 255
    17e0:	80 81       	ld	r24, Z
    17e2:	91 81       	ldd	r25, Z+1	; 0x01
    17e4:	01 97       	sbiw	r24, 0x01	; 1
    17e6:	f1 f7       	brne	.-4      	; 0x17e4 <main+0x35e>
    17e8:	fe 01       	movw	r30, r28
    17ea:	e9 54       	subi	r30, 0x49	; 73
    17ec:	ff 4f       	sbci	r31, 0xFF	; 255
    17ee:	91 83       	std	Z+1, r25	; 0x01
    17f0:	80 83       	st	Z, r24
		_delay_ms(50);
		DIO_GetPinValue(DIO_PORTD, PIN2, &Button3_Value);
    17f2:	9e 01       	movw	r18, r28
    17f4:	2a 52       	subi	r18, 0x2A	; 42
    17f6:	3f 4f       	sbci	r19, 0xFF	; 255
    17f8:	83 e0       	ldi	r24, 0x03	; 3
    17fa:	62 e0       	ldi	r22, 0x02	; 2
    17fc:	a9 01       	movw	r20, r18
    17fe:	0e 94 49 08 	call	0x1092	; 0x1092 <DIO_GetPinValue>
    1802:	fe 01       	movw	r30, r28
    1804:	ed 54       	subi	r30, 0x4D	; 77
    1806:	ff 4f       	sbci	r31, 0xFF	; 255
    1808:	80 e0       	ldi	r24, 0x00	; 0
    180a:	90 e0       	ldi	r25, 0x00	; 0
    180c:	a8 e4       	ldi	r26, 0x48	; 72
    180e:	b2 e4       	ldi	r27, 0x42	; 66
    1810:	80 83       	st	Z, r24
    1812:	91 83       	std	Z+1, r25	; 0x01
    1814:	a2 83       	std	Z+2, r26	; 0x02
    1816:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1818:	8e 01       	movw	r16, r28
    181a:	01 55       	subi	r16, 0x51	; 81
    181c:	1f 4f       	sbci	r17, 0xFF	; 255
    181e:	fe 01       	movw	r30, r28
    1820:	ed 54       	subi	r30, 0x4D	; 77
    1822:	ff 4f       	sbci	r31, 0xFF	; 255
    1824:	60 81       	ld	r22, Z
    1826:	71 81       	ldd	r23, Z+1	; 0x01
    1828:	82 81       	ldd	r24, Z+2	; 0x02
    182a:	93 81       	ldd	r25, Z+3	; 0x03
    182c:	20 e0       	ldi	r18, 0x00	; 0
    182e:	30 e0       	ldi	r19, 0x00	; 0
    1830:	4a e7       	ldi	r20, 0x7A	; 122
    1832:	55 e4       	ldi	r21, 0x45	; 69
    1834:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1838:	dc 01       	movw	r26, r24
    183a:	cb 01       	movw	r24, r22
    183c:	f8 01       	movw	r30, r16
    183e:	80 83       	st	Z, r24
    1840:	91 83       	std	Z+1, r25	; 0x01
    1842:	a2 83       	std	Z+2, r26	; 0x02
    1844:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1846:	fe 01       	movw	r30, r28
    1848:	e1 55       	subi	r30, 0x51	; 81
    184a:	ff 4f       	sbci	r31, 0xFF	; 255
    184c:	60 81       	ld	r22, Z
    184e:	71 81       	ldd	r23, Z+1	; 0x01
    1850:	82 81       	ldd	r24, Z+2	; 0x02
    1852:	93 81       	ldd	r25, Z+3	; 0x03
    1854:	20 e0       	ldi	r18, 0x00	; 0
    1856:	30 e0       	ldi	r19, 0x00	; 0
    1858:	40 e8       	ldi	r20, 0x80	; 128
    185a:	5f e3       	ldi	r21, 0x3F	; 63
    185c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1860:	88 23       	and	r24, r24
    1862:	44 f4       	brge	.+16     	; 0x1874 <main+0x3ee>
		__ticks = 1;
    1864:	fe 01       	movw	r30, r28
    1866:	e3 55       	subi	r30, 0x53	; 83
    1868:	ff 4f       	sbci	r31, 0xFF	; 255
    186a:	81 e0       	ldi	r24, 0x01	; 1
    186c:	90 e0       	ldi	r25, 0x00	; 0
    186e:	91 83       	std	Z+1, r25	; 0x01
    1870:	80 83       	st	Z, r24
    1872:	64 c0       	rjmp	.+200    	; 0x193c <main+0x4b6>
	else if (__tmp > 65535)
    1874:	fe 01       	movw	r30, r28
    1876:	e1 55       	subi	r30, 0x51	; 81
    1878:	ff 4f       	sbci	r31, 0xFF	; 255
    187a:	60 81       	ld	r22, Z
    187c:	71 81       	ldd	r23, Z+1	; 0x01
    187e:	82 81       	ldd	r24, Z+2	; 0x02
    1880:	93 81       	ldd	r25, Z+3	; 0x03
    1882:	20 e0       	ldi	r18, 0x00	; 0
    1884:	3f ef       	ldi	r19, 0xFF	; 255
    1886:	4f e7       	ldi	r20, 0x7F	; 127
    1888:	57 e4       	ldi	r21, 0x47	; 71
    188a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    188e:	18 16       	cp	r1, r24
    1890:	0c f0       	brlt	.+2      	; 0x1894 <main+0x40e>
    1892:	43 c0       	rjmp	.+134    	; 0x191a <main+0x494>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1894:	fe 01       	movw	r30, r28
    1896:	ed 54       	subi	r30, 0x4D	; 77
    1898:	ff 4f       	sbci	r31, 0xFF	; 255
    189a:	60 81       	ld	r22, Z
    189c:	71 81       	ldd	r23, Z+1	; 0x01
    189e:	82 81       	ldd	r24, Z+2	; 0x02
    18a0:	93 81       	ldd	r25, Z+3	; 0x03
    18a2:	20 e0       	ldi	r18, 0x00	; 0
    18a4:	30 e0       	ldi	r19, 0x00	; 0
    18a6:	40 e2       	ldi	r20, 0x20	; 32
    18a8:	51 e4       	ldi	r21, 0x41	; 65
    18aa:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    18ae:	dc 01       	movw	r26, r24
    18b0:	cb 01       	movw	r24, r22
    18b2:	8e 01       	movw	r16, r28
    18b4:	03 55       	subi	r16, 0x53	; 83
    18b6:	1f 4f       	sbci	r17, 0xFF	; 255
    18b8:	bc 01       	movw	r22, r24
    18ba:	cd 01       	movw	r24, r26
    18bc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    18c0:	dc 01       	movw	r26, r24
    18c2:	cb 01       	movw	r24, r22
    18c4:	f8 01       	movw	r30, r16
    18c6:	91 83       	std	Z+1, r25	; 0x01
    18c8:	80 83       	st	Z, r24
    18ca:	1f c0       	rjmp	.+62     	; 0x190a <main+0x484>
    18cc:	fe 01       	movw	r30, r28
    18ce:	e5 55       	subi	r30, 0x55	; 85
    18d0:	ff 4f       	sbci	r31, 0xFF	; 255
    18d2:	80 e9       	ldi	r24, 0x90	; 144
    18d4:	91 e0       	ldi	r25, 0x01	; 1
    18d6:	91 83       	std	Z+1, r25	; 0x01
    18d8:	80 83       	st	Z, r24
    18da:	fe 01       	movw	r30, r28
    18dc:	e5 55       	subi	r30, 0x55	; 85
    18de:	ff 4f       	sbci	r31, 0xFF	; 255
    18e0:	80 81       	ld	r24, Z
    18e2:	91 81       	ldd	r25, Z+1	; 0x01
    18e4:	01 97       	sbiw	r24, 0x01	; 1
    18e6:	f1 f7       	brne	.-4      	; 0x18e4 <main+0x45e>
    18e8:	fe 01       	movw	r30, r28
    18ea:	e5 55       	subi	r30, 0x55	; 85
    18ec:	ff 4f       	sbci	r31, 0xFF	; 255
    18ee:	91 83       	std	Z+1, r25	; 0x01
    18f0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    18f2:	de 01       	movw	r26, r28
    18f4:	a3 55       	subi	r26, 0x53	; 83
    18f6:	bf 4f       	sbci	r27, 0xFF	; 255
    18f8:	fe 01       	movw	r30, r28
    18fa:	e3 55       	subi	r30, 0x53	; 83
    18fc:	ff 4f       	sbci	r31, 0xFF	; 255
    18fe:	80 81       	ld	r24, Z
    1900:	91 81       	ldd	r25, Z+1	; 0x01
    1902:	01 97       	sbiw	r24, 0x01	; 1
    1904:	11 96       	adiw	r26, 0x01	; 1
    1906:	9c 93       	st	X, r25
    1908:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    190a:	fe 01       	movw	r30, r28
    190c:	e3 55       	subi	r30, 0x53	; 83
    190e:	ff 4f       	sbci	r31, 0xFF	; 255
    1910:	80 81       	ld	r24, Z
    1912:	91 81       	ldd	r25, Z+1	; 0x01
    1914:	00 97       	sbiw	r24, 0x00	; 0
    1916:	d1 f6       	brne	.-76     	; 0x18cc <main+0x446>
    1918:	28 c0       	rjmp	.+80     	; 0x196a <main+0x4e4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    191a:	8e 01       	movw	r16, r28
    191c:	03 55       	subi	r16, 0x53	; 83
    191e:	1f 4f       	sbci	r17, 0xFF	; 255
    1920:	fe 01       	movw	r30, r28
    1922:	e1 55       	subi	r30, 0x51	; 81
    1924:	ff 4f       	sbci	r31, 0xFF	; 255
    1926:	60 81       	ld	r22, Z
    1928:	71 81       	ldd	r23, Z+1	; 0x01
    192a:	82 81       	ldd	r24, Z+2	; 0x02
    192c:	93 81       	ldd	r25, Z+3	; 0x03
    192e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1932:	dc 01       	movw	r26, r24
    1934:	cb 01       	movw	r24, r22
    1936:	f8 01       	movw	r30, r16
    1938:	91 83       	std	Z+1, r25	; 0x01
    193a:	80 83       	st	Z, r24
    193c:	de 01       	movw	r26, r28
    193e:	a7 55       	subi	r26, 0x57	; 87
    1940:	bf 4f       	sbci	r27, 0xFF	; 255
    1942:	fe 01       	movw	r30, r28
    1944:	e3 55       	subi	r30, 0x53	; 83
    1946:	ff 4f       	sbci	r31, 0xFF	; 255
    1948:	80 81       	ld	r24, Z
    194a:	91 81       	ldd	r25, Z+1	; 0x01
    194c:	11 96       	adiw	r26, 0x01	; 1
    194e:	9c 93       	st	X, r25
    1950:	8e 93       	st	-X, r24
    1952:	fe 01       	movw	r30, r28
    1954:	e7 55       	subi	r30, 0x57	; 87
    1956:	ff 4f       	sbci	r31, 0xFF	; 255
    1958:	80 81       	ld	r24, Z
    195a:	91 81       	ldd	r25, Z+1	; 0x01
    195c:	01 97       	sbiw	r24, 0x01	; 1
    195e:	f1 f7       	brne	.-4      	; 0x195c <main+0x4d6>
    1960:	fe 01       	movw	r30, r28
    1962:	e7 55       	subi	r30, 0x57	; 87
    1964:	ff 4f       	sbci	r31, 0xFF	; 255
    1966:	91 83       	std	Z+1, r25	; 0x01
    1968:	80 83       	st	Z, r24
		_delay_ms(50);
		if (1 == Button1_Value)
    196a:	fe 01       	movw	r30, r28
    196c:	ec 52       	subi	r30, 0x2C	; 44
    196e:	ff 4f       	sbci	r31, 0xFF	; 255
    1970:	80 81       	ld	r24, Z
    1972:	81 30       	cpi	r24, 0x01	; 1
    1974:	09 f0       	breq	.+2      	; 0x1978 <main+0x4f2>
    1976:	bc c3       	rjmp	.+1912   	; 0x20f0 <main+0xc6a>
		{
			setPinVAlue(DIO_PORTC,PIN2,OUTPUT_HIGH);
    1978:	82 e0       	ldi	r24, 0x02	; 2
    197a:	62 e0       	ldi	r22, 0x02	; 2
    197c:	41 e0       	ldi	r20, 0x01	; 1
    197e:	0e 94 aa 06 	call	0xd54	; 0xd54 <setPinVAlue>
			setPinVAlue(DIO_PORTA,PIN3,OUTPUT_HIGH);
    1982:	80 e0       	ldi	r24, 0x00	; 0
    1984:	63 e0       	ldi	r22, 0x03	; 3
    1986:	41 e0       	ldi	r20, 0x01	; 1
    1988:	0e 94 aa 06 	call	0xd54	; 0xd54 <setPinVAlue>
    198c:	fe 01       	movw	r30, r28
    198e:	eb 55       	subi	r30, 0x5B	; 91
    1990:	ff 4f       	sbci	r31, 0xFF	; 255
    1992:	80 e0       	ldi	r24, 0x00	; 0
    1994:	90 e0       	ldi	r25, 0x00	; 0
    1996:	aa e7       	ldi	r26, 0x7A	; 122
    1998:	b4 e4       	ldi	r27, 0x44	; 68
    199a:	80 83       	st	Z, r24
    199c:	91 83       	std	Z+1, r25	; 0x01
    199e:	a2 83       	std	Z+2, r26	; 0x02
    19a0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    19a2:	8e 01       	movw	r16, r28
    19a4:	0f 55       	subi	r16, 0x5F	; 95
    19a6:	1f 4f       	sbci	r17, 0xFF	; 255
    19a8:	fe 01       	movw	r30, r28
    19aa:	eb 55       	subi	r30, 0x5B	; 91
    19ac:	ff 4f       	sbci	r31, 0xFF	; 255
    19ae:	60 81       	ld	r22, Z
    19b0:	71 81       	ldd	r23, Z+1	; 0x01
    19b2:	82 81       	ldd	r24, Z+2	; 0x02
    19b4:	93 81       	ldd	r25, Z+3	; 0x03
    19b6:	20 e0       	ldi	r18, 0x00	; 0
    19b8:	30 e0       	ldi	r19, 0x00	; 0
    19ba:	4a e7       	ldi	r20, 0x7A	; 122
    19bc:	55 e4       	ldi	r21, 0x45	; 69
    19be:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    19c2:	dc 01       	movw	r26, r24
    19c4:	cb 01       	movw	r24, r22
    19c6:	f8 01       	movw	r30, r16
    19c8:	80 83       	st	Z, r24
    19ca:	91 83       	std	Z+1, r25	; 0x01
    19cc:	a2 83       	std	Z+2, r26	; 0x02
    19ce:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    19d0:	fe 01       	movw	r30, r28
    19d2:	ef 55       	subi	r30, 0x5F	; 95
    19d4:	ff 4f       	sbci	r31, 0xFF	; 255
    19d6:	60 81       	ld	r22, Z
    19d8:	71 81       	ldd	r23, Z+1	; 0x01
    19da:	82 81       	ldd	r24, Z+2	; 0x02
    19dc:	93 81       	ldd	r25, Z+3	; 0x03
    19de:	20 e0       	ldi	r18, 0x00	; 0
    19e0:	30 e0       	ldi	r19, 0x00	; 0
    19e2:	40 e8       	ldi	r20, 0x80	; 128
    19e4:	5f e3       	ldi	r21, 0x3F	; 63
    19e6:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    19ea:	88 23       	and	r24, r24
    19ec:	44 f4       	brge	.+16     	; 0x19fe <main+0x578>
		__ticks = 1;
    19ee:	fe 01       	movw	r30, r28
    19f0:	e1 56       	subi	r30, 0x61	; 97
    19f2:	ff 4f       	sbci	r31, 0xFF	; 255
    19f4:	81 e0       	ldi	r24, 0x01	; 1
    19f6:	90 e0       	ldi	r25, 0x00	; 0
    19f8:	91 83       	std	Z+1, r25	; 0x01
    19fa:	80 83       	st	Z, r24
    19fc:	64 c0       	rjmp	.+200    	; 0x1ac6 <main+0x640>
	else if (__tmp > 65535)
    19fe:	fe 01       	movw	r30, r28
    1a00:	ef 55       	subi	r30, 0x5F	; 95
    1a02:	ff 4f       	sbci	r31, 0xFF	; 255
    1a04:	60 81       	ld	r22, Z
    1a06:	71 81       	ldd	r23, Z+1	; 0x01
    1a08:	82 81       	ldd	r24, Z+2	; 0x02
    1a0a:	93 81       	ldd	r25, Z+3	; 0x03
    1a0c:	20 e0       	ldi	r18, 0x00	; 0
    1a0e:	3f ef       	ldi	r19, 0xFF	; 255
    1a10:	4f e7       	ldi	r20, 0x7F	; 127
    1a12:	57 e4       	ldi	r21, 0x47	; 71
    1a14:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1a18:	18 16       	cp	r1, r24
    1a1a:	0c f0       	brlt	.+2      	; 0x1a1e <main+0x598>
    1a1c:	43 c0       	rjmp	.+134    	; 0x1aa4 <main+0x61e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1a1e:	fe 01       	movw	r30, r28
    1a20:	eb 55       	subi	r30, 0x5B	; 91
    1a22:	ff 4f       	sbci	r31, 0xFF	; 255
    1a24:	60 81       	ld	r22, Z
    1a26:	71 81       	ldd	r23, Z+1	; 0x01
    1a28:	82 81       	ldd	r24, Z+2	; 0x02
    1a2a:	93 81       	ldd	r25, Z+3	; 0x03
    1a2c:	20 e0       	ldi	r18, 0x00	; 0
    1a2e:	30 e0       	ldi	r19, 0x00	; 0
    1a30:	40 e2       	ldi	r20, 0x20	; 32
    1a32:	51 e4       	ldi	r21, 0x41	; 65
    1a34:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1a38:	dc 01       	movw	r26, r24
    1a3a:	cb 01       	movw	r24, r22
    1a3c:	8e 01       	movw	r16, r28
    1a3e:	01 56       	subi	r16, 0x61	; 97
    1a40:	1f 4f       	sbci	r17, 0xFF	; 255
    1a42:	bc 01       	movw	r22, r24
    1a44:	cd 01       	movw	r24, r26
    1a46:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1a4a:	dc 01       	movw	r26, r24
    1a4c:	cb 01       	movw	r24, r22
    1a4e:	f8 01       	movw	r30, r16
    1a50:	91 83       	std	Z+1, r25	; 0x01
    1a52:	80 83       	st	Z, r24
    1a54:	1f c0       	rjmp	.+62     	; 0x1a94 <main+0x60e>
    1a56:	fe 01       	movw	r30, r28
    1a58:	e3 56       	subi	r30, 0x63	; 99
    1a5a:	ff 4f       	sbci	r31, 0xFF	; 255
    1a5c:	80 e9       	ldi	r24, 0x90	; 144
    1a5e:	91 e0       	ldi	r25, 0x01	; 1
    1a60:	91 83       	std	Z+1, r25	; 0x01
    1a62:	80 83       	st	Z, r24
    1a64:	fe 01       	movw	r30, r28
    1a66:	e3 56       	subi	r30, 0x63	; 99
    1a68:	ff 4f       	sbci	r31, 0xFF	; 255
    1a6a:	80 81       	ld	r24, Z
    1a6c:	91 81       	ldd	r25, Z+1	; 0x01
    1a6e:	01 97       	sbiw	r24, 0x01	; 1
    1a70:	f1 f7       	brne	.-4      	; 0x1a6e <main+0x5e8>
    1a72:	fe 01       	movw	r30, r28
    1a74:	e3 56       	subi	r30, 0x63	; 99
    1a76:	ff 4f       	sbci	r31, 0xFF	; 255
    1a78:	91 83       	std	Z+1, r25	; 0x01
    1a7a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1a7c:	de 01       	movw	r26, r28
    1a7e:	a1 56       	subi	r26, 0x61	; 97
    1a80:	bf 4f       	sbci	r27, 0xFF	; 255
    1a82:	fe 01       	movw	r30, r28
    1a84:	e1 56       	subi	r30, 0x61	; 97
    1a86:	ff 4f       	sbci	r31, 0xFF	; 255
    1a88:	80 81       	ld	r24, Z
    1a8a:	91 81       	ldd	r25, Z+1	; 0x01
    1a8c:	01 97       	sbiw	r24, 0x01	; 1
    1a8e:	11 96       	adiw	r26, 0x01	; 1
    1a90:	9c 93       	st	X, r25
    1a92:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1a94:	fe 01       	movw	r30, r28
    1a96:	e1 56       	subi	r30, 0x61	; 97
    1a98:	ff 4f       	sbci	r31, 0xFF	; 255
    1a9a:	80 81       	ld	r24, Z
    1a9c:	91 81       	ldd	r25, Z+1	; 0x01
    1a9e:	00 97       	sbiw	r24, 0x00	; 0
    1aa0:	d1 f6       	brne	.-76     	; 0x1a56 <main+0x5d0>
    1aa2:	27 c0       	rjmp	.+78     	; 0x1af2 <main+0x66c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1aa4:	8e 01       	movw	r16, r28
    1aa6:	01 56       	subi	r16, 0x61	; 97
    1aa8:	1f 4f       	sbci	r17, 0xFF	; 255
    1aaa:	fe 01       	movw	r30, r28
    1aac:	ef 55       	subi	r30, 0x5F	; 95
    1aae:	ff 4f       	sbci	r31, 0xFF	; 255
    1ab0:	60 81       	ld	r22, Z
    1ab2:	71 81       	ldd	r23, Z+1	; 0x01
    1ab4:	82 81       	ldd	r24, Z+2	; 0x02
    1ab6:	93 81       	ldd	r25, Z+3	; 0x03
    1ab8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1abc:	dc 01       	movw	r26, r24
    1abe:	cb 01       	movw	r24, r22
    1ac0:	f8 01       	movw	r30, r16
    1ac2:	91 83       	std	Z+1, r25	; 0x01
    1ac4:	80 83       	st	Z, r24
    1ac6:	de 01       	movw	r26, r28
    1ac8:	a5 56       	subi	r26, 0x65	; 101
    1aca:	bf 4f       	sbci	r27, 0xFF	; 255
    1acc:	fe 01       	movw	r30, r28
    1ace:	e1 56       	subi	r30, 0x61	; 97
    1ad0:	ff 4f       	sbci	r31, 0xFF	; 255
    1ad2:	80 81       	ld	r24, Z
    1ad4:	91 81       	ldd	r25, Z+1	; 0x01
    1ad6:	8d 93       	st	X+, r24
    1ad8:	9c 93       	st	X, r25
    1ada:	fe 01       	movw	r30, r28
    1adc:	e5 56       	subi	r30, 0x65	; 101
    1ade:	ff 4f       	sbci	r31, 0xFF	; 255
    1ae0:	80 81       	ld	r24, Z
    1ae2:	91 81       	ldd	r25, Z+1	; 0x01
    1ae4:	01 97       	sbiw	r24, 0x01	; 1
    1ae6:	f1 f7       	brne	.-4      	; 0x1ae4 <main+0x65e>
    1ae8:	fe 01       	movw	r30, r28
    1aea:	e5 56       	subi	r30, 0x65	; 101
    1aec:	ff 4f       	sbci	r31, 0xFF	; 255
    1aee:	91 83       	std	Z+1, r25	; 0x01
    1af0:	80 83       	st	Z, r24
			_delay_ms(1000);
			setPinVAlue(DIO_PORTC,PIN2,OUTPUT_LOW);
    1af2:	82 e0       	ldi	r24, 0x02	; 2
    1af4:	62 e0       	ldi	r22, 0x02	; 2
    1af6:	40 e0       	ldi	r20, 0x00	; 0
    1af8:	0e 94 aa 06 	call	0xd54	; 0xd54 <setPinVAlue>
			setPinVAlue(DIO_PORTA,PIN3,OUTPUT_LOW);
    1afc:	80 e0       	ldi	r24, 0x00	; 0
    1afe:	63 e0       	ldi	r22, 0x03	; 3
    1b00:	40 e0       	ldi	r20, 0x00	; 0
    1b02:	0e 94 aa 06 	call	0xd54	; 0xd54 <setPinVAlue>
    1b06:	fe 01       	movw	r30, r28
    1b08:	e9 56       	subi	r30, 0x69	; 105
    1b0a:	ff 4f       	sbci	r31, 0xFF	; 255
    1b0c:	80 e0       	ldi	r24, 0x00	; 0
    1b0e:	90 e0       	ldi	r25, 0x00	; 0
    1b10:	aa e7       	ldi	r26, 0x7A	; 122
    1b12:	b4 e4       	ldi	r27, 0x44	; 68
    1b14:	80 83       	st	Z, r24
    1b16:	91 83       	std	Z+1, r25	; 0x01
    1b18:	a2 83       	std	Z+2, r26	; 0x02
    1b1a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1b1c:	8e 01       	movw	r16, r28
    1b1e:	0d 56       	subi	r16, 0x6D	; 109
    1b20:	1f 4f       	sbci	r17, 0xFF	; 255
    1b22:	fe 01       	movw	r30, r28
    1b24:	e9 56       	subi	r30, 0x69	; 105
    1b26:	ff 4f       	sbci	r31, 0xFF	; 255
    1b28:	60 81       	ld	r22, Z
    1b2a:	71 81       	ldd	r23, Z+1	; 0x01
    1b2c:	82 81       	ldd	r24, Z+2	; 0x02
    1b2e:	93 81       	ldd	r25, Z+3	; 0x03
    1b30:	20 e0       	ldi	r18, 0x00	; 0
    1b32:	30 e0       	ldi	r19, 0x00	; 0
    1b34:	4a e7       	ldi	r20, 0x7A	; 122
    1b36:	55 e4       	ldi	r21, 0x45	; 69
    1b38:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1b3c:	dc 01       	movw	r26, r24
    1b3e:	cb 01       	movw	r24, r22
    1b40:	f8 01       	movw	r30, r16
    1b42:	80 83       	st	Z, r24
    1b44:	91 83       	std	Z+1, r25	; 0x01
    1b46:	a2 83       	std	Z+2, r26	; 0x02
    1b48:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1b4a:	fe 01       	movw	r30, r28
    1b4c:	ed 56       	subi	r30, 0x6D	; 109
    1b4e:	ff 4f       	sbci	r31, 0xFF	; 255
    1b50:	60 81       	ld	r22, Z
    1b52:	71 81       	ldd	r23, Z+1	; 0x01
    1b54:	82 81       	ldd	r24, Z+2	; 0x02
    1b56:	93 81       	ldd	r25, Z+3	; 0x03
    1b58:	20 e0       	ldi	r18, 0x00	; 0
    1b5a:	30 e0       	ldi	r19, 0x00	; 0
    1b5c:	40 e8       	ldi	r20, 0x80	; 128
    1b5e:	5f e3       	ldi	r21, 0x3F	; 63
    1b60:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1b64:	88 23       	and	r24, r24
    1b66:	44 f4       	brge	.+16     	; 0x1b78 <main+0x6f2>
		__ticks = 1;
    1b68:	fe 01       	movw	r30, r28
    1b6a:	ef 56       	subi	r30, 0x6F	; 111
    1b6c:	ff 4f       	sbci	r31, 0xFF	; 255
    1b6e:	81 e0       	ldi	r24, 0x01	; 1
    1b70:	90 e0       	ldi	r25, 0x00	; 0
    1b72:	91 83       	std	Z+1, r25	; 0x01
    1b74:	80 83       	st	Z, r24
    1b76:	64 c0       	rjmp	.+200    	; 0x1c40 <main+0x7ba>
	else if (__tmp > 65535)
    1b78:	fe 01       	movw	r30, r28
    1b7a:	ed 56       	subi	r30, 0x6D	; 109
    1b7c:	ff 4f       	sbci	r31, 0xFF	; 255
    1b7e:	60 81       	ld	r22, Z
    1b80:	71 81       	ldd	r23, Z+1	; 0x01
    1b82:	82 81       	ldd	r24, Z+2	; 0x02
    1b84:	93 81       	ldd	r25, Z+3	; 0x03
    1b86:	20 e0       	ldi	r18, 0x00	; 0
    1b88:	3f ef       	ldi	r19, 0xFF	; 255
    1b8a:	4f e7       	ldi	r20, 0x7F	; 127
    1b8c:	57 e4       	ldi	r21, 0x47	; 71
    1b8e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1b92:	18 16       	cp	r1, r24
    1b94:	0c f0       	brlt	.+2      	; 0x1b98 <main+0x712>
    1b96:	43 c0       	rjmp	.+134    	; 0x1c1e <main+0x798>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1b98:	fe 01       	movw	r30, r28
    1b9a:	e9 56       	subi	r30, 0x69	; 105
    1b9c:	ff 4f       	sbci	r31, 0xFF	; 255
    1b9e:	60 81       	ld	r22, Z
    1ba0:	71 81       	ldd	r23, Z+1	; 0x01
    1ba2:	82 81       	ldd	r24, Z+2	; 0x02
    1ba4:	93 81       	ldd	r25, Z+3	; 0x03
    1ba6:	20 e0       	ldi	r18, 0x00	; 0
    1ba8:	30 e0       	ldi	r19, 0x00	; 0
    1baa:	40 e2       	ldi	r20, 0x20	; 32
    1bac:	51 e4       	ldi	r21, 0x41	; 65
    1bae:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1bb2:	dc 01       	movw	r26, r24
    1bb4:	cb 01       	movw	r24, r22
    1bb6:	8e 01       	movw	r16, r28
    1bb8:	0f 56       	subi	r16, 0x6F	; 111
    1bba:	1f 4f       	sbci	r17, 0xFF	; 255
    1bbc:	bc 01       	movw	r22, r24
    1bbe:	cd 01       	movw	r24, r26
    1bc0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1bc4:	dc 01       	movw	r26, r24
    1bc6:	cb 01       	movw	r24, r22
    1bc8:	f8 01       	movw	r30, r16
    1bca:	91 83       	std	Z+1, r25	; 0x01
    1bcc:	80 83       	st	Z, r24
    1bce:	1f c0       	rjmp	.+62     	; 0x1c0e <main+0x788>
    1bd0:	fe 01       	movw	r30, r28
    1bd2:	e1 57       	subi	r30, 0x71	; 113
    1bd4:	ff 4f       	sbci	r31, 0xFF	; 255
    1bd6:	80 e9       	ldi	r24, 0x90	; 144
    1bd8:	91 e0       	ldi	r25, 0x01	; 1
    1bda:	91 83       	std	Z+1, r25	; 0x01
    1bdc:	80 83       	st	Z, r24
    1bde:	fe 01       	movw	r30, r28
    1be0:	e1 57       	subi	r30, 0x71	; 113
    1be2:	ff 4f       	sbci	r31, 0xFF	; 255
    1be4:	80 81       	ld	r24, Z
    1be6:	91 81       	ldd	r25, Z+1	; 0x01
    1be8:	01 97       	sbiw	r24, 0x01	; 1
    1bea:	f1 f7       	brne	.-4      	; 0x1be8 <main+0x762>
    1bec:	fe 01       	movw	r30, r28
    1bee:	e1 57       	subi	r30, 0x71	; 113
    1bf0:	ff 4f       	sbci	r31, 0xFF	; 255
    1bf2:	91 83       	std	Z+1, r25	; 0x01
    1bf4:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1bf6:	de 01       	movw	r26, r28
    1bf8:	af 56       	subi	r26, 0x6F	; 111
    1bfa:	bf 4f       	sbci	r27, 0xFF	; 255
    1bfc:	fe 01       	movw	r30, r28
    1bfe:	ef 56       	subi	r30, 0x6F	; 111
    1c00:	ff 4f       	sbci	r31, 0xFF	; 255
    1c02:	80 81       	ld	r24, Z
    1c04:	91 81       	ldd	r25, Z+1	; 0x01
    1c06:	01 97       	sbiw	r24, 0x01	; 1
    1c08:	11 96       	adiw	r26, 0x01	; 1
    1c0a:	9c 93       	st	X, r25
    1c0c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1c0e:	fe 01       	movw	r30, r28
    1c10:	ef 56       	subi	r30, 0x6F	; 111
    1c12:	ff 4f       	sbci	r31, 0xFF	; 255
    1c14:	80 81       	ld	r24, Z
    1c16:	91 81       	ldd	r25, Z+1	; 0x01
    1c18:	00 97       	sbiw	r24, 0x00	; 0
    1c1a:	d1 f6       	brne	.-76     	; 0x1bd0 <main+0x74a>
    1c1c:	27 c0       	rjmp	.+78     	; 0x1c6c <main+0x7e6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1c1e:	8e 01       	movw	r16, r28
    1c20:	0f 56       	subi	r16, 0x6F	; 111
    1c22:	1f 4f       	sbci	r17, 0xFF	; 255
    1c24:	fe 01       	movw	r30, r28
    1c26:	ed 56       	subi	r30, 0x6D	; 109
    1c28:	ff 4f       	sbci	r31, 0xFF	; 255
    1c2a:	60 81       	ld	r22, Z
    1c2c:	71 81       	ldd	r23, Z+1	; 0x01
    1c2e:	82 81       	ldd	r24, Z+2	; 0x02
    1c30:	93 81       	ldd	r25, Z+3	; 0x03
    1c32:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1c36:	dc 01       	movw	r26, r24
    1c38:	cb 01       	movw	r24, r22
    1c3a:	f8 01       	movw	r30, r16
    1c3c:	91 83       	std	Z+1, r25	; 0x01
    1c3e:	80 83       	st	Z, r24
    1c40:	de 01       	movw	r26, r28
    1c42:	a3 57       	subi	r26, 0x73	; 115
    1c44:	bf 4f       	sbci	r27, 0xFF	; 255
    1c46:	fe 01       	movw	r30, r28
    1c48:	ef 56       	subi	r30, 0x6F	; 111
    1c4a:	ff 4f       	sbci	r31, 0xFF	; 255
    1c4c:	80 81       	ld	r24, Z
    1c4e:	91 81       	ldd	r25, Z+1	; 0x01
    1c50:	8d 93       	st	X+, r24
    1c52:	9c 93       	st	X, r25
    1c54:	fe 01       	movw	r30, r28
    1c56:	e3 57       	subi	r30, 0x73	; 115
    1c58:	ff 4f       	sbci	r31, 0xFF	; 255
    1c5a:	80 81       	ld	r24, Z
    1c5c:	91 81       	ldd	r25, Z+1	; 0x01
    1c5e:	01 97       	sbiw	r24, 0x01	; 1
    1c60:	f1 f7       	brne	.-4      	; 0x1c5e <main+0x7d8>
    1c62:	fe 01       	movw	r30, r28
    1c64:	e3 57       	subi	r30, 0x73	; 115
    1c66:	ff 4f       	sbci	r31, 0xFF	; 255
    1c68:	91 83       	std	Z+1, r25	; 0x01
    1c6a:	80 83       	st	Z, r24
			_delay_ms(1000);
			setPinVAlue(DIO_PORTC,PIN7,OUTPUT_HIGH);
    1c6c:	82 e0       	ldi	r24, 0x02	; 2
    1c6e:	67 e0       	ldi	r22, 0x07	; 7
    1c70:	41 e0       	ldi	r20, 0x01	; 1
    1c72:	0e 94 aa 06 	call	0xd54	; 0xd54 <setPinVAlue>
			setPinVAlue(DIO_PORTA,PIN3,OUTPUT_HIGH);
    1c76:	80 e0       	ldi	r24, 0x00	; 0
    1c78:	63 e0       	ldi	r22, 0x03	; 3
    1c7a:	41 e0       	ldi	r20, 0x01	; 1
    1c7c:	0e 94 aa 06 	call	0xd54	; 0xd54 <setPinVAlue>
    1c80:	fe 01       	movw	r30, r28
    1c82:	e7 57       	subi	r30, 0x77	; 119
    1c84:	ff 4f       	sbci	r31, 0xFF	; 255
    1c86:	80 e0       	ldi	r24, 0x00	; 0
    1c88:	90 e0       	ldi	r25, 0x00	; 0
    1c8a:	aa e7       	ldi	r26, 0x7A	; 122
    1c8c:	b4 e4       	ldi	r27, 0x44	; 68
    1c8e:	80 83       	st	Z, r24
    1c90:	91 83       	std	Z+1, r25	; 0x01
    1c92:	a2 83       	std	Z+2, r26	; 0x02
    1c94:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1c96:	8e 01       	movw	r16, r28
    1c98:	0b 57       	subi	r16, 0x7B	; 123
    1c9a:	1f 4f       	sbci	r17, 0xFF	; 255
    1c9c:	fe 01       	movw	r30, r28
    1c9e:	e7 57       	subi	r30, 0x77	; 119
    1ca0:	ff 4f       	sbci	r31, 0xFF	; 255
    1ca2:	60 81       	ld	r22, Z
    1ca4:	71 81       	ldd	r23, Z+1	; 0x01
    1ca6:	82 81       	ldd	r24, Z+2	; 0x02
    1ca8:	93 81       	ldd	r25, Z+3	; 0x03
    1caa:	20 e0       	ldi	r18, 0x00	; 0
    1cac:	30 e0       	ldi	r19, 0x00	; 0
    1cae:	4a e7       	ldi	r20, 0x7A	; 122
    1cb0:	55 e4       	ldi	r21, 0x45	; 69
    1cb2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1cb6:	dc 01       	movw	r26, r24
    1cb8:	cb 01       	movw	r24, r22
    1cba:	f8 01       	movw	r30, r16
    1cbc:	80 83       	st	Z, r24
    1cbe:	91 83       	std	Z+1, r25	; 0x01
    1cc0:	a2 83       	std	Z+2, r26	; 0x02
    1cc2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1cc4:	fe 01       	movw	r30, r28
    1cc6:	eb 57       	subi	r30, 0x7B	; 123
    1cc8:	ff 4f       	sbci	r31, 0xFF	; 255
    1cca:	60 81       	ld	r22, Z
    1ccc:	71 81       	ldd	r23, Z+1	; 0x01
    1cce:	82 81       	ldd	r24, Z+2	; 0x02
    1cd0:	93 81       	ldd	r25, Z+3	; 0x03
    1cd2:	20 e0       	ldi	r18, 0x00	; 0
    1cd4:	30 e0       	ldi	r19, 0x00	; 0
    1cd6:	40 e8       	ldi	r20, 0x80	; 128
    1cd8:	5f e3       	ldi	r21, 0x3F	; 63
    1cda:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1cde:	88 23       	and	r24, r24
    1ce0:	44 f4       	brge	.+16     	; 0x1cf2 <main+0x86c>
		__ticks = 1;
    1ce2:	fe 01       	movw	r30, r28
    1ce4:	ed 57       	subi	r30, 0x7D	; 125
    1ce6:	ff 4f       	sbci	r31, 0xFF	; 255
    1ce8:	81 e0       	ldi	r24, 0x01	; 1
    1cea:	90 e0       	ldi	r25, 0x00	; 0
    1cec:	91 83       	std	Z+1, r25	; 0x01
    1cee:	80 83       	st	Z, r24
    1cf0:	64 c0       	rjmp	.+200    	; 0x1dba <main+0x934>
	else if (__tmp > 65535)
    1cf2:	fe 01       	movw	r30, r28
    1cf4:	eb 57       	subi	r30, 0x7B	; 123
    1cf6:	ff 4f       	sbci	r31, 0xFF	; 255
    1cf8:	60 81       	ld	r22, Z
    1cfa:	71 81       	ldd	r23, Z+1	; 0x01
    1cfc:	82 81       	ldd	r24, Z+2	; 0x02
    1cfe:	93 81       	ldd	r25, Z+3	; 0x03
    1d00:	20 e0       	ldi	r18, 0x00	; 0
    1d02:	3f ef       	ldi	r19, 0xFF	; 255
    1d04:	4f e7       	ldi	r20, 0x7F	; 127
    1d06:	57 e4       	ldi	r21, 0x47	; 71
    1d08:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1d0c:	18 16       	cp	r1, r24
    1d0e:	0c f0       	brlt	.+2      	; 0x1d12 <main+0x88c>
    1d10:	43 c0       	rjmp	.+134    	; 0x1d98 <main+0x912>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1d12:	fe 01       	movw	r30, r28
    1d14:	e7 57       	subi	r30, 0x77	; 119
    1d16:	ff 4f       	sbci	r31, 0xFF	; 255
    1d18:	60 81       	ld	r22, Z
    1d1a:	71 81       	ldd	r23, Z+1	; 0x01
    1d1c:	82 81       	ldd	r24, Z+2	; 0x02
    1d1e:	93 81       	ldd	r25, Z+3	; 0x03
    1d20:	20 e0       	ldi	r18, 0x00	; 0
    1d22:	30 e0       	ldi	r19, 0x00	; 0
    1d24:	40 e2       	ldi	r20, 0x20	; 32
    1d26:	51 e4       	ldi	r21, 0x41	; 65
    1d28:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1d2c:	dc 01       	movw	r26, r24
    1d2e:	cb 01       	movw	r24, r22
    1d30:	8e 01       	movw	r16, r28
    1d32:	0d 57       	subi	r16, 0x7D	; 125
    1d34:	1f 4f       	sbci	r17, 0xFF	; 255
    1d36:	bc 01       	movw	r22, r24
    1d38:	cd 01       	movw	r24, r26
    1d3a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1d3e:	dc 01       	movw	r26, r24
    1d40:	cb 01       	movw	r24, r22
    1d42:	f8 01       	movw	r30, r16
    1d44:	91 83       	std	Z+1, r25	; 0x01
    1d46:	80 83       	st	Z, r24
    1d48:	1f c0       	rjmp	.+62     	; 0x1d88 <main+0x902>
    1d4a:	fe 01       	movw	r30, r28
    1d4c:	ef 57       	subi	r30, 0x7F	; 127
    1d4e:	ff 4f       	sbci	r31, 0xFF	; 255
    1d50:	80 e9       	ldi	r24, 0x90	; 144
    1d52:	91 e0       	ldi	r25, 0x01	; 1
    1d54:	91 83       	std	Z+1, r25	; 0x01
    1d56:	80 83       	st	Z, r24
    1d58:	fe 01       	movw	r30, r28
    1d5a:	ef 57       	subi	r30, 0x7F	; 127
    1d5c:	ff 4f       	sbci	r31, 0xFF	; 255
    1d5e:	80 81       	ld	r24, Z
    1d60:	91 81       	ldd	r25, Z+1	; 0x01
    1d62:	01 97       	sbiw	r24, 0x01	; 1
    1d64:	f1 f7       	brne	.-4      	; 0x1d62 <main+0x8dc>
    1d66:	fe 01       	movw	r30, r28
    1d68:	ef 57       	subi	r30, 0x7F	; 127
    1d6a:	ff 4f       	sbci	r31, 0xFF	; 255
    1d6c:	91 83       	std	Z+1, r25	; 0x01
    1d6e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1d70:	de 01       	movw	r26, r28
    1d72:	ad 57       	subi	r26, 0x7D	; 125
    1d74:	bf 4f       	sbci	r27, 0xFF	; 255
    1d76:	fe 01       	movw	r30, r28
    1d78:	ed 57       	subi	r30, 0x7D	; 125
    1d7a:	ff 4f       	sbci	r31, 0xFF	; 255
    1d7c:	80 81       	ld	r24, Z
    1d7e:	91 81       	ldd	r25, Z+1	; 0x01
    1d80:	01 97       	sbiw	r24, 0x01	; 1
    1d82:	11 96       	adiw	r26, 0x01	; 1
    1d84:	9c 93       	st	X, r25
    1d86:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1d88:	fe 01       	movw	r30, r28
    1d8a:	ed 57       	subi	r30, 0x7D	; 125
    1d8c:	ff 4f       	sbci	r31, 0xFF	; 255
    1d8e:	80 81       	ld	r24, Z
    1d90:	91 81       	ldd	r25, Z+1	; 0x01
    1d92:	00 97       	sbiw	r24, 0x00	; 0
    1d94:	d1 f6       	brne	.-76     	; 0x1d4a <main+0x8c4>
    1d96:	27 c0       	rjmp	.+78     	; 0x1de6 <main+0x960>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1d98:	8e 01       	movw	r16, r28
    1d9a:	0d 57       	subi	r16, 0x7D	; 125
    1d9c:	1f 4f       	sbci	r17, 0xFF	; 255
    1d9e:	fe 01       	movw	r30, r28
    1da0:	eb 57       	subi	r30, 0x7B	; 123
    1da2:	ff 4f       	sbci	r31, 0xFF	; 255
    1da4:	60 81       	ld	r22, Z
    1da6:	71 81       	ldd	r23, Z+1	; 0x01
    1da8:	82 81       	ldd	r24, Z+2	; 0x02
    1daa:	93 81       	ldd	r25, Z+3	; 0x03
    1dac:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1db0:	dc 01       	movw	r26, r24
    1db2:	cb 01       	movw	r24, r22
    1db4:	f8 01       	movw	r30, r16
    1db6:	91 83       	std	Z+1, r25	; 0x01
    1db8:	80 83       	st	Z, r24
    1dba:	de 01       	movw	r26, r28
    1dbc:	a1 58       	subi	r26, 0x81	; 129
    1dbe:	bf 4f       	sbci	r27, 0xFF	; 255
    1dc0:	fe 01       	movw	r30, r28
    1dc2:	ed 57       	subi	r30, 0x7D	; 125
    1dc4:	ff 4f       	sbci	r31, 0xFF	; 255
    1dc6:	80 81       	ld	r24, Z
    1dc8:	91 81       	ldd	r25, Z+1	; 0x01
    1dca:	8d 93       	st	X+, r24
    1dcc:	9c 93       	st	X, r25
    1dce:	fe 01       	movw	r30, r28
    1dd0:	e1 58       	subi	r30, 0x81	; 129
    1dd2:	ff 4f       	sbci	r31, 0xFF	; 255
    1dd4:	80 81       	ld	r24, Z
    1dd6:	91 81       	ldd	r25, Z+1	; 0x01
    1dd8:	01 97       	sbiw	r24, 0x01	; 1
    1dda:	f1 f7       	brne	.-4      	; 0x1dd8 <main+0x952>
    1ddc:	fe 01       	movw	r30, r28
    1dde:	e1 58       	subi	r30, 0x81	; 129
    1de0:	ff 4f       	sbci	r31, 0xFF	; 255
    1de2:	91 83       	std	Z+1, r25	; 0x01
    1de4:	80 83       	st	Z, r24
			_delay_ms(1000);
			setPinVAlue(DIO_PORTC,PIN7,OUTPUT_LOW);
    1de6:	82 e0       	ldi	r24, 0x02	; 2
    1de8:	67 e0       	ldi	r22, 0x07	; 7
    1dea:	40 e0       	ldi	r20, 0x00	; 0
    1dec:	0e 94 aa 06 	call	0xd54	; 0xd54 <setPinVAlue>
			setPinVAlue(DIO_PORTA,PIN3,OUTPUT_LOW);
    1df0:	80 e0       	ldi	r24, 0x00	; 0
    1df2:	63 e0       	ldi	r22, 0x03	; 3
    1df4:	40 e0       	ldi	r20, 0x00	; 0
    1df6:	0e 94 aa 06 	call	0xd54	; 0xd54 <setPinVAlue>
    1dfa:	fe 01       	movw	r30, r28
    1dfc:	e5 58       	subi	r30, 0x85	; 133
    1dfe:	ff 4f       	sbci	r31, 0xFF	; 255
    1e00:	80 e0       	ldi	r24, 0x00	; 0
    1e02:	90 e0       	ldi	r25, 0x00	; 0
    1e04:	aa e7       	ldi	r26, 0x7A	; 122
    1e06:	b4 e4       	ldi	r27, 0x44	; 68
    1e08:	80 83       	st	Z, r24
    1e0a:	91 83       	std	Z+1, r25	; 0x01
    1e0c:	a2 83       	std	Z+2, r26	; 0x02
    1e0e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1e10:	8e 01       	movw	r16, r28
    1e12:	09 58       	subi	r16, 0x89	; 137
    1e14:	1f 4f       	sbci	r17, 0xFF	; 255
    1e16:	fe 01       	movw	r30, r28
    1e18:	e5 58       	subi	r30, 0x85	; 133
    1e1a:	ff 4f       	sbci	r31, 0xFF	; 255
    1e1c:	60 81       	ld	r22, Z
    1e1e:	71 81       	ldd	r23, Z+1	; 0x01
    1e20:	82 81       	ldd	r24, Z+2	; 0x02
    1e22:	93 81       	ldd	r25, Z+3	; 0x03
    1e24:	20 e0       	ldi	r18, 0x00	; 0
    1e26:	30 e0       	ldi	r19, 0x00	; 0
    1e28:	4a e7       	ldi	r20, 0x7A	; 122
    1e2a:	55 e4       	ldi	r21, 0x45	; 69
    1e2c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1e30:	dc 01       	movw	r26, r24
    1e32:	cb 01       	movw	r24, r22
    1e34:	f8 01       	movw	r30, r16
    1e36:	80 83       	st	Z, r24
    1e38:	91 83       	std	Z+1, r25	; 0x01
    1e3a:	a2 83       	std	Z+2, r26	; 0x02
    1e3c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1e3e:	fe 01       	movw	r30, r28
    1e40:	e9 58       	subi	r30, 0x89	; 137
    1e42:	ff 4f       	sbci	r31, 0xFF	; 255
    1e44:	60 81       	ld	r22, Z
    1e46:	71 81       	ldd	r23, Z+1	; 0x01
    1e48:	82 81       	ldd	r24, Z+2	; 0x02
    1e4a:	93 81       	ldd	r25, Z+3	; 0x03
    1e4c:	20 e0       	ldi	r18, 0x00	; 0
    1e4e:	30 e0       	ldi	r19, 0x00	; 0
    1e50:	40 e8       	ldi	r20, 0x80	; 128
    1e52:	5f e3       	ldi	r21, 0x3F	; 63
    1e54:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1e58:	88 23       	and	r24, r24
    1e5a:	44 f4       	brge	.+16     	; 0x1e6c <main+0x9e6>
		__ticks = 1;
    1e5c:	fe 01       	movw	r30, r28
    1e5e:	eb 58       	subi	r30, 0x8B	; 139
    1e60:	ff 4f       	sbci	r31, 0xFF	; 255
    1e62:	81 e0       	ldi	r24, 0x01	; 1
    1e64:	90 e0       	ldi	r25, 0x00	; 0
    1e66:	91 83       	std	Z+1, r25	; 0x01
    1e68:	80 83       	st	Z, r24
    1e6a:	64 c0       	rjmp	.+200    	; 0x1f34 <main+0xaae>
	else if (__tmp > 65535)
    1e6c:	fe 01       	movw	r30, r28
    1e6e:	e9 58       	subi	r30, 0x89	; 137
    1e70:	ff 4f       	sbci	r31, 0xFF	; 255
    1e72:	60 81       	ld	r22, Z
    1e74:	71 81       	ldd	r23, Z+1	; 0x01
    1e76:	82 81       	ldd	r24, Z+2	; 0x02
    1e78:	93 81       	ldd	r25, Z+3	; 0x03
    1e7a:	20 e0       	ldi	r18, 0x00	; 0
    1e7c:	3f ef       	ldi	r19, 0xFF	; 255
    1e7e:	4f e7       	ldi	r20, 0x7F	; 127
    1e80:	57 e4       	ldi	r21, 0x47	; 71
    1e82:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1e86:	18 16       	cp	r1, r24
    1e88:	0c f0       	brlt	.+2      	; 0x1e8c <main+0xa06>
    1e8a:	43 c0       	rjmp	.+134    	; 0x1f12 <main+0xa8c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1e8c:	fe 01       	movw	r30, r28
    1e8e:	e5 58       	subi	r30, 0x85	; 133
    1e90:	ff 4f       	sbci	r31, 0xFF	; 255
    1e92:	60 81       	ld	r22, Z
    1e94:	71 81       	ldd	r23, Z+1	; 0x01
    1e96:	82 81       	ldd	r24, Z+2	; 0x02
    1e98:	93 81       	ldd	r25, Z+3	; 0x03
    1e9a:	20 e0       	ldi	r18, 0x00	; 0
    1e9c:	30 e0       	ldi	r19, 0x00	; 0
    1e9e:	40 e2       	ldi	r20, 0x20	; 32
    1ea0:	51 e4       	ldi	r21, 0x41	; 65
    1ea2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1ea6:	dc 01       	movw	r26, r24
    1ea8:	cb 01       	movw	r24, r22
    1eaa:	8e 01       	movw	r16, r28
    1eac:	0b 58       	subi	r16, 0x8B	; 139
    1eae:	1f 4f       	sbci	r17, 0xFF	; 255
    1eb0:	bc 01       	movw	r22, r24
    1eb2:	cd 01       	movw	r24, r26
    1eb4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1eb8:	dc 01       	movw	r26, r24
    1eba:	cb 01       	movw	r24, r22
    1ebc:	f8 01       	movw	r30, r16
    1ebe:	91 83       	std	Z+1, r25	; 0x01
    1ec0:	80 83       	st	Z, r24
    1ec2:	1f c0       	rjmp	.+62     	; 0x1f02 <main+0xa7c>
    1ec4:	fe 01       	movw	r30, r28
    1ec6:	ed 58       	subi	r30, 0x8D	; 141
    1ec8:	ff 4f       	sbci	r31, 0xFF	; 255
    1eca:	80 e9       	ldi	r24, 0x90	; 144
    1ecc:	91 e0       	ldi	r25, 0x01	; 1
    1ece:	91 83       	std	Z+1, r25	; 0x01
    1ed0:	80 83       	st	Z, r24
    1ed2:	fe 01       	movw	r30, r28
    1ed4:	ed 58       	subi	r30, 0x8D	; 141
    1ed6:	ff 4f       	sbci	r31, 0xFF	; 255
    1ed8:	80 81       	ld	r24, Z
    1eda:	91 81       	ldd	r25, Z+1	; 0x01
    1edc:	01 97       	sbiw	r24, 0x01	; 1
    1ede:	f1 f7       	brne	.-4      	; 0x1edc <main+0xa56>
    1ee0:	fe 01       	movw	r30, r28
    1ee2:	ed 58       	subi	r30, 0x8D	; 141
    1ee4:	ff 4f       	sbci	r31, 0xFF	; 255
    1ee6:	91 83       	std	Z+1, r25	; 0x01
    1ee8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1eea:	de 01       	movw	r26, r28
    1eec:	ab 58       	subi	r26, 0x8B	; 139
    1eee:	bf 4f       	sbci	r27, 0xFF	; 255
    1ef0:	fe 01       	movw	r30, r28
    1ef2:	eb 58       	subi	r30, 0x8B	; 139
    1ef4:	ff 4f       	sbci	r31, 0xFF	; 255
    1ef6:	80 81       	ld	r24, Z
    1ef8:	91 81       	ldd	r25, Z+1	; 0x01
    1efa:	01 97       	sbiw	r24, 0x01	; 1
    1efc:	11 96       	adiw	r26, 0x01	; 1
    1efe:	9c 93       	st	X, r25
    1f00:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1f02:	fe 01       	movw	r30, r28
    1f04:	eb 58       	subi	r30, 0x8B	; 139
    1f06:	ff 4f       	sbci	r31, 0xFF	; 255
    1f08:	80 81       	ld	r24, Z
    1f0a:	91 81       	ldd	r25, Z+1	; 0x01
    1f0c:	00 97       	sbiw	r24, 0x00	; 0
    1f0e:	d1 f6       	brne	.-76     	; 0x1ec4 <main+0xa3e>
    1f10:	27 c0       	rjmp	.+78     	; 0x1f60 <main+0xada>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1f12:	8e 01       	movw	r16, r28
    1f14:	0b 58       	subi	r16, 0x8B	; 139
    1f16:	1f 4f       	sbci	r17, 0xFF	; 255
    1f18:	fe 01       	movw	r30, r28
    1f1a:	e9 58       	subi	r30, 0x89	; 137
    1f1c:	ff 4f       	sbci	r31, 0xFF	; 255
    1f1e:	60 81       	ld	r22, Z
    1f20:	71 81       	ldd	r23, Z+1	; 0x01
    1f22:	82 81       	ldd	r24, Z+2	; 0x02
    1f24:	93 81       	ldd	r25, Z+3	; 0x03
    1f26:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1f2a:	dc 01       	movw	r26, r24
    1f2c:	cb 01       	movw	r24, r22
    1f2e:	f8 01       	movw	r30, r16
    1f30:	91 83       	std	Z+1, r25	; 0x01
    1f32:	80 83       	st	Z, r24
    1f34:	de 01       	movw	r26, r28
    1f36:	af 58       	subi	r26, 0x8F	; 143
    1f38:	bf 4f       	sbci	r27, 0xFF	; 255
    1f3a:	fe 01       	movw	r30, r28
    1f3c:	eb 58       	subi	r30, 0x8B	; 139
    1f3e:	ff 4f       	sbci	r31, 0xFF	; 255
    1f40:	80 81       	ld	r24, Z
    1f42:	91 81       	ldd	r25, Z+1	; 0x01
    1f44:	8d 93       	st	X+, r24
    1f46:	9c 93       	st	X, r25
    1f48:	fe 01       	movw	r30, r28
    1f4a:	ef 58       	subi	r30, 0x8F	; 143
    1f4c:	ff 4f       	sbci	r31, 0xFF	; 255
    1f4e:	80 81       	ld	r24, Z
    1f50:	91 81       	ldd	r25, Z+1	; 0x01
    1f52:	01 97       	sbiw	r24, 0x01	; 1
    1f54:	f1 f7       	brne	.-4      	; 0x1f52 <main+0xacc>
    1f56:	fe 01       	movw	r30, r28
    1f58:	ef 58       	subi	r30, 0x8F	; 143
    1f5a:	ff 4f       	sbci	r31, 0xFF	; 255
    1f5c:	91 83       	std	Z+1, r25	; 0x01
    1f5e:	80 83       	st	Z, r24
			_delay_ms(1000);
			setPinVAlue(DIO_PORTD,PIN3,OUTPUT_HIGH);
    1f60:	83 e0       	ldi	r24, 0x03	; 3
    1f62:	63 e0       	ldi	r22, 0x03	; 3
    1f64:	41 e0       	ldi	r20, 0x01	; 1
    1f66:	0e 94 aa 06 	call	0xd54	; 0xd54 <setPinVAlue>
			setPinVAlue(DIO_PORTA,PIN3,OUTPUT_HIGH);
    1f6a:	80 e0       	ldi	r24, 0x00	; 0
    1f6c:	63 e0       	ldi	r22, 0x03	; 3
    1f6e:	41 e0       	ldi	r20, 0x01	; 1
    1f70:	0e 94 aa 06 	call	0xd54	; 0xd54 <setPinVAlue>
    1f74:	fe 01       	movw	r30, r28
    1f76:	e3 59       	subi	r30, 0x93	; 147
    1f78:	ff 4f       	sbci	r31, 0xFF	; 255
    1f7a:	80 e0       	ldi	r24, 0x00	; 0
    1f7c:	90 e0       	ldi	r25, 0x00	; 0
    1f7e:	aa e7       	ldi	r26, 0x7A	; 122
    1f80:	b4 e4       	ldi	r27, 0x44	; 68
    1f82:	80 83       	st	Z, r24
    1f84:	91 83       	std	Z+1, r25	; 0x01
    1f86:	a2 83       	std	Z+2, r26	; 0x02
    1f88:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1f8a:	8e 01       	movw	r16, r28
    1f8c:	07 59       	subi	r16, 0x97	; 151
    1f8e:	1f 4f       	sbci	r17, 0xFF	; 255
    1f90:	fe 01       	movw	r30, r28
    1f92:	e3 59       	subi	r30, 0x93	; 147
    1f94:	ff 4f       	sbci	r31, 0xFF	; 255
    1f96:	60 81       	ld	r22, Z
    1f98:	71 81       	ldd	r23, Z+1	; 0x01
    1f9a:	82 81       	ldd	r24, Z+2	; 0x02
    1f9c:	93 81       	ldd	r25, Z+3	; 0x03
    1f9e:	20 e0       	ldi	r18, 0x00	; 0
    1fa0:	30 e0       	ldi	r19, 0x00	; 0
    1fa2:	4a e7       	ldi	r20, 0x7A	; 122
    1fa4:	55 e4       	ldi	r21, 0x45	; 69
    1fa6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1faa:	dc 01       	movw	r26, r24
    1fac:	cb 01       	movw	r24, r22
    1fae:	f8 01       	movw	r30, r16
    1fb0:	80 83       	st	Z, r24
    1fb2:	91 83       	std	Z+1, r25	; 0x01
    1fb4:	a2 83       	std	Z+2, r26	; 0x02
    1fb6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1fb8:	fe 01       	movw	r30, r28
    1fba:	e7 59       	subi	r30, 0x97	; 151
    1fbc:	ff 4f       	sbci	r31, 0xFF	; 255
    1fbe:	60 81       	ld	r22, Z
    1fc0:	71 81       	ldd	r23, Z+1	; 0x01
    1fc2:	82 81       	ldd	r24, Z+2	; 0x02
    1fc4:	93 81       	ldd	r25, Z+3	; 0x03
    1fc6:	20 e0       	ldi	r18, 0x00	; 0
    1fc8:	30 e0       	ldi	r19, 0x00	; 0
    1fca:	40 e8       	ldi	r20, 0x80	; 128
    1fcc:	5f e3       	ldi	r21, 0x3F	; 63
    1fce:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1fd2:	88 23       	and	r24, r24
    1fd4:	44 f4       	brge	.+16     	; 0x1fe6 <main+0xb60>
		__ticks = 1;
    1fd6:	fe 01       	movw	r30, r28
    1fd8:	e9 59       	subi	r30, 0x99	; 153
    1fda:	ff 4f       	sbci	r31, 0xFF	; 255
    1fdc:	81 e0       	ldi	r24, 0x01	; 1
    1fde:	90 e0       	ldi	r25, 0x00	; 0
    1fe0:	91 83       	std	Z+1, r25	; 0x01
    1fe2:	80 83       	st	Z, r24
    1fe4:	64 c0       	rjmp	.+200    	; 0x20ae <main+0xc28>
	else if (__tmp > 65535)
    1fe6:	fe 01       	movw	r30, r28
    1fe8:	e7 59       	subi	r30, 0x97	; 151
    1fea:	ff 4f       	sbci	r31, 0xFF	; 255
    1fec:	60 81       	ld	r22, Z
    1fee:	71 81       	ldd	r23, Z+1	; 0x01
    1ff0:	82 81       	ldd	r24, Z+2	; 0x02
    1ff2:	93 81       	ldd	r25, Z+3	; 0x03
    1ff4:	20 e0       	ldi	r18, 0x00	; 0
    1ff6:	3f ef       	ldi	r19, 0xFF	; 255
    1ff8:	4f e7       	ldi	r20, 0x7F	; 127
    1ffa:	57 e4       	ldi	r21, 0x47	; 71
    1ffc:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2000:	18 16       	cp	r1, r24
    2002:	0c f0       	brlt	.+2      	; 0x2006 <main+0xb80>
    2004:	43 c0       	rjmp	.+134    	; 0x208c <main+0xc06>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2006:	fe 01       	movw	r30, r28
    2008:	e3 59       	subi	r30, 0x93	; 147
    200a:	ff 4f       	sbci	r31, 0xFF	; 255
    200c:	60 81       	ld	r22, Z
    200e:	71 81       	ldd	r23, Z+1	; 0x01
    2010:	82 81       	ldd	r24, Z+2	; 0x02
    2012:	93 81       	ldd	r25, Z+3	; 0x03
    2014:	20 e0       	ldi	r18, 0x00	; 0
    2016:	30 e0       	ldi	r19, 0x00	; 0
    2018:	40 e2       	ldi	r20, 0x20	; 32
    201a:	51 e4       	ldi	r21, 0x41	; 65
    201c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2020:	dc 01       	movw	r26, r24
    2022:	cb 01       	movw	r24, r22
    2024:	8e 01       	movw	r16, r28
    2026:	09 59       	subi	r16, 0x99	; 153
    2028:	1f 4f       	sbci	r17, 0xFF	; 255
    202a:	bc 01       	movw	r22, r24
    202c:	cd 01       	movw	r24, r26
    202e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2032:	dc 01       	movw	r26, r24
    2034:	cb 01       	movw	r24, r22
    2036:	f8 01       	movw	r30, r16
    2038:	91 83       	std	Z+1, r25	; 0x01
    203a:	80 83       	st	Z, r24
    203c:	1f c0       	rjmp	.+62     	; 0x207c <main+0xbf6>
    203e:	fe 01       	movw	r30, r28
    2040:	eb 59       	subi	r30, 0x9B	; 155
    2042:	ff 4f       	sbci	r31, 0xFF	; 255
    2044:	80 e9       	ldi	r24, 0x90	; 144
    2046:	91 e0       	ldi	r25, 0x01	; 1
    2048:	91 83       	std	Z+1, r25	; 0x01
    204a:	80 83       	st	Z, r24
    204c:	fe 01       	movw	r30, r28
    204e:	eb 59       	subi	r30, 0x9B	; 155
    2050:	ff 4f       	sbci	r31, 0xFF	; 255
    2052:	80 81       	ld	r24, Z
    2054:	91 81       	ldd	r25, Z+1	; 0x01
    2056:	01 97       	sbiw	r24, 0x01	; 1
    2058:	f1 f7       	brne	.-4      	; 0x2056 <main+0xbd0>
    205a:	fe 01       	movw	r30, r28
    205c:	eb 59       	subi	r30, 0x9B	; 155
    205e:	ff 4f       	sbci	r31, 0xFF	; 255
    2060:	91 83       	std	Z+1, r25	; 0x01
    2062:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2064:	de 01       	movw	r26, r28
    2066:	a9 59       	subi	r26, 0x99	; 153
    2068:	bf 4f       	sbci	r27, 0xFF	; 255
    206a:	fe 01       	movw	r30, r28
    206c:	e9 59       	subi	r30, 0x99	; 153
    206e:	ff 4f       	sbci	r31, 0xFF	; 255
    2070:	80 81       	ld	r24, Z
    2072:	91 81       	ldd	r25, Z+1	; 0x01
    2074:	01 97       	sbiw	r24, 0x01	; 1
    2076:	11 96       	adiw	r26, 0x01	; 1
    2078:	9c 93       	st	X, r25
    207a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    207c:	fe 01       	movw	r30, r28
    207e:	e9 59       	subi	r30, 0x99	; 153
    2080:	ff 4f       	sbci	r31, 0xFF	; 255
    2082:	80 81       	ld	r24, Z
    2084:	91 81       	ldd	r25, Z+1	; 0x01
    2086:	00 97       	sbiw	r24, 0x00	; 0
    2088:	d1 f6       	brne	.-76     	; 0x203e <main+0xbb8>
    208a:	27 c0       	rjmp	.+78     	; 0x20da <main+0xc54>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    208c:	8e 01       	movw	r16, r28
    208e:	09 59       	subi	r16, 0x99	; 153
    2090:	1f 4f       	sbci	r17, 0xFF	; 255
    2092:	fe 01       	movw	r30, r28
    2094:	e7 59       	subi	r30, 0x97	; 151
    2096:	ff 4f       	sbci	r31, 0xFF	; 255
    2098:	60 81       	ld	r22, Z
    209a:	71 81       	ldd	r23, Z+1	; 0x01
    209c:	82 81       	ldd	r24, Z+2	; 0x02
    209e:	93 81       	ldd	r25, Z+3	; 0x03
    20a0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    20a4:	dc 01       	movw	r26, r24
    20a6:	cb 01       	movw	r24, r22
    20a8:	f8 01       	movw	r30, r16
    20aa:	91 83       	std	Z+1, r25	; 0x01
    20ac:	80 83       	st	Z, r24
    20ae:	de 01       	movw	r26, r28
    20b0:	ad 59       	subi	r26, 0x9D	; 157
    20b2:	bf 4f       	sbci	r27, 0xFF	; 255
    20b4:	fe 01       	movw	r30, r28
    20b6:	e9 59       	subi	r30, 0x99	; 153
    20b8:	ff 4f       	sbci	r31, 0xFF	; 255
    20ba:	80 81       	ld	r24, Z
    20bc:	91 81       	ldd	r25, Z+1	; 0x01
    20be:	8d 93       	st	X+, r24
    20c0:	9c 93       	st	X, r25
    20c2:	fe 01       	movw	r30, r28
    20c4:	ed 59       	subi	r30, 0x9D	; 157
    20c6:	ff 4f       	sbci	r31, 0xFF	; 255
    20c8:	80 81       	ld	r24, Z
    20ca:	91 81       	ldd	r25, Z+1	; 0x01
    20cc:	01 97       	sbiw	r24, 0x01	; 1
    20ce:	f1 f7       	brne	.-4      	; 0x20cc <main+0xc46>
    20d0:	fe 01       	movw	r30, r28
    20d2:	ed 59       	subi	r30, 0x9D	; 157
    20d4:	ff 4f       	sbci	r31, 0xFF	; 255
    20d6:	91 83       	std	Z+1, r25	; 0x01
    20d8:	80 83       	st	Z, r24
			_delay_ms(1000);
			setPinVAlue(DIO_PORTD,PIN3,OUTPUT_LOW);
    20da:	83 e0       	ldi	r24, 0x03	; 3
    20dc:	63 e0       	ldi	r22, 0x03	; 3
    20de:	40 e0       	ldi	r20, 0x00	; 0
    20e0:	0e 94 aa 06 	call	0xd54	; 0xd54 <setPinVAlue>
			setPinVAlue(DIO_PORTA,PIN3,OUTPUT_LOW);
    20e4:	80 e0       	ldi	r24, 0x00	; 0
    20e6:	63 e0       	ldi	r22, 0x03	; 3
    20e8:	40 e0       	ldi	r20, 0x00	; 0
    20ea:	0e 94 aa 06 	call	0xd54	; 0xd54 <setPinVAlue>
    20ee:	0b ca       	rjmp	.-3050   	; 0x1506 <main+0x80>
		}
		else if (1 == Button2_Value) //print binary from 0 to 7
    20f0:	fe 01       	movw	r30, r28
    20f2:	eb 52       	subi	r30, 0x2B	; 43
    20f4:	ff 4f       	sbci	r31, 0xFF	; 255
    20f6:	80 81       	ld	r24, Z
    20f8:	81 30       	cpi	r24, 0x01	; 1
    20fa:	09 f0       	breq	.+2      	; 0x20fe <main+0xc78>
    20fc:	fc c0       	rjmp	.+504    	; 0x22f6 <main+0xe70>
		{
			for(i=0;i<8;i++)
    20fe:	fe 01       	movw	r30, r28
    2100:	ed 52       	subi	r30, 0x2D	; 45
    2102:	ff 4f       	sbci	r31, 0xFF	; 255
    2104:	10 82       	st	Z, r1
    2106:	e0 c0       	rjmp	.+448    	; 0x22c8 <main+0xe42>
			{
				setPinVAlue(DIO_PORTC,PIN2,GETBIT(i,0));
    2108:	fe 01       	movw	r30, r28
    210a:	ed 52       	subi	r30, 0x2D	; 45
    210c:	ff 4f       	sbci	r31, 0xFF	; 255
    210e:	80 81       	ld	r24, Z
    2110:	98 2f       	mov	r25, r24
    2112:	91 70       	andi	r25, 0x01	; 1
    2114:	82 e0       	ldi	r24, 0x02	; 2
    2116:	62 e0       	ldi	r22, 0x02	; 2
    2118:	49 2f       	mov	r20, r25
    211a:	0e 94 aa 06 	call	0xd54	; 0xd54 <setPinVAlue>
				setPinVAlue(DIO_PORTC,PIN7,GETBIT(i,1));
    211e:	fe 01       	movw	r30, r28
    2120:	ed 52       	subi	r30, 0x2D	; 45
    2122:	ff 4f       	sbci	r31, 0xFF	; 255
    2124:	80 81       	ld	r24, Z
    2126:	86 95       	lsr	r24
    2128:	98 2f       	mov	r25, r24
    212a:	91 70       	andi	r25, 0x01	; 1
    212c:	82 e0       	ldi	r24, 0x02	; 2
    212e:	67 e0       	ldi	r22, 0x07	; 7
    2130:	49 2f       	mov	r20, r25
    2132:	0e 94 aa 06 	call	0xd54	; 0xd54 <setPinVAlue>
				setPinVAlue(DIO_PORTD,PIN3,GETBIT(i,2));
    2136:	fe 01       	movw	r30, r28
    2138:	ed 52       	subi	r30, 0x2D	; 45
    213a:	ff 4f       	sbci	r31, 0xFF	; 255
    213c:	80 81       	ld	r24, Z
    213e:	86 95       	lsr	r24
    2140:	86 95       	lsr	r24
    2142:	98 2f       	mov	r25, r24
    2144:	91 70       	andi	r25, 0x01	; 1
    2146:	83 e0       	ldi	r24, 0x03	; 3
    2148:	63 e0       	ldi	r22, 0x03	; 3
    214a:	49 2f       	mov	r20, r25
    214c:	0e 94 aa 06 	call	0xd54	; 0xd54 <setPinVAlue>
    2150:	fe 01       	movw	r30, r28
    2152:	e1 5a       	subi	r30, 0xA1	; 161
    2154:	ff 4f       	sbci	r31, 0xFF	; 255
    2156:	80 e0       	ldi	r24, 0x00	; 0
    2158:	90 e0       	ldi	r25, 0x00	; 0
    215a:	aa e7       	ldi	r26, 0x7A	; 122
    215c:	b4 e4       	ldi	r27, 0x44	; 68
    215e:	80 83       	st	Z, r24
    2160:	91 83       	std	Z+1, r25	; 0x01
    2162:	a2 83       	std	Z+2, r26	; 0x02
    2164:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2166:	8e 01       	movw	r16, r28
    2168:	05 5a       	subi	r16, 0xA5	; 165
    216a:	1f 4f       	sbci	r17, 0xFF	; 255
    216c:	fe 01       	movw	r30, r28
    216e:	e1 5a       	subi	r30, 0xA1	; 161
    2170:	ff 4f       	sbci	r31, 0xFF	; 255
    2172:	60 81       	ld	r22, Z
    2174:	71 81       	ldd	r23, Z+1	; 0x01
    2176:	82 81       	ldd	r24, Z+2	; 0x02
    2178:	93 81       	ldd	r25, Z+3	; 0x03
    217a:	20 e0       	ldi	r18, 0x00	; 0
    217c:	30 e0       	ldi	r19, 0x00	; 0
    217e:	4a e7       	ldi	r20, 0x7A	; 122
    2180:	55 e4       	ldi	r21, 0x45	; 69
    2182:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2186:	dc 01       	movw	r26, r24
    2188:	cb 01       	movw	r24, r22
    218a:	f8 01       	movw	r30, r16
    218c:	80 83       	st	Z, r24
    218e:	91 83       	std	Z+1, r25	; 0x01
    2190:	a2 83       	std	Z+2, r26	; 0x02
    2192:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2194:	fe 01       	movw	r30, r28
    2196:	e5 5a       	subi	r30, 0xA5	; 165
    2198:	ff 4f       	sbci	r31, 0xFF	; 255
    219a:	60 81       	ld	r22, Z
    219c:	71 81       	ldd	r23, Z+1	; 0x01
    219e:	82 81       	ldd	r24, Z+2	; 0x02
    21a0:	93 81       	ldd	r25, Z+3	; 0x03
    21a2:	20 e0       	ldi	r18, 0x00	; 0
    21a4:	30 e0       	ldi	r19, 0x00	; 0
    21a6:	40 e8       	ldi	r20, 0x80	; 128
    21a8:	5f e3       	ldi	r21, 0x3F	; 63
    21aa:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    21ae:	88 23       	and	r24, r24
    21b0:	44 f4       	brge	.+16     	; 0x21c2 <main+0xd3c>
		__ticks = 1;
    21b2:	fe 01       	movw	r30, r28
    21b4:	e7 5a       	subi	r30, 0xA7	; 167
    21b6:	ff 4f       	sbci	r31, 0xFF	; 255
    21b8:	81 e0       	ldi	r24, 0x01	; 1
    21ba:	90 e0       	ldi	r25, 0x00	; 0
    21bc:	91 83       	std	Z+1, r25	; 0x01
    21be:	80 83       	st	Z, r24
    21c0:	64 c0       	rjmp	.+200    	; 0x228a <main+0xe04>
	else if (__tmp > 65535)
    21c2:	fe 01       	movw	r30, r28
    21c4:	e5 5a       	subi	r30, 0xA5	; 165
    21c6:	ff 4f       	sbci	r31, 0xFF	; 255
    21c8:	60 81       	ld	r22, Z
    21ca:	71 81       	ldd	r23, Z+1	; 0x01
    21cc:	82 81       	ldd	r24, Z+2	; 0x02
    21ce:	93 81       	ldd	r25, Z+3	; 0x03
    21d0:	20 e0       	ldi	r18, 0x00	; 0
    21d2:	3f ef       	ldi	r19, 0xFF	; 255
    21d4:	4f e7       	ldi	r20, 0x7F	; 127
    21d6:	57 e4       	ldi	r21, 0x47	; 71
    21d8:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    21dc:	18 16       	cp	r1, r24
    21de:	0c f0       	brlt	.+2      	; 0x21e2 <main+0xd5c>
    21e0:	43 c0       	rjmp	.+134    	; 0x2268 <main+0xde2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    21e2:	fe 01       	movw	r30, r28
    21e4:	e1 5a       	subi	r30, 0xA1	; 161
    21e6:	ff 4f       	sbci	r31, 0xFF	; 255
    21e8:	60 81       	ld	r22, Z
    21ea:	71 81       	ldd	r23, Z+1	; 0x01
    21ec:	82 81       	ldd	r24, Z+2	; 0x02
    21ee:	93 81       	ldd	r25, Z+3	; 0x03
    21f0:	20 e0       	ldi	r18, 0x00	; 0
    21f2:	30 e0       	ldi	r19, 0x00	; 0
    21f4:	40 e2       	ldi	r20, 0x20	; 32
    21f6:	51 e4       	ldi	r21, 0x41	; 65
    21f8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    21fc:	dc 01       	movw	r26, r24
    21fe:	cb 01       	movw	r24, r22
    2200:	8e 01       	movw	r16, r28
    2202:	07 5a       	subi	r16, 0xA7	; 167
    2204:	1f 4f       	sbci	r17, 0xFF	; 255
    2206:	bc 01       	movw	r22, r24
    2208:	cd 01       	movw	r24, r26
    220a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    220e:	dc 01       	movw	r26, r24
    2210:	cb 01       	movw	r24, r22
    2212:	f8 01       	movw	r30, r16
    2214:	91 83       	std	Z+1, r25	; 0x01
    2216:	80 83       	st	Z, r24
    2218:	1f c0       	rjmp	.+62     	; 0x2258 <main+0xdd2>
    221a:	fe 01       	movw	r30, r28
    221c:	e9 5a       	subi	r30, 0xA9	; 169
    221e:	ff 4f       	sbci	r31, 0xFF	; 255
    2220:	80 e9       	ldi	r24, 0x90	; 144
    2222:	91 e0       	ldi	r25, 0x01	; 1
    2224:	91 83       	std	Z+1, r25	; 0x01
    2226:	80 83       	st	Z, r24
    2228:	fe 01       	movw	r30, r28
    222a:	e9 5a       	subi	r30, 0xA9	; 169
    222c:	ff 4f       	sbci	r31, 0xFF	; 255
    222e:	80 81       	ld	r24, Z
    2230:	91 81       	ldd	r25, Z+1	; 0x01
    2232:	01 97       	sbiw	r24, 0x01	; 1
    2234:	f1 f7       	brne	.-4      	; 0x2232 <main+0xdac>
    2236:	fe 01       	movw	r30, r28
    2238:	e9 5a       	subi	r30, 0xA9	; 169
    223a:	ff 4f       	sbci	r31, 0xFF	; 255
    223c:	91 83       	std	Z+1, r25	; 0x01
    223e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2240:	de 01       	movw	r26, r28
    2242:	a7 5a       	subi	r26, 0xA7	; 167
    2244:	bf 4f       	sbci	r27, 0xFF	; 255
    2246:	fe 01       	movw	r30, r28
    2248:	e7 5a       	subi	r30, 0xA7	; 167
    224a:	ff 4f       	sbci	r31, 0xFF	; 255
    224c:	80 81       	ld	r24, Z
    224e:	91 81       	ldd	r25, Z+1	; 0x01
    2250:	01 97       	sbiw	r24, 0x01	; 1
    2252:	11 96       	adiw	r26, 0x01	; 1
    2254:	9c 93       	st	X, r25
    2256:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2258:	fe 01       	movw	r30, r28
    225a:	e7 5a       	subi	r30, 0xA7	; 167
    225c:	ff 4f       	sbci	r31, 0xFF	; 255
    225e:	80 81       	ld	r24, Z
    2260:	91 81       	ldd	r25, Z+1	; 0x01
    2262:	00 97       	sbiw	r24, 0x00	; 0
    2264:	d1 f6       	brne	.-76     	; 0x221a <main+0xd94>
    2266:	27 c0       	rjmp	.+78     	; 0x22b6 <main+0xe30>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2268:	8e 01       	movw	r16, r28
    226a:	07 5a       	subi	r16, 0xA7	; 167
    226c:	1f 4f       	sbci	r17, 0xFF	; 255
    226e:	fe 01       	movw	r30, r28
    2270:	e5 5a       	subi	r30, 0xA5	; 165
    2272:	ff 4f       	sbci	r31, 0xFF	; 255
    2274:	60 81       	ld	r22, Z
    2276:	71 81       	ldd	r23, Z+1	; 0x01
    2278:	82 81       	ldd	r24, Z+2	; 0x02
    227a:	93 81       	ldd	r25, Z+3	; 0x03
    227c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2280:	dc 01       	movw	r26, r24
    2282:	cb 01       	movw	r24, r22
    2284:	f8 01       	movw	r30, r16
    2286:	91 83       	std	Z+1, r25	; 0x01
    2288:	80 83       	st	Z, r24
    228a:	de 01       	movw	r26, r28
    228c:	ab 5a       	subi	r26, 0xAB	; 171
    228e:	bf 4f       	sbci	r27, 0xFF	; 255
    2290:	fe 01       	movw	r30, r28
    2292:	e7 5a       	subi	r30, 0xA7	; 167
    2294:	ff 4f       	sbci	r31, 0xFF	; 255
    2296:	80 81       	ld	r24, Z
    2298:	91 81       	ldd	r25, Z+1	; 0x01
    229a:	8d 93       	st	X+, r24
    229c:	9c 93       	st	X, r25
    229e:	fe 01       	movw	r30, r28
    22a0:	eb 5a       	subi	r30, 0xAB	; 171
    22a2:	ff 4f       	sbci	r31, 0xFF	; 255
    22a4:	80 81       	ld	r24, Z
    22a6:	91 81       	ldd	r25, Z+1	; 0x01
    22a8:	01 97       	sbiw	r24, 0x01	; 1
    22aa:	f1 f7       	brne	.-4      	; 0x22a8 <main+0xe22>
    22ac:	fe 01       	movw	r30, r28
    22ae:	eb 5a       	subi	r30, 0xAB	; 171
    22b0:	ff 4f       	sbci	r31, 0xFF	; 255
    22b2:	91 83       	std	Z+1, r25	; 0x01
    22b4:	80 83       	st	Z, r24
			setPinVAlue(DIO_PORTD,PIN3,OUTPUT_LOW);
			setPinVAlue(DIO_PORTA,PIN3,OUTPUT_LOW);
		}
		else if (1 == Button2_Value) //print binary from 0 to 7
		{
			for(i=0;i<8;i++)
    22b6:	de 01       	movw	r26, r28
    22b8:	ad 52       	subi	r26, 0x2D	; 45
    22ba:	bf 4f       	sbci	r27, 0xFF	; 255
    22bc:	fe 01       	movw	r30, r28
    22be:	ed 52       	subi	r30, 0x2D	; 45
    22c0:	ff 4f       	sbci	r31, 0xFF	; 255
    22c2:	80 81       	ld	r24, Z
    22c4:	8f 5f       	subi	r24, 0xFF	; 255
    22c6:	8c 93       	st	X, r24
    22c8:	fe 01       	movw	r30, r28
    22ca:	ed 52       	subi	r30, 0x2D	; 45
    22cc:	ff 4f       	sbci	r31, 0xFF	; 255
    22ce:	80 81       	ld	r24, Z
    22d0:	88 30       	cpi	r24, 0x08	; 8
    22d2:	08 f4       	brcc	.+2      	; 0x22d6 <main+0xe50>
    22d4:	19 cf       	rjmp	.-462    	; 0x2108 <main+0xc82>
				setPinVAlue(DIO_PORTC,PIN7,GETBIT(i,1));
				setPinVAlue(DIO_PORTD,PIN3,GETBIT(i,2));

				_delay_ms(1000);
			}
			setPinVAlue(DIO_PORTC,PIN2,OUTPUT_LOW);
    22d6:	82 e0       	ldi	r24, 0x02	; 2
    22d8:	62 e0       	ldi	r22, 0x02	; 2
    22da:	40 e0       	ldi	r20, 0x00	; 0
    22dc:	0e 94 aa 06 	call	0xd54	; 0xd54 <setPinVAlue>
			setPinVAlue(DIO_PORTC,PIN7,OUTPUT_LOW);
    22e0:	82 e0       	ldi	r24, 0x02	; 2
    22e2:	67 e0       	ldi	r22, 0x07	; 7
    22e4:	40 e0       	ldi	r20, 0x00	; 0
    22e6:	0e 94 aa 06 	call	0xd54	; 0xd54 <setPinVAlue>
			setPinVAlue(DIO_PORTD,PIN3,OUTPUT_LOW);
    22ea:	83 e0       	ldi	r24, 0x03	; 3
    22ec:	63 e0       	ldi	r22, 0x03	; 3
    22ee:	40 e0       	ldi	r20, 0x00	; 0
    22f0:	0e 94 aa 06 	call	0xd54	; 0xd54 <setPinVAlue>
    22f4:	08 c9       	rjmp	.-3568   	; 0x1506 <main+0x80>

		}
		else if(1==Button3_Value)
    22f6:	fe 01       	movw	r30, r28
    22f8:	ea 52       	subi	r30, 0x2A	; 42
    22fa:	ff 4f       	sbci	r31, 0xFF	; 255
    22fc:	80 81       	ld	r24, Z
    22fe:	81 30       	cpi	r24, 0x01	; 1
    2300:	09 f0       	breq	.+2      	; 0x2304 <main+0xe7e>
    2302:	01 c9       	rjmp	.-3582   	; 0x1506 <main+0x80>
		{
			for(i=1;i<=12;i++)
    2304:	fe 01       	movw	r30, r28
    2306:	ed 52       	subi	r30, 0x2D	; 45
    2308:	ff 4f       	sbci	r31, 0xFF	; 255
    230a:	81 e0       	ldi	r24, 0x01	; 1
    230c:	80 83       	st	Z, r24
    230e:	7b c3       	rjmp	.+1782   	; 0x2a06 <main+0x1580>
			{ if(i==1||i==9)
    2310:	fe 01       	movw	r30, r28
    2312:	ed 52       	subi	r30, 0x2D	; 45
    2314:	ff 4f       	sbci	r31, 0xFF	; 255
    2316:	80 81       	ld	r24, Z
    2318:	81 30       	cpi	r24, 0x01	; 1
    231a:	39 f0       	breq	.+14     	; 0x232a <main+0xea4>
    231c:	fe 01       	movw	r30, r28
    231e:	ed 52       	subi	r30, 0x2D	; 45
    2320:	ff 4f       	sbci	r31, 0xFF	; 255
    2322:	80 81       	ld	r24, Z
    2324:	89 30       	cpi	r24, 0x09	; 9
    2326:	09 f0       	breq	.+2      	; 0x232a <main+0xea4>
    2328:	ba c0       	rjmp	.+372    	; 0x249e <main+0x1018>
				{
					setPinVAlue(DIO_PORTC,PIN2,OUTPUT_HIGH);
    232a:	82 e0       	ldi	r24, 0x02	; 2
    232c:	62 e0       	ldi	r22, 0x02	; 2
    232e:	41 e0       	ldi	r20, 0x01	; 1
    2330:	0e 94 aa 06 	call	0xd54	; 0xd54 <setPinVAlue>
    2334:	fe 01       	movw	r30, r28
    2336:	ef 5a       	subi	r30, 0xAF	; 175
    2338:	ff 4f       	sbci	r31, 0xFF	; 255
    233a:	80 e0       	ldi	r24, 0x00	; 0
    233c:	90 e0       	ldi	r25, 0x00	; 0
    233e:	aa e7       	ldi	r26, 0x7A	; 122
    2340:	b4 e4       	ldi	r27, 0x44	; 68
    2342:	80 83       	st	Z, r24
    2344:	91 83       	std	Z+1, r25	; 0x01
    2346:	a2 83       	std	Z+2, r26	; 0x02
    2348:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    234a:	8e 01       	movw	r16, r28
    234c:	03 5b       	subi	r16, 0xB3	; 179
    234e:	1f 4f       	sbci	r17, 0xFF	; 255
    2350:	fe 01       	movw	r30, r28
    2352:	ef 5a       	subi	r30, 0xAF	; 175
    2354:	ff 4f       	sbci	r31, 0xFF	; 255
    2356:	60 81       	ld	r22, Z
    2358:	71 81       	ldd	r23, Z+1	; 0x01
    235a:	82 81       	ldd	r24, Z+2	; 0x02
    235c:	93 81       	ldd	r25, Z+3	; 0x03
    235e:	20 e0       	ldi	r18, 0x00	; 0
    2360:	30 e0       	ldi	r19, 0x00	; 0
    2362:	4a e7       	ldi	r20, 0x7A	; 122
    2364:	55 e4       	ldi	r21, 0x45	; 69
    2366:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    236a:	dc 01       	movw	r26, r24
    236c:	cb 01       	movw	r24, r22
    236e:	f8 01       	movw	r30, r16
    2370:	80 83       	st	Z, r24
    2372:	91 83       	std	Z+1, r25	; 0x01
    2374:	a2 83       	std	Z+2, r26	; 0x02
    2376:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2378:	fe 01       	movw	r30, r28
    237a:	e3 5b       	subi	r30, 0xB3	; 179
    237c:	ff 4f       	sbci	r31, 0xFF	; 255
    237e:	60 81       	ld	r22, Z
    2380:	71 81       	ldd	r23, Z+1	; 0x01
    2382:	82 81       	ldd	r24, Z+2	; 0x02
    2384:	93 81       	ldd	r25, Z+3	; 0x03
    2386:	20 e0       	ldi	r18, 0x00	; 0
    2388:	30 e0       	ldi	r19, 0x00	; 0
    238a:	40 e8       	ldi	r20, 0x80	; 128
    238c:	5f e3       	ldi	r21, 0x3F	; 63
    238e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2392:	88 23       	and	r24, r24
    2394:	44 f4       	brge	.+16     	; 0x23a6 <main+0xf20>
		__ticks = 1;
    2396:	fe 01       	movw	r30, r28
    2398:	e5 5b       	subi	r30, 0xB5	; 181
    239a:	ff 4f       	sbci	r31, 0xFF	; 255
    239c:	81 e0       	ldi	r24, 0x01	; 1
    239e:	90 e0       	ldi	r25, 0x00	; 0
    23a0:	91 83       	std	Z+1, r25	; 0x01
    23a2:	80 83       	st	Z, r24
    23a4:	64 c0       	rjmp	.+200    	; 0x246e <main+0xfe8>
	else if (__tmp > 65535)
    23a6:	fe 01       	movw	r30, r28
    23a8:	e3 5b       	subi	r30, 0xB3	; 179
    23aa:	ff 4f       	sbci	r31, 0xFF	; 255
    23ac:	60 81       	ld	r22, Z
    23ae:	71 81       	ldd	r23, Z+1	; 0x01
    23b0:	82 81       	ldd	r24, Z+2	; 0x02
    23b2:	93 81       	ldd	r25, Z+3	; 0x03
    23b4:	20 e0       	ldi	r18, 0x00	; 0
    23b6:	3f ef       	ldi	r19, 0xFF	; 255
    23b8:	4f e7       	ldi	r20, 0x7F	; 127
    23ba:	57 e4       	ldi	r21, 0x47	; 71
    23bc:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    23c0:	18 16       	cp	r1, r24
    23c2:	0c f0       	brlt	.+2      	; 0x23c6 <main+0xf40>
    23c4:	43 c0       	rjmp	.+134    	; 0x244c <main+0xfc6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    23c6:	fe 01       	movw	r30, r28
    23c8:	ef 5a       	subi	r30, 0xAF	; 175
    23ca:	ff 4f       	sbci	r31, 0xFF	; 255
    23cc:	60 81       	ld	r22, Z
    23ce:	71 81       	ldd	r23, Z+1	; 0x01
    23d0:	82 81       	ldd	r24, Z+2	; 0x02
    23d2:	93 81       	ldd	r25, Z+3	; 0x03
    23d4:	20 e0       	ldi	r18, 0x00	; 0
    23d6:	30 e0       	ldi	r19, 0x00	; 0
    23d8:	40 e2       	ldi	r20, 0x20	; 32
    23da:	51 e4       	ldi	r21, 0x41	; 65
    23dc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    23e0:	dc 01       	movw	r26, r24
    23e2:	cb 01       	movw	r24, r22
    23e4:	8e 01       	movw	r16, r28
    23e6:	05 5b       	subi	r16, 0xB5	; 181
    23e8:	1f 4f       	sbci	r17, 0xFF	; 255
    23ea:	bc 01       	movw	r22, r24
    23ec:	cd 01       	movw	r24, r26
    23ee:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    23f2:	dc 01       	movw	r26, r24
    23f4:	cb 01       	movw	r24, r22
    23f6:	f8 01       	movw	r30, r16
    23f8:	91 83       	std	Z+1, r25	; 0x01
    23fa:	80 83       	st	Z, r24
    23fc:	1f c0       	rjmp	.+62     	; 0x243c <main+0xfb6>
    23fe:	fe 01       	movw	r30, r28
    2400:	e7 5b       	subi	r30, 0xB7	; 183
    2402:	ff 4f       	sbci	r31, 0xFF	; 255
    2404:	80 e9       	ldi	r24, 0x90	; 144
    2406:	91 e0       	ldi	r25, 0x01	; 1
    2408:	91 83       	std	Z+1, r25	; 0x01
    240a:	80 83       	st	Z, r24
    240c:	fe 01       	movw	r30, r28
    240e:	e7 5b       	subi	r30, 0xB7	; 183
    2410:	ff 4f       	sbci	r31, 0xFF	; 255
    2412:	80 81       	ld	r24, Z
    2414:	91 81       	ldd	r25, Z+1	; 0x01
    2416:	01 97       	sbiw	r24, 0x01	; 1
    2418:	f1 f7       	brne	.-4      	; 0x2416 <main+0xf90>
    241a:	fe 01       	movw	r30, r28
    241c:	e7 5b       	subi	r30, 0xB7	; 183
    241e:	ff 4f       	sbci	r31, 0xFF	; 255
    2420:	91 83       	std	Z+1, r25	; 0x01
    2422:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2424:	de 01       	movw	r26, r28
    2426:	a5 5b       	subi	r26, 0xB5	; 181
    2428:	bf 4f       	sbci	r27, 0xFF	; 255
    242a:	fe 01       	movw	r30, r28
    242c:	e5 5b       	subi	r30, 0xB5	; 181
    242e:	ff 4f       	sbci	r31, 0xFF	; 255
    2430:	80 81       	ld	r24, Z
    2432:	91 81       	ldd	r25, Z+1	; 0x01
    2434:	01 97       	sbiw	r24, 0x01	; 1
    2436:	11 96       	adiw	r26, 0x01	; 1
    2438:	9c 93       	st	X, r25
    243a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    243c:	fe 01       	movw	r30, r28
    243e:	e5 5b       	subi	r30, 0xB5	; 181
    2440:	ff 4f       	sbci	r31, 0xFF	; 255
    2442:	80 81       	ld	r24, Z
    2444:	91 81       	ldd	r25, Z+1	; 0x01
    2446:	00 97       	sbiw	r24, 0x00	; 0
    2448:	d1 f6       	brne	.-76     	; 0x23fe <main+0xf78>
    244a:	d4 c2       	rjmp	.+1448   	; 0x29f4 <main+0x156e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    244c:	8e 01       	movw	r16, r28
    244e:	05 5b       	subi	r16, 0xB5	; 181
    2450:	1f 4f       	sbci	r17, 0xFF	; 255
    2452:	fe 01       	movw	r30, r28
    2454:	e3 5b       	subi	r30, 0xB3	; 179
    2456:	ff 4f       	sbci	r31, 0xFF	; 255
    2458:	60 81       	ld	r22, Z
    245a:	71 81       	ldd	r23, Z+1	; 0x01
    245c:	82 81       	ldd	r24, Z+2	; 0x02
    245e:	93 81       	ldd	r25, Z+3	; 0x03
    2460:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2464:	dc 01       	movw	r26, r24
    2466:	cb 01       	movw	r24, r22
    2468:	f8 01       	movw	r30, r16
    246a:	91 83       	std	Z+1, r25	; 0x01
    246c:	80 83       	st	Z, r24
    246e:	de 01       	movw	r26, r28
    2470:	a9 5b       	subi	r26, 0xB9	; 185
    2472:	bf 4f       	sbci	r27, 0xFF	; 255
    2474:	fe 01       	movw	r30, r28
    2476:	e5 5b       	subi	r30, 0xB5	; 181
    2478:	ff 4f       	sbci	r31, 0xFF	; 255
    247a:	80 81       	ld	r24, Z
    247c:	91 81       	ldd	r25, Z+1	; 0x01
    247e:	11 96       	adiw	r26, 0x01	; 1
    2480:	9c 93       	st	X, r25
    2482:	8e 93       	st	-X, r24
    2484:	fe 01       	movw	r30, r28
    2486:	e9 5b       	subi	r30, 0xB9	; 185
    2488:	ff 4f       	sbci	r31, 0xFF	; 255
    248a:	80 81       	ld	r24, Z
    248c:	91 81       	ldd	r25, Z+1	; 0x01
    248e:	01 97       	sbiw	r24, 0x01	; 1
    2490:	f1 f7       	brne	.-4      	; 0x248e <main+0x1008>
    2492:	fe 01       	movw	r30, r28
    2494:	e9 5b       	subi	r30, 0xB9	; 185
    2496:	ff 4f       	sbci	r31, 0xFF	; 255
    2498:	91 83       	std	Z+1, r25	; 0x01
    249a:	80 83       	st	Z, r24
    249c:	ab c2       	rjmp	.+1366   	; 0x29f4 <main+0x156e>
					_delay_ms(1000);

				}
			else if(i==2||i==8)
    249e:	fe 01       	movw	r30, r28
    24a0:	ed 52       	subi	r30, 0x2D	; 45
    24a2:	ff 4f       	sbci	r31, 0xFF	; 255
    24a4:	80 81       	ld	r24, Z
    24a6:	82 30       	cpi	r24, 0x02	; 2
    24a8:	39 f0       	breq	.+14     	; 0x24b8 <main+0x1032>
    24aa:	fe 01       	movw	r30, r28
    24ac:	ed 52       	subi	r30, 0x2D	; 45
    24ae:	ff 4f       	sbci	r31, 0xFF	; 255
    24b0:	80 81       	ld	r24, Z
    24b2:	88 30       	cpi	r24, 0x08	; 8
    24b4:	09 f0       	breq	.+2      	; 0x24b8 <main+0x1032>
    24b6:	8b c0       	rjmp	.+278    	; 0x25ce <main+0x1148>
			{
				setPinVAlue(DIO_PORTC,PIN7,OUTPUT_HIGH);
    24b8:	82 e0       	ldi	r24, 0x02	; 2
    24ba:	67 e0       	ldi	r22, 0x07	; 7
    24bc:	41 e0       	ldi	r20, 0x01	; 1
    24be:	0e 94 aa 06 	call	0xd54	; 0xd54 <setPinVAlue>
    24c2:	fe 01       	movw	r30, r28
    24c4:	ed 5b       	subi	r30, 0xBD	; 189
    24c6:	ff 4f       	sbci	r31, 0xFF	; 255
    24c8:	80 e0       	ldi	r24, 0x00	; 0
    24ca:	90 e0       	ldi	r25, 0x00	; 0
    24cc:	aa e7       	ldi	r26, 0x7A	; 122
    24ce:	b4 e4       	ldi	r27, 0x44	; 68
    24d0:	80 83       	st	Z, r24
    24d2:	91 83       	std	Z+1, r25	; 0x01
    24d4:	a2 83       	std	Z+2, r26	; 0x02
    24d6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    24d8:	8e 01       	movw	r16, r28
    24da:	01 5c       	subi	r16, 0xC1	; 193
    24dc:	1f 4f       	sbci	r17, 0xFF	; 255
    24de:	fe 01       	movw	r30, r28
    24e0:	ed 5b       	subi	r30, 0xBD	; 189
    24e2:	ff 4f       	sbci	r31, 0xFF	; 255
    24e4:	60 81       	ld	r22, Z
    24e6:	71 81       	ldd	r23, Z+1	; 0x01
    24e8:	82 81       	ldd	r24, Z+2	; 0x02
    24ea:	93 81       	ldd	r25, Z+3	; 0x03
    24ec:	20 e0       	ldi	r18, 0x00	; 0
    24ee:	30 e0       	ldi	r19, 0x00	; 0
    24f0:	4a e7       	ldi	r20, 0x7A	; 122
    24f2:	55 e4       	ldi	r21, 0x45	; 69
    24f4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    24f8:	dc 01       	movw	r26, r24
    24fa:	cb 01       	movw	r24, r22
    24fc:	f8 01       	movw	r30, r16
    24fe:	80 83       	st	Z, r24
    2500:	91 83       	std	Z+1, r25	; 0x01
    2502:	a2 83       	std	Z+2, r26	; 0x02
    2504:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2506:	fe 01       	movw	r30, r28
    2508:	ff 96       	adiw	r30, 0x3f	; 63
    250a:	60 81       	ld	r22, Z
    250c:	71 81       	ldd	r23, Z+1	; 0x01
    250e:	82 81       	ldd	r24, Z+2	; 0x02
    2510:	93 81       	ldd	r25, Z+3	; 0x03
    2512:	20 e0       	ldi	r18, 0x00	; 0
    2514:	30 e0       	ldi	r19, 0x00	; 0
    2516:	40 e8       	ldi	r20, 0x80	; 128
    2518:	5f e3       	ldi	r21, 0x3F	; 63
    251a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    251e:	88 23       	and	r24, r24
    2520:	2c f4       	brge	.+10     	; 0x252c <main+0x10a6>
		__ticks = 1;
    2522:	81 e0       	ldi	r24, 0x01	; 1
    2524:	90 e0       	ldi	r25, 0x00	; 0
    2526:	9e af       	std	Y+62, r25	; 0x3e
    2528:	8d af       	std	Y+61, r24	; 0x3d
    252a:	46 c0       	rjmp	.+140    	; 0x25b8 <main+0x1132>
	else if (__tmp > 65535)
    252c:	fe 01       	movw	r30, r28
    252e:	ff 96       	adiw	r30, 0x3f	; 63
    2530:	60 81       	ld	r22, Z
    2532:	71 81       	ldd	r23, Z+1	; 0x01
    2534:	82 81       	ldd	r24, Z+2	; 0x02
    2536:	93 81       	ldd	r25, Z+3	; 0x03
    2538:	20 e0       	ldi	r18, 0x00	; 0
    253a:	3f ef       	ldi	r19, 0xFF	; 255
    253c:	4f e7       	ldi	r20, 0x7F	; 127
    253e:	57 e4       	ldi	r21, 0x47	; 71
    2540:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2544:	18 16       	cp	r1, r24
    2546:	64 f5       	brge	.+88     	; 0x25a0 <main+0x111a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2548:	fe 01       	movw	r30, r28
    254a:	ed 5b       	subi	r30, 0xBD	; 189
    254c:	ff 4f       	sbci	r31, 0xFF	; 255
    254e:	60 81       	ld	r22, Z
    2550:	71 81       	ldd	r23, Z+1	; 0x01
    2552:	82 81       	ldd	r24, Z+2	; 0x02
    2554:	93 81       	ldd	r25, Z+3	; 0x03
    2556:	20 e0       	ldi	r18, 0x00	; 0
    2558:	30 e0       	ldi	r19, 0x00	; 0
    255a:	40 e2       	ldi	r20, 0x20	; 32
    255c:	51 e4       	ldi	r21, 0x41	; 65
    255e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2562:	dc 01       	movw	r26, r24
    2564:	cb 01       	movw	r24, r22
    2566:	bc 01       	movw	r22, r24
    2568:	cd 01       	movw	r24, r26
    256a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    256e:	dc 01       	movw	r26, r24
    2570:	cb 01       	movw	r24, r22
    2572:	9e af       	std	Y+62, r25	; 0x3e
    2574:	8d af       	std	Y+61, r24	; 0x3d
    2576:	0f c0       	rjmp	.+30     	; 0x2596 <main+0x1110>
    2578:	80 e9       	ldi	r24, 0x90	; 144
    257a:	91 e0       	ldi	r25, 0x01	; 1
    257c:	9c af       	std	Y+60, r25	; 0x3c
    257e:	8b af       	std	Y+59, r24	; 0x3b
    2580:	8b ad       	ldd	r24, Y+59	; 0x3b
    2582:	9c ad       	ldd	r25, Y+60	; 0x3c
    2584:	01 97       	sbiw	r24, 0x01	; 1
    2586:	f1 f7       	brne	.-4      	; 0x2584 <main+0x10fe>
    2588:	9c af       	std	Y+60, r25	; 0x3c
    258a:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    258c:	8d ad       	ldd	r24, Y+61	; 0x3d
    258e:	9e ad       	ldd	r25, Y+62	; 0x3e
    2590:	01 97       	sbiw	r24, 0x01	; 1
    2592:	9e af       	std	Y+62, r25	; 0x3e
    2594:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2596:	8d ad       	ldd	r24, Y+61	; 0x3d
    2598:	9e ad       	ldd	r25, Y+62	; 0x3e
    259a:	00 97       	sbiw	r24, 0x00	; 0
    259c:	69 f7       	brne	.-38     	; 0x2578 <main+0x10f2>
    259e:	2a c2       	rjmp	.+1108   	; 0x29f4 <main+0x156e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    25a0:	fe 01       	movw	r30, r28
    25a2:	ff 96       	adiw	r30, 0x3f	; 63
    25a4:	60 81       	ld	r22, Z
    25a6:	71 81       	ldd	r23, Z+1	; 0x01
    25a8:	82 81       	ldd	r24, Z+2	; 0x02
    25aa:	93 81       	ldd	r25, Z+3	; 0x03
    25ac:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    25b0:	dc 01       	movw	r26, r24
    25b2:	cb 01       	movw	r24, r22
    25b4:	9e af       	std	Y+62, r25	; 0x3e
    25b6:	8d af       	std	Y+61, r24	; 0x3d
    25b8:	8d ad       	ldd	r24, Y+61	; 0x3d
    25ba:	9e ad       	ldd	r25, Y+62	; 0x3e
    25bc:	9a af       	std	Y+58, r25	; 0x3a
    25be:	89 af       	std	Y+57, r24	; 0x39
    25c0:	89 ad       	ldd	r24, Y+57	; 0x39
    25c2:	9a ad       	ldd	r25, Y+58	; 0x3a
    25c4:	01 97       	sbiw	r24, 0x01	; 1
    25c6:	f1 f7       	brne	.-4      	; 0x25c4 <main+0x113e>
    25c8:	9a af       	std	Y+58, r25	; 0x3a
    25ca:	89 af       	std	Y+57, r24	; 0x39
    25cc:	13 c2       	rjmp	.+1062   	; 0x29f4 <main+0x156e>
				_delay_ms(1000);


			}
			else if(i==3||i==7)
    25ce:	fe 01       	movw	r30, r28
    25d0:	ed 52       	subi	r30, 0x2D	; 45
    25d2:	ff 4f       	sbci	r31, 0xFF	; 255
    25d4:	80 81       	ld	r24, Z
    25d6:	83 30       	cpi	r24, 0x03	; 3
    25d8:	39 f0       	breq	.+14     	; 0x25e8 <main+0x1162>
    25da:	fe 01       	movw	r30, r28
    25dc:	ed 52       	subi	r30, 0x2D	; 45
    25de:	ff 4f       	sbci	r31, 0xFF	; 255
    25e0:	80 81       	ld	r24, Z
    25e2:	87 30       	cpi	r24, 0x07	; 7
    25e4:	09 f0       	breq	.+2      	; 0x25e8 <main+0x1162>
    25e6:	78 c0       	rjmp	.+240    	; 0x26d8 <main+0x1252>
			{
				setPinVAlue(DIO_PORTD,PIN3,OUTPUT_HIGH);
    25e8:	83 e0       	ldi	r24, 0x03	; 3
    25ea:	63 e0       	ldi	r22, 0x03	; 3
    25ec:	41 e0       	ldi	r20, 0x01	; 1
    25ee:	0e 94 aa 06 	call	0xd54	; 0xd54 <setPinVAlue>
    25f2:	80 e0       	ldi	r24, 0x00	; 0
    25f4:	90 e0       	ldi	r25, 0x00	; 0
    25f6:	aa e7       	ldi	r26, 0x7A	; 122
    25f8:	b4 e4       	ldi	r27, 0x44	; 68
    25fa:	8d ab       	std	Y+53, r24	; 0x35
    25fc:	9e ab       	std	Y+54, r25	; 0x36
    25fe:	af ab       	std	Y+55, r26	; 0x37
    2600:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2602:	6d a9       	ldd	r22, Y+53	; 0x35
    2604:	7e a9       	ldd	r23, Y+54	; 0x36
    2606:	8f a9       	ldd	r24, Y+55	; 0x37
    2608:	98 ad       	ldd	r25, Y+56	; 0x38
    260a:	20 e0       	ldi	r18, 0x00	; 0
    260c:	30 e0       	ldi	r19, 0x00	; 0
    260e:	4a e7       	ldi	r20, 0x7A	; 122
    2610:	55 e4       	ldi	r21, 0x45	; 69
    2612:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2616:	dc 01       	movw	r26, r24
    2618:	cb 01       	movw	r24, r22
    261a:	89 ab       	std	Y+49, r24	; 0x31
    261c:	9a ab       	std	Y+50, r25	; 0x32
    261e:	ab ab       	std	Y+51, r26	; 0x33
    2620:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    2622:	69 a9       	ldd	r22, Y+49	; 0x31
    2624:	7a a9       	ldd	r23, Y+50	; 0x32
    2626:	8b a9       	ldd	r24, Y+51	; 0x33
    2628:	9c a9       	ldd	r25, Y+52	; 0x34
    262a:	20 e0       	ldi	r18, 0x00	; 0
    262c:	30 e0       	ldi	r19, 0x00	; 0
    262e:	40 e8       	ldi	r20, 0x80	; 128
    2630:	5f e3       	ldi	r21, 0x3F	; 63
    2632:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2636:	88 23       	and	r24, r24
    2638:	2c f4       	brge	.+10     	; 0x2644 <main+0x11be>
		__ticks = 1;
    263a:	81 e0       	ldi	r24, 0x01	; 1
    263c:	90 e0       	ldi	r25, 0x00	; 0
    263e:	98 ab       	std	Y+48, r25	; 0x30
    2640:	8f a7       	std	Y+47, r24	; 0x2f
    2642:	3f c0       	rjmp	.+126    	; 0x26c2 <main+0x123c>
	else if (__tmp > 65535)
    2644:	69 a9       	ldd	r22, Y+49	; 0x31
    2646:	7a a9       	ldd	r23, Y+50	; 0x32
    2648:	8b a9       	ldd	r24, Y+51	; 0x33
    264a:	9c a9       	ldd	r25, Y+52	; 0x34
    264c:	20 e0       	ldi	r18, 0x00	; 0
    264e:	3f ef       	ldi	r19, 0xFF	; 255
    2650:	4f e7       	ldi	r20, 0x7F	; 127
    2652:	57 e4       	ldi	r21, 0x47	; 71
    2654:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2658:	18 16       	cp	r1, r24
    265a:	4c f5       	brge	.+82     	; 0x26ae <main+0x1228>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    265c:	6d a9       	ldd	r22, Y+53	; 0x35
    265e:	7e a9       	ldd	r23, Y+54	; 0x36
    2660:	8f a9       	ldd	r24, Y+55	; 0x37
    2662:	98 ad       	ldd	r25, Y+56	; 0x38
    2664:	20 e0       	ldi	r18, 0x00	; 0
    2666:	30 e0       	ldi	r19, 0x00	; 0
    2668:	40 e2       	ldi	r20, 0x20	; 32
    266a:	51 e4       	ldi	r21, 0x41	; 65
    266c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2670:	dc 01       	movw	r26, r24
    2672:	cb 01       	movw	r24, r22
    2674:	bc 01       	movw	r22, r24
    2676:	cd 01       	movw	r24, r26
    2678:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    267c:	dc 01       	movw	r26, r24
    267e:	cb 01       	movw	r24, r22
    2680:	98 ab       	std	Y+48, r25	; 0x30
    2682:	8f a7       	std	Y+47, r24	; 0x2f
    2684:	0f c0       	rjmp	.+30     	; 0x26a4 <main+0x121e>
    2686:	80 e9       	ldi	r24, 0x90	; 144
    2688:	91 e0       	ldi	r25, 0x01	; 1
    268a:	9e a7       	std	Y+46, r25	; 0x2e
    268c:	8d a7       	std	Y+45, r24	; 0x2d
    268e:	8d a5       	ldd	r24, Y+45	; 0x2d
    2690:	9e a5       	ldd	r25, Y+46	; 0x2e
    2692:	01 97       	sbiw	r24, 0x01	; 1
    2694:	f1 f7       	brne	.-4      	; 0x2692 <main+0x120c>
    2696:	9e a7       	std	Y+46, r25	; 0x2e
    2698:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    269a:	8f a5       	ldd	r24, Y+47	; 0x2f
    269c:	98 a9       	ldd	r25, Y+48	; 0x30
    269e:	01 97       	sbiw	r24, 0x01	; 1
    26a0:	98 ab       	std	Y+48, r25	; 0x30
    26a2:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    26a4:	8f a5       	ldd	r24, Y+47	; 0x2f
    26a6:	98 a9       	ldd	r25, Y+48	; 0x30
    26a8:	00 97       	sbiw	r24, 0x00	; 0
    26aa:	69 f7       	brne	.-38     	; 0x2686 <main+0x1200>
    26ac:	a3 c1       	rjmp	.+838    	; 0x29f4 <main+0x156e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    26ae:	69 a9       	ldd	r22, Y+49	; 0x31
    26b0:	7a a9       	ldd	r23, Y+50	; 0x32
    26b2:	8b a9       	ldd	r24, Y+51	; 0x33
    26b4:	9c a9       	ldd	r25, Y+52	; 0x34
    26b6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    26ba:	dc 01       	movw	r26, r24
    26bc:	cb 01       	movw	r24, r22
    26be:	98 ab       	std	Y+48, r25	; 0x30
    26c0:	8f a7       	std	Y+47, r24	; 0x2f
    26c2:	8f a5       	ldd	r24, Y+47	; 0x2f
    26c4:	98 a9       	ldd	r25, Y+48	; 0x30
    26c6:	9c a7       	std	Y+44, r25	; 0x2c
    26c8:	8b a7       	std	Y+43, r24	; 0x2b
    26ca:	8b a5       	ldd	r24, Y+43	; 0x2b
    26cc:	9c a5       	ldd	r25, Y+44	; 0x2c
    26ce:	01 97       	sbiw	r24, 0x01	; 1
    26d0:	f1 f7       	brne	.-4      	; 0x26ce <main+0x1248>
    26d2:	9c a7       	std	Y+44, r25	; 0x2c
    26d4:	8b a7       	std	Y+43, r24	; 0x2b
    26d6:	8e c1       	rjmp	.+796    	; 0x29f4 <main+0x156e>
				_delay_ms(1000);


			}
			else if(i==4||i==12)
    26d8:	fe 01       	movw	r30, r28
    26da:	ed 52       	subi	r30, 0x2D	; 45
    26dc:	ff 4f       	sbci	r31, 0xFF	; 255
    26de:	80 81       	ld	r24, Z
    26e0:	84 30       	cpi	r24, 0x04	; 4
    26e2:	39 f0       	breq	.+14     	; 0x26f2 <main+0x126c>
    26e4:	fe 01       	movw	r30, r28
    26e6:	ed 52       	subi	r30, 0x2D	; 45
    26e8:	ff 4f       	sbci	r31, 0xFF	; 255
    26ea:	80 81       	ld	r24, Z
    26ec:	8c 30       	cpi	r24, 0x0C	; 12
    26ee:	09 f0       	breq	.+2      	; 0x26f2 <main+0x126c>
    26f0:	78 c0       	rjmp	.+240    	; 0x27e2 <main+0x135c>
			{
				setPinVAlue(DIO_PORTC,PIN2,OUTPUT_LOW);
    26f2:	82 e0       	ldi	r24, 0x02	; 2
    26f4:	62 e0       	ldi	r22, 0x02	; 2
    26f6:	40 e0       	ldi	r20, 0x00	; 0
    26f8:	0e 94 aa 06 	call	0xd54	; 0xd54 <setPinVAlue>
    26fc:	80 e0       	ldi	r24, 0x00	; 0
    26fe:	90 e0       	ldi	r25, 0x00	; 0
    2700:	aa e7       	ldi	r26, 0x7A	; 122
    2702:	b4 e4       	ldi	r27, 0x44	; 68
    2704:	8f a3       	std	Y+39, r24	; 0x27
    2706:	98 a7       	std	Y+40, r25	; 0x28
    2708:	a9 a7       	std	Y+41, r26	; 0x29
    270a:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    270c:	6f a1       	ldd	r22, Y+39	; 0x27
    270e:	78 a5       	ldd	r23, Y+40	; 0x28
    2710:	89 a5       	ldd	r24, Y+41	; 0x29
    2712:	9a a5       	ldd	r25, Y+42	; 0x2a
    2714:	20 e0       	ldi	r18, 0x00	; 0
    2716:	30 e0       	ldi	r19, 0x00	; 0
    2718:	4a e7       	ldi	r20, 0x7A	; 122
    271a:	55 e4       	ldi	r21, 0x45	; 69
    271c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2720:	dc 01       	movw	r26, r24
    2722:	cb 01       	movw	r24, r22
    2724:	8b a3       	std	Y+35, r24	; 0x23
    2726:	9c a3       	std	Y+36, r25	; 0x24
    2728:	ad a3       	std	Y+37, r26	; 0x25
    272a:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    272c:	6b a1       	ldd	r22, Y+35	; 0x23
    272e:	7c a1       	ldd	r23, Y+36	; 0x24
    2730:	8d a1       	ldd	r24, Y+37	; 0x25
    2732:	9e a1       	ldd	r25, Y+38	; 0x26
    2734:	20 e0       	ldi	r18, 0x00	; 0
    2736:	30 e0       	ldi	r19, 0x00	; 0
    2738:	40 e8       	ldi	r20, 0x80	; 128
    273a:	5f e3       	ldi	r21, 0x3F	; 63
    273c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2740:	88 23       	and	r24, r24
    2742:	2c f4       	brge	.+10     	; 0x274e <main+0x12c8>
		__ticks = 1;
    2744:	81 e0       	ldi	r24, 0x01	; 1
    2746:	90 e0       	ldi	r25, 0x00	; 0
    2748:	9a a3       	std	Y+34, r25	; 0x22
    274a:	89 a3       	std	Y+33, r24	; 0x21
    274c:	3f c0       	rjmp	.+126    	; 0x27cc <main+0x1346>
	else if (__tmp > 65535)
    274e:	6b a1       	ldd	r22, Y+35	; 0x23
    2750:	7c a1       	ldd	r23, Y+36	; 0x24
    2752:	8d a1       	ldd	r24, Y+37	; 0x25
    2754:	9e a1       	ldd	r25, Y+38	; 0x26
    2756:	20 e0       	ldi	r18, 0x00	; 0
    2758:	3f ef       	ldi	r19, 0xFF	; 255
    275a:	4f e7       	ldi	r20, 0x7F	; 127
    275c:	57 e4       	ldi	r21, 0x47	; 71
    275e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2762:	18 16       	cp	r1, r24
    2764:	4c f5       	brge	.+82     	; 0x27b8 <main+0x1332>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2766:	6f a1       	ldd	r22, Y+39	; 0x27
    2768:	78 a5       	ldd	r23, Y+40	; 0x28
    276a:	89 a5       	ldd	r24, Y+41	; 0x29
    276c:	9a a5       	ldd	r25, Y+42	; 0x2a
    276e:	20 e0       	ldi	r18, 0x00	; 0
    2770:	30 e0       	ldi	r19, 0x00	; 0
    2772:	40 e2       	ldi	r20, 0x20	; 32
    2774:	51 e4       	ldi	r21, 0x41	; 65
    2776:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    277a:	dc 01       	movw	r26, r24
    277c:	cb 01       	movw	r24, r22
    277e:	bc 01       	movw	r22, r24
    2780:	cd 01       	movw	r24, r26
    2782:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2786:	dc 01       	movw	r26, r24
    2788:	cb 01       	movw	r24, r22
    278a:	9a a3       	std	Y+34, r25	; 0x22
    278c:	89 a3       	std	Y+33, r24	; 0x21
    278e:	0f c0       	rjmp	.+30     	; 0x27ae <main+0x1328>
    2790:	80 e9       	ldi	r24, 0x90	; 144
    2792:	91 e0       	ldi	r25, 0x01	; 1
    2794:	98 a3       	std	Y+32, r25	; 0x20
    2796:	8f 8f       	std	Y+31, r24	; 0x1f
    2798:	8f 8d       	ldd	r24, Y+31	; 0x1f
    279a:	98 a1       	ldd	r25, Y+32	; 0x20
    279c:	01 97       	sbiw	r24, 0x01	; 1
    279e:	f1 f7       	brne	.-4      	; 0x279c <main+0x1316>
    27a0:	98 a3       	std	Y+32, r25	; 0x20
    27a2:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    27a4:	89 a1       	ldd	r24, Y+33	; 0x21
    27a6:	9a a1       	ldd	r25, Y+34	; 0x22
    27a8:	01 97       	sbiw	r24, 0x01	; 1
    27aa:	9a a3       	std	Y+34, r25	; 0x22
    27ac:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    27ae:	89 a1       	ldd	r24, Y+33	; 0x21
    27b0:	9a a1       	ldd	r25, Y+34	; 0x22
    27b2:	00 97       	sbiw	r24, 0x00	; 0
    27b4:	69 f7       	brne	.-38     	; 0x2790 <main+0x130a>
    27b6:	1e c1       	rjmp	.+572    	; 0x29f4 <main+0x156e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    27b8:	6b a1       	ldd	r22, Y+35	; 0x23
    27ba:	7c a1       	ldd	r23, Y+36	; 0x24
    27bc:	8d a1       	ldd	r24, Y+37	; 0x25
    27be:	9e a1       	ldd	r25, Y+38	; 0x26
    27c0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    27c4:	dc 01       	movw	r26, r24
    27c6:	cb 01       	movw	r24, r22
    27c8:	9a a3       	std	Y+34, r25	; 0x22
    27ca:	89 a3       	std	Y+33, r24	; 0x21
    27cc:	89 a1       	ldd	r24, Y+33	; 0x21
    27ce:	9a a1       	ldd	r25, Y+34	; 0x22
    27d0:	9e 8f       	std	Y+30, r25	; 0x1e
    27d2:	8d 8f       	std	Y+29, r24	; 0x1d
    27d4:	8d 8d       	ldd	r24, Y+29	; 0x1d
    27d6:	9e 8d       	ldd	r25, Y+30	; 0x1e
    27d8:	01 97       	sbiw	r24, 0x01	; 1
    27da:	f1 f7       	brne	.-4      	; 0x27d8 <main+0x1352>
    27dc:	9e 8f       	std	Y+30, r25	; 0x1e
    27de:	8d 8f       	std	Y+29, r24	; 0x1d
    27e0:	09 c1       	rjmp	.+530    	; 0x29f4 <main+0x156e>
				_delay_ms(1000);


			}
			else if(i==5||i==11)
    27e2:	fe 01       	movw	r30, r28
    27e4:	ed 52       	subi	r30, 0x2D	; 45
    27e6:	ff 4f       	sbci	r31, 0xFF	; 255
    27e8:	80 81       	ld	r24, Z
    27ea:	85 30       	cpi	r24, 0x05	; 5
    27ec:	39 f0       	breq	.+14     	; 0x27fc <main+0x1376>
    27ee:	fe 01       	movw	r30, r28
    27f0:	ed 52       	subi	r30, 0x2D	; 45
    27f2:	ff 4f       	sbci	r31, 0xFF	; 255
    27f4:	80 81       	ld	r24, Z
    27f6:	8b 30       	cpi	r24, 0x0B	; 11
    27f8:	09 f0       	breq	.+2      	; 0x27fc <main+0x1376>
    27fa:	78 c0       	rjmp	.+240    	; 0x28ec <main+0x1466>
			{
				setPinVAlue(DIO_PORTC,PIN7,OUTPUT_LOW);
    27fc:	82 e0       	ldi	r24, 0x02	; 2
    27fe:	67 e0       	ldi	r22, 0x07	; 7
    2800:	40 e0       	ldi	r20, 0x00	; 0
    2802:	0e 94 aa 06 	call	0xd54	; 0xd54 <setPinVAlue>
    2806:	80 e0       	ldi	r24, 0x00	; 0
    2808:	90 e0       	ldi	r25, 0x00	; 0
    280a:	aa e7       	ldi	r26, 0x7A	; 122
    280c:	b4 e4       	ldi	r27, 0x44	; 68
    280e:	89 8f       	std	Y+25, r24	; 0x19
    2810:	9a 8f       	std	Y+26, r25	; 0x1a
    2812:	ab 8f       	std	Y+27, r26	; 0x1b
    2814:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2816:	69 8d       	ldd	r22, Y+25	; 0x19
    2818:	7a 8d       	ldd	r23, Y+26	; 0x1a
    281a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    281c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    281e:	20 e0       	ldi	r18, 0x00	; 0
    2820:	30 e0       	ldi	r19, 0x00	; 0
    2822:	4a e7       	ldi	r20, 0x7A	; 122
    2824:	55 e4       	ldi	r21, 0x45	; 69
    2826:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    282a:	dc 01       	movw	r26, r24
    282c:	cb 01       	movw	r24, r22
    282e:	8d 8b       	std	Y+21, r24	; 0x15
    2830:	9e 8b       	std	Y+22, r25	; 0x16
    2832:	af 8b       	std	Y+23, r26	; 0x17
    2834:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    2836:	6d 89       	ldd	r22, Y+21	; 0x15
    2838:	7e 89       	ldd	r23, Y+22	; 0x16
    283a:	8f 89       	ldd	r24, Y+23	; 0x17
    283c:	98 8d       	ldd	r25, Y+24	; 0x18
    283e:	20 e0       	ldi	r18, 0x00	; 0
    2840:	30 e0       	ldi	r19, 0x00	; 0
    2842:	40 e8       	ldi	r20, 0x80	; 128
    2844:	5f e3       	ldi	r21, 0x3F	; 63
    2846:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    284a:	88 23       	and	r24, r24
    284c:	2c f4       	brge	.+10     	; 0x2858 <main+0x13d2>
		__ticks = 1;
    284e:	81 e0       	ldi	r24, 0x01	; 1
    2850:	90 e0       	ldi	r25, 0x00	; 0
    2852:	9c 8b       	std	Y+20, r25	; 0x14
    2854:	8b 8b       	std	Y+19, r24	; 0x13
    2856:	3f c0       	rjmp	.+126    	; 0x28d6 <main+0x1450>
	else if (__tmp > 65535)
    2858:	6d 89       	ldd	r22, Y+21	; 0x15
    285a:	7e 89       	ldd	r23, Y+22	; 0x16
    285c:	8f 89       	ldd	r24, Y+23	; 0x17
    285e:	98 8d       	ldd	r25, Y+24	; 0x18
    2860:	20 e0       	ldi	r18, 0x00	; 0
    2862:	3f ef       	ldi	r19, 0xFF	; 255
    2864:	4f e7       	ldi	r20, 0x7F	; 127
    2866:	57 e4       	ldi	r21, 0x47	; 71
    2868:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    286c:	18 16       	cp	r1, r24
    286e:	4c f5       	brge	.+82     	; 0x28c2 <main+0x143c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2870:	69 8d       	ldd	r22, Y+25	; 0x19
    2872:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2874:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2876:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2878:	20 e0       	ldi	r18, 0x00	; 0
    287a:	30 e0       	ldi	r19, 0x00	; 0
    287c:	40 e2       	ldi	r20, 0x20	; 32
    287e:	51 e4       	ldi	r21, 0x41	; 65
    2880:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2884:	dc 01       	movw	r26, r24
    2886:	cb 01       	movw	r24, r22
    2888:	bc 01       	movw	r22, r24
    288a:	cd 01       	movw	r24, r26
    288c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2890:	dc 01       	movw	r26, r24
    2892:	cb 01       	movw	r24, r22
    2894:	9c 8b       	std	Y+20, r25	; 0x14
    2896:	8b 8b       	std	Y+19, r24	; 0x13
    2898:	0f c0       	rjmp	.+30     	; 0x28b8 <main+0x1432>
    289a:	80 e9       	ldi	r24, 0x90	; 144
    289c:	91 e0       	ldi	r25, 0x01	; 1
    289e:	9a 8b       	std	Y+18, r25	; 0x12
    28a0:	89 8b       	std	Y+17, r24	; 0x11
    28a2:	89 89       	ldd	r24, Y+17	; 0x11
    28a4:	9a 89       	ldd	r25, Y+18	; 0x12
    28a6:	01 97       	sbiw	r24, 0x01	; 1
    28a8:	f1 f7       	brne	.-4      	; 0x28a6 <main+0x1420>
    28aa:	9a 8b       	std	Y+18, r25	; 0x12
    28ac:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    28ae:	8b 89       	ldd	r24, Y+19	; 0x13
    28b0:	9c 89       	ldd	r25, Y+20	; 0x14
    28b2:	01 97       	sbiw	r24, 0x01	; 1
    28b4:	9c 8b       	std	Y+20, r25	; 0x14
    28b6:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    28b8:	8b 89       	ldd	r24, Y+19	; 0x13
    28ba:	9c 89       	ldd	r25, Y+20	; 0x14
    28bc:	00 97       	sbiw	r24, 0x00	; 0
    28be:	69 f7       	brne	.-38     	; 0x289a <main+0x1414>
    28c0:	99 c0       	rjmp	.+306    	; 0x29f4 <main+0x156e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    28c2:	6d 89       	ldd	r22, Y+21	; 0x15
    28c4:	7e 89       	ldd	r23, Y+22	; 0x16
    28c6:	8f 89       	ldd	r24, Y+23	; 0x17
    28c8:	98 8d       	ldd	r25, Y+24	; 0x18
    28ca:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    28ce:	dc 01       	movw	r26, r24
    28d0:	cb 01       	movw	r24, r22
    28d2:	9c 8b       	std	Y+20, r25	; 0x14
    28d4:	8b 8b       	std	Y+19, r24	; 0x13
    28d6:	8b 89       	ldd	r24, Y+19	; 0x13
    28d8:	9c 89       	ldd	r25, Y+20	; 0x14
    28da:	98 8b       	std	Y+16, r25	; 0x10
    28dc:	8f 87       	std	Y+15, r24	; 0x0f
    28de:	8f 85       	ldd	r24, Y+15	; 0x0f
    28e0:	98 89       	ldd	r25, Y+16	; 0x10
    28e2:	01 97       	sbiw	r24, 0x01	; 1
    28e4:	f1 f7       	brne	.-4      	; 0x28e2 <main+0x145c>
    28e6:	98 8b       	std	Y+16, r25	; 0x10
    28e8:	8f 87       	std	Y+15, r24	; 0x0f
    28ea:	84 c0       	rjmp	.+264    	; 0x29f4 <main+0x156e>
				_delay_ms(1000);


			}
			else if(i==6||i==10)
    28ec:	fe 01       	movw	r30, r28
    28ee:	ed 52       	subi	r30, 0x2D	; 45
    28f0:	ff 4f       	sbci	r31, 0xFF	; 255
    28f2:	80 81       	ld	r24, Z
    28f4:	86 30       	cpi	r24, 0x06	; 6
    28f6:	39 f0       	breq	.+14     	; 0x2906 <main+0x1480>
    28f8:	fe 01       	movw	r30, r28
    28fa:	ed 52       	subi	r30, 0x2D	; 45
    28fc:	ff 4f       	sbci	r31, 0xFF	; 255
    28fe:	80 81       	ld	r24, Z
    2900:	8a 30       	cpi	r24, 0x0A	; 10
    2902:	09 f0       	breq	.+2      	; 0x2906 <main+0x1480>
    2904:	77 c0       	rjmp	.+238    	; 0x29f4 <main+0x156e>
			{
				setPinVAlue(DIO_PORTD,PIN3,OUTPUT_LOW);
    2906:	83 e0       	ldi	r24, 0x03	; 3
    2908:	63 e0       	ldi	r22, 0x03	; 3
    290a:	40 e0       	ldi	r20, 0x00	; 0
    290c:	0e 94 aa 06 	call	0xd54	; 0xd54 <setPinVAlue>
    2910:	80 e0       	ldi	r24, 0x00	; 0
    2912:	90 e0       	ldi	r25, 0x00	; 0
    2914:	aa e7       	ldi	r26, 0x7A	; 122
    2916:	b4 e4       	ldi	r27, 0x44	; 68
    2918:	8b 87       	std	Y+11, r24	; 0x0b
    291a:	9c 87       	std	Y+12, r25	; 0x0c
    291c:	ad 87       	std	Y+13, r26	; 0x0d
    291e:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2920:	6b 85       	ldd	r22, Y+11	; 0x0b
    2922:	7c 85       	ldd	r23, Y+12	; 0x0c
    2924:	8d 85       	ldd	r24, Y+13	; 0x0d
    2926:	9e 85       	ldd	r25, Y+14	; 0x0e
    2928:	20 e0       	ldi	r18, 0x00	; 0
    292a:	30 e0       	ldi	r19, 0x00	; 0
    292c:	4a e7       	ldi	r20, 0x7A	; 122
    292e:	55 e4       	ldi	r21, 0x45	; 69
    2930:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2934:	dc 01       	movw	r26, r24
    2936:	cb 01       	movw	r24, r22
    2938:	8f 83       	std	Y+7, r24	; 0x07
    293a:	98 87       	std	Y+8, r25	; 0x08
    293c:	a9 87       	std	Y+9, r26	; 0x09
    293e:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2940:	6f 81       	ldd	r22, Y+7	; 0x07
    2942:	78 85       	ldd	r23, Y+8	; 0x08
    2944:	89 85       	ldd	r24, Y+9	; 0x09
    2946:	9a 85       	ldd	r25, Y+10	; 0x0a
    2948:	20 e0       	ldi	r18, 0x00	; 0
    294a:	30 e0       	ldi	r19, 0x00	; 0
    294c:	40 e8       	ldi	r20, 0x80	; 128
    294e:	5f e3       	ldi	r21, 0x3F	; 63
    2950:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2954:	88 23       	and	r24, r24
    2956:	2c f4       	brge	.+10     	; 0x2962 <main+0x14dc>
		__ticks = 1;
    2958:	81 e0       	ldi	r24, 0x01	; 1
    295a:	90 e0       	ldi	r25, 0x00	; 0
    295c:	9e 83       	std	Y+6, r25	; 0x06
    295e:	8d 83       	std	Y+5, r24	; 0x05
    2960:	3f c0       	rjmp	.+126    	; 0x29e0 <main+0x155a>
	else if (__tmp > 65535)
    2962:	6f 81       	ldd	r22, Y+7	; 0x07
    2964:	78 85       	ldd	r23, Y+8	; 0x08
    2966:	89 85       	ldd	r24, Y+9	; 0x09
    2968:	9a 85       	ldd	r25, Y+10	; 0x0a
    296a:	20 e0       	ldi	r18, 0x00	; 0
    296c:	3f ef       	ldi	r19, 0xFF	; 255
    296e:	4f e7       	ldi	r20, 0x7F	; 127
    2970:	57 e4       	ldi	r21, 0x47	; 71
    2972:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2976:	18 16       	cp	r1, r24
    2978:	4c f5       	brge	.+82     	; 0x29cc <main+0x1546>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    297a:	6b 85       	ldd	r22, Y+11	; 0x0b
    297c:	7c 85       	ldd	r23, Y+12	; 0x0c
    297e:	8d 85       	ldd	r24, Y+13	; 0x0d
    2980:	9e 85       	ldd	r25, Y+14	; 0x0e
    2982:	20 e0       	ldi	r18, 0x00	; 0
    2984:	30 e0       	ldi	r19, 0x00	; 0
    2986:	40 e2       	ldi	r20, 0x20	; 32
    2988:	51 e4       	ldi	r21, 0x41	; 65
    298a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    298e:	dc 01       	movw	r26, r24
    2990:	cb 01       	movw	r24, r22
    2992:	bc 01       	movw	r22, r24
    2994:	cd 01       	movw	r24, r26
    2996:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    299a:	dc 01       	movw	r26, r24
    299c:	cb 01       	movw	r24, r22
    299e:	9e 83       	std	Y+6, r25	; 0x06
    29a0:	8d 83       	std	Y+5, r24	; 0x05
    29a2:	0f c0       	rjmp	.+30     	; 0x29c2 <main+0x153c>
    29a4:	80 e9       	ldi	r24, 0x90	; 144
    29a6:	91 e0       	ldi	r25, 0x01	; 1
    29a8:	9c 83       	std	Y+4, r25	; 0x04
    29aa:	8b 83       	std	Y+3, r24	; 0x03
    29ac:	8b 81       	ldd	r24, Y+3	; 0x03
    29ae:	9c 81       	ldd	r25, Y+4	; 0x04
    29b0:	01 97       	sbiw	r24, 0x01	; 1
    29b2:	f1 f7       	brne	.-4      	; 0x29b0 <main+0x152a>
    29b4:	9c 83       	std	Y+4, r25	; 0x04
    29b6:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    29b8:	8d 81       	ldd	r24, Y+5	; 0x05
    29ba:	9e 81       	ldd	r25, Y+6	; 0x06
    29bc:	01 97       	sbiw	r24, 0x01	; 1
    29be:	9e 83       	std	Y+6, r25	; 0x06
    29c0:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    29c2:	8d 81       	ldd	r24, Y+5	; 0x05
    29c4:	9e 81       	ldd	r25, Y+6	; 0x06
    29c6:	00 97       	sbiw	r24, 0x00	; 0
    29c8:	69 f7       	brne	.-38     	; 0x29a4 <main+0x151e>
    29ca:	14 c0       	rjmp	.+40     	; 0x29f4 <main+0x156e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    29cc:	6f 81       	ldd	r22, Y+7	; 0x07
    29ce:	78 85       	ldd	r23, Y+8	; 0x08
    29d0:	89 85       	ldd	r24, Y+9	; 0x09
    29d2:	9a 85       	ldd	r25, Y+10	; 0x0a
    29d4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    29d8:	dc 01       	movw	r26, r24
    29da:	cb 01       	movw	r24, r22
    29dc:	9e 83       	std	Y+6, r25	; 0x06
    29de:	8d 83       	std	Y+5, r24	; 0x05
    29e0:	8d 81       	ldd	r24, Y+5	; 0x05
    29e2:	9e 81       	ldd	r25, Y+6	; 0x06
    29e4:	9a 83       	std	Y+2, r25	; 0x02
    29e6:	89 83       	std	Y+1, r24	; 0x01
    29e8:	89 81       	ldd	r24, Y+1	; 0x01
    29ea:	9a 81       	ldd	r25, Y+2	; 0x02
    29ec:	01 97       	sbiw	r24, 0x01	; 1
    29ee:	f1 f7       	brne	.-4      	; 0x29ec <main+0x1566>
    29f0:	9a 83       	std	Y+2, r25	; 0x02
    29f2:	89 83       	std	Y+1, r24	; 0x01
			setPinVAlue(DIO_PORTD,PIN3,OUTPUT_LOW);

		}
		else if(1==Button3_Value)
		{
			for(i=1;i<=12;i++)
    29f4:	de 01       	movw	r26, r28
    29f6:	ad 52       	subi	r26, 0x2D	; 45
    29f8:	bf 4f       	sbci	r27, 0xFF	; 255
    29fa:	fe 01       	movw	r30, r28
    29fc:	ed 52       	subi	r30, 0x2D	; 45
    29fe:	ff 4f       	sbci	r31, 0xFF	; 255
    2a00:	80 81       	ld	r24, Z
    2a02:	8f 5f       	subi	r24, 0xFF	; 255
    2a04:	8c 93       	st	X, r24
    2a06:	fe 01       	movw	r30, r28
    2a08:	ed 52       	subi	r30, 0x2D	; 45
    2a0a:	ff 4f       	sbci	r31, 0xFF	; 255
    2a0c:	80 81       	ld	r24, Z
    2a0e:	8d 30       	cpi	r24, 0x0D	; 13
    2a10:	08 f4       	brcc	.+2      	; 0x2a14 <main+0x158e>
    2a12:	7e cc       	rjmp	.-1796   	; 0x2310 <main+0xe8a>
    2a14:	0c 94 83 0a 	jmp	0x1506	; 0x1506 <main+0x80>

00002a18 <__prologue_saves__>:
    2a18:	2f 92       	push	r2
    2a1a:	3f 92       	push	r3
    2a1c:	4f 92       	push	r4
    2a1e:	5f 92       	push	r5
    2a20:	6f 92       	push	r6
    2a22:	7f 92       	push	r7
    2a24:	8f 92       	push	r8
    2a26:	9f 92       	push	r9
    2a28:	af 92       	push	r10
    2a2a:	bf 92       	push	r11
    2a2c:	cf 92       	push	r12
    2a2e:	df 92       	push	r13
    2a30:	ef 92       	push	r14
    2a32:	ff 92       	push	r15
    2a34:	0f 93       	push	r16
    2a36:	1f 93       	push	r17
    2a38:	cf 93       	push	r28
    2a3a:	df 93       	push	r29
    2a3c:	cd b7       	in	r28, 0x3d	; 61
    2a3e:	de b7       	in	r29, 0x3e	; 62
    2a40:	ca 1b       	sub	r28, r26
    2a42:	db 0b       	sbc	r29, r27
    2a44:	0f b6       	in	r0, 0x3f	; 63
    2a46:	f8 94       	cli
    2a48:	de bf       	out	0x3e, r29	; 62
    2a4a:	0f be       	out	0x3f, r0	; 63
    2a4c:	cd bf       	out	0x3d, r28	; 61
    2a4e:	09 94       	ijmp

00002a50 <__epilogue_restores__>:
    2a50:	2a 88       	ldd	r2, Y+18	; 0x12
    2a52:	39 88       	ldd	r3, Y+17	; 0x11
    2a54:	48 88       	ldd	r4, Y+16	; 0x10
    2a56:	5f 84       	ldd	r5, Y+15	; 0x0f
    2a58:	6e 84       	ldd	r6, Y+14	; 0x0e
    2a5a:	7d 84       	ldd	r7, Y+13	; 0x0d
    2a5c:	8c 84       	ldd	r8, Y+12	; 0x0c
    2a5e:	9b 84       	ldd	r9, Y+11	; 0x0b
    2a60:	aa 84       	ldd	r10, Y+10	; 0x0a
    2a62:	b9 84       	ldd	r11, Y+9	; 0x09
    2a64:	c8 84       	ldd	r12, Y+8	; 0x08
    2a66:	df 80       	ldd	r13, Y+7	; 0x07
    2a68:	ee 80       	ldd	r14, Y+6	; 0x06
    2a6a:	fd 80       	ldd	r15, Y+5	; 0x05
    2a6c:	0c 81       	ldd	r16, Y+4	; 0x04
    2a6e:	1b 81       	ldd	r17, Y+3	; 0x03
    2a70:	aa 81       	ldd	r26, Y+2	; 0x02
    2a72:	b9 81       	ldd	r27, Y+1	; 0x01
    2a74:	ce 0f       	add	r28, r30
    2a76:	d1 1d       	adc	r29, r1
    2a78:	0f b6       	in	r0, 0x3f	; 63
    2a7a:	f8 94       	cli
    2a7c:	de bf       	out	0x3e, r29	; 62
    2a7e:	0f be       	out	0x3f, r0	; 63
    2a80:	cd bf       	out	0x3d, r28	; 61
    2a82:	ed 01       	movw	r28, r26
    2a84:	08 95       	ret

00002a86 <_exit>:
    2a86:	f8 94       	cli

00002a88 <__stop_program>:
    2a88:	ff cf       	rjmp	.-2      	; 0x2a88 <__stop_program>
